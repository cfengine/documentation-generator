2013-08-16T15:12:33+0200    error: Couldn't find a private key at '/home/jenkins/.cfagent/ppkeys/localhost.priv', use cf-key to get one. (fopen: No such file or directory)
2013-08-16T15:12:33+0200  warning: No public/private key pair is loaded, trying to reload
2013-08-16T15:12:33+0200    error: Couldn't find a private key at '/home/jenkins/.cfagent/ppkeys/localhost.priv', use cf-key to get one. (fopen: No such file or directory)
2013-08-16T15:12:33+0200    error: No public/private key pair found
{
      "bundles": [
        {
          "sourcePath": "../core/masterfiles/lib/3.6/feature.cf",
          "line": 1,
          "namespace": "default",
          "name": "feature",
          "bundleType": "agent",
          "arguments": [],
          "promiseTypes": [
            {
              "line": 17,
              "name": "classes",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 18,
                      "promiser": "parsed_$(on)",
                      "attributes": [
                        {
                          "line": 20,
                          "lval": "expression",
                          "rval": {
                            "type": "functionCall",
                            "name": "regextract",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "feature_set_([0-9]+[kmgKMG]?)_(.*)"
                              },
                              {
                                "type": "string",
                                "value": "$(on)"
                              },
                              {
                                "type": "string",
                                "value": "extract_$(on)"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 22,
                      "promiser": "parsed_$(off)",
                      "attributes": [
                        {
                          "line": 24,
                          "lval": "expression",
                          "rval": {
                            "type": "functionCall",
                            "name": "regextract",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "feature_unset_(.*)"
                              },
                              {
                                "type": "string",
                                "value": "$(off)"
                              },
                              {
                                "type": "string",
                                "value": "extract_$(off)"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 26,
                      "promiser": "$(extract_$(on)[2])",
                      "attributes": [
                        {
                          "line": 26,
                          "lval": "expression",
                          "rval": {
                            "type": "string",
                            "value": "parsed_$(on)"
                          }
                        },
                        {
                          "line": 27,
                          "lval": "persistence",
                          "rval": {
                            "type": "string",
                            "value": "$(extract_$(on)[1])"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 29,
              "name": "vars",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 30,
                      "promiser": "on",
                      "attributes": [
                        {
                          "line": 30,
                          "lval": "slist",
                          "rval": {
                            "type": "functionCall",
                            "name": "classesmatching",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "feature_set_.*"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 31,
                      "promiser": "off",
                      "attributes": [
                        {
                          "line": 31,
                          "lval": "slist",
                          "rval": {
                            "type": "functionCall",
                            "name": "classesmatching",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "feature_unset_.*"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 33,
                      "promiser": "_$(off)",
                      "attributes": [
                        {
                          "line": 33,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": "off"
                          }
                        },
                        {
                          "line": 33,
                          "lval": "classes",
                          "rval": {
                            "type": "functionCall",
                            "name": "feature_cancel",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(extract_$(off)[1])"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 35,
              "name": "reports",
              "contexts": [
                {
                  "name": "inform_mode",
                  "promises": [
                    {
                      "line": 37,
                      "promiser": "$(this.bundle): $(on) => SET class '$(extract_$(on)[2]) for '$(extract_$(on)[1])'",
                      "attributes": [
                        {
                          "line": 38,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "string",
                            "value": "parsed_$(on)"
                          }
                        }
                      ]
                    },
                    {
                      "line": 40,
                      "promiser": "$(this.bundle): $(off) => UNSET class '$(extract_$(off)[1])'",
                      "attributes": [
                        {
                          "line": 41,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "string",
                            "value": "parsed_$(off)"
                          }
                        }
                      ]
                    },
                    {
                      "line": 43,
                      "promiser": "$(this.bundle): have $(extract_$(on)[2])",
                      "attributes": [
                        {
                          "line": 43,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "string",
                            "value": "$(extract_$(on)[2])"
                          }
                        }
                      ]
                    },
                    {
                      "line": 44,
                      "promiser": "$(this.bundle): have no $(extract_$(on)[2])",
                      "attributes": [
                        {
                          "line": 44,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "string",
                            "value": "!$(extract_$(on)[2])"
                          }
                        }
                      ]
                    },
                    {
                      "line": 46,
                      "promiser": "$(this.bundle): have $(extract_$(off)[1])",
                      "attributes": [
                        {
                          "line": 46,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "string",
                            "value": "$(extract_$(off)[1])"
                          }
                        }
                      ]
                    },
                    {
                      "line": 47,
                      "promiser": "$(this.bundle): have no $(extract_$(off)[1])",
                      "attributes": [
                        {
                          "line": 47,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "string",
                            "value": "!$(extract_$(off)[1])"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../core/masterfiles/lib/3.6/feature.cf",
          "line": 50,
          "namespace": "default",
          "name": "feature_test",
          "bundleType": "agent",
          "arguments": [],
          "promiseTypes": [
            {
              "line": 60,
              "name": "classes",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 61,
                      "promiser": "parsed_$(on)",
                      "attributes": [
                        {
                          "line": 63,
                          "lval": "expression",
                          "rval": {
                            "type": "functionCall",
                            "name": "regextract",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "feature_set_([0-9]+[kmgKMG]?)_(.*)"
                              },
                              {
                                "type": "string",
                                "value": "$(on)"
                              },
                              {
                                "type": "string",
                                "value": "extract_$(on)"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 65,
                      "promiser": "parsed_$(off)",
                      "attributes": [
                        {
                          "line": 67,
                          "lval": "expression",
                          "rval": {
                            "type": "functionCall",
                            "name": "regextract",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "feature_unset_(.*)"
                              },
                              {
                                "type": "string",
                                "value": "$(off)"
                              },
                              {
                                "type": "string",
                                "value": "extract_$(off)"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 69,
              "name": "vars",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 70,
                      "promiser": "on",
                      "attributes": [
                        {
                          "line": 70,
                          "lval": "slist",
                          "rval": {
                            "type": "functionCall",
                            "name": "classesmatching",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "feature_set_.*"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 71,
                      "promiser": "off",
                      "attributes": [
                        {
                          "line": 71,
                          "lval": "slist",
                          "rval": {
                            "type": "functionCall",
                            "name": "classesmatching",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "feature_unset_.*"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 73,
              "name": "reports",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 74,
                      "promiser": "$(this.bundle): have $(extract_$(on)[2])",
                      "attributes": [
                        {
                          "line": 74,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "string",
                            "value": "$(extract_$(on)[2])"
                          }
                        }
                      ]
                    },
                    {
                      "line": 75,
                      "promiser": "$(this.bundle): have no $(extract_$(on)[2])",
                      "attributes": [
                        {
                          "line": 75,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "string",
                            "value": "!$(extract_$(on)[2])"
                          }
                        }
                      ]
                    },
                    {
                      "line": 77,
                      "promiser": "$(this.bundle): have $(extract_$(off)[1])",
                      "attributes": [
                        {
                          "line": 77,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "string",
                            "value": "$(extract_$(off)[1])"
                          }
                        }
                      ]
                    },
                    {
                      "line": 78,
                      "promiser": "$(this.bundle): have no $(extract_$(off)[1])",
                      "attributes": [
                        {
                          "line": 78,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "string",
                            "value": "!$(extract_$(off)[1])"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "bodies": [
        {
          "sourcePath": "../core/masterfiles/lib/3.6/feature.cf",
          "line": 81,
          "namespace": "default",
          "name": "feature_cancel",
          "bodyType": "classes",
          "arguments": [
            "x"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 83,
                  "lval": "cancel_kept",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "$(x)"
                      }
                    ]
                  }
                },
                {
                  "line": 84,
                  "lval": "cancel_repaired",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "$(x)"
                      }
                    ]
                  }
                }
              ]
            }
          ]
        }
      ]
    }