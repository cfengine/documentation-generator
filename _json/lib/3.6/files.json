Couldn't find a private key at '/home/jenkins/.cfagent/ppkeys/localhost.priv', use cf-key to get one. (fopen: No such file or directory)
No public/private key pair is loaded, trying to reload
Couldn't find a private key at '/home/jenkins/.cfagent/ppkeys/localhost.priv', use cf-key to get one. (fopen: No such file or directory)
No public/private key pair found
{
      "bundles": [
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 50,
          "namespace": "default",
          "name": "files_common",
          "bundleType": "common",
          "arguments": [],
          "promiseTypes": [
            {
              "line": 53,
              "name": "vars",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 54,
                      "promiser": "inputs",
                      "attributes": [
                        {
                          "line": 54,
                          "lval": "slist",
                          "rval": {
                            "type": "list",
                            "value": [
                              {
                                "type": "string",
                                "value": "$(this.promise_dirname)/common.cf"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 67,
          "namespace": "default",
          "name": "insert_lines",
          "bundleType": "edit_line",
          "arguments": [
            "lines"
          ],
          "promiseTypes": [
            {
              "line": 69,
              "name": "insert_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 71,
                      "promiser": "$(lines)",
                      "attributes": [
                        {
                          "line": 72,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Append lines if they don\\'t exist"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 77,
          "namespace": "default",
          "name": "insert_file",
          "bundleType": "edit_line",
          "arguments": [
            "templatefile"
          ],
          "promiseTypes": [
            {
              "line": 79,
              "name": "insert_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 81,
                      "promiser": "$(templatefile)",
                      "attributes": [
                        {
                          "line": 82,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Insert the template file into the file being edited"
                          }
                        },
                        {
                          "line": 83,
                          "lval": "insert_type",
                          "rval": {
                            "type": "string",
                            "value": "file"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 88,
          "namespace": "default",
          "name": "comment_lines_matching",
          "bundleType": "edit_line",
          "arguments": [
            "regex",
            "comment"
          ],
          "promiseTypes": [
            {
              "line": 93,
              "name": "replace_patterns",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 95,
                      "promiser": "^($(regex))$",
                      "attributes": [
                        {
                          "line": 97,
                          "lval": "replace_with",
                          "rval": {
                            "type": "functionCall",
                            "name": "comment",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(comment)"
                              }
                            ]
                          }
                        },
                        {
                          "line": 98,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Search and replace string"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 103,
          "namespace": "default",
          "name": "uncomment_lines_matching",
          "bundleType": "edit_line",
          "arguments": [
            "regex",
            "comment"
          ],
          "promiseTypes": [
            {
              "line": 109,
              "name": "replace_patterns",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 111,
                      "promiser": "^$(comment)\\s?($(regex))$",
                      "attributes": [
                        {
                          "line": 113,
                          "lval": "replace_with",
                          "rval": {
                            "type": "symbol",
                            "value": "uncomment"
                          }
                        },
                        {
                          "line": 114,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Uncomment lines matching a regular expression"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 119,
          "namespace": "default",
          "name": "comment_lines_containing",
          "bundleType": "edit_line",
          "arguments": [
            "regex",
            "comment"
          ],
          "promiseTypes": [
            {
              "line": 124,
              "name": "replace_patterns",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 126,
                      "promiser": "^((?!$(comment)).*$(regex).*)$",
                      "attributes": [
                        {
                          "line": 128,
                          "lval": "replace_with",
                          "rval": {
                            "type": "functionCall",
                            "name": "comment",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(comment)"
                              }
                            ]
                          }
                        },
                        {
                          "line": 129,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Comment out lines in a file"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 134,
          "namespace": "default",
          "name": "uncomment_lines_containing",
          "bundleType": "edit_line",
          "arguments": [
            "regex",
            "comment"
          ],
          "promiseTypes": [
            {
              "line": 140,
              "name": "replace_patterns",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 142,
                      "promiser": "^$(comment)\\s?(.*$(regex).*)$",
                      "attributes": [
                        {
                          "line": 144,
                          "lval": "replace_with",
                          "rval": {
                            "type": "symbol",
                            "value": "uncomment"
                          }
                        },
                        {
                          "line": 145,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Uncomment a line containing a fragment"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 150,
          "namespace": "default",
          "name": "delete_lines_matching",
          "bundleType": "edit_line",
          "arguments": [
            "regex"
          ],
          "promiseTypes": [
            {
              "line": 152,
              "name": "delete_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 154,
                      "promiser": "$(regex)",
                      "attributes": [
                        {
                          "line": 156,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Delete lines matching regular expressions"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 161,
          "namespace": "default",
          "name": "warn_lines_matching",
          "bundleType": "edit_line",
          "arguments": [
            "regex"
          ],
          "promiseTypes": [
            {
              "line": 163,
              "name": "delete_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 165,
                      "promiser": "$(regex)",
                      "attributes": [
                        {
                          "line": 167,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Warn about lines in a file"
                          }
                        },
                        {
                          "line": 168,
                          "lval": "action",
                          "rval": {
                            "type": "symbol",
                            "value": "warn_only"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 173,
          "namespace": "default",
          "name": "append_if_no_line",
          "bundleType": "edit_line",
          "arguments": [
            "str"
          ],
          "promiseTypes": [
            {
              "line": 175,
              "name": "insert_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 177,
                      "promiser": "$(str)",
                      "attributes": [
                        {
                          "line": 179,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Append a line to the file if it doesn\\'t already exist"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 184,
          "namespace": "default",
          "name": "append_if_no_lines",
          "bundleType": "edit_line",
          "arguments": [
            "list"
          ],
          "promiseTypes": [
            {
              "line": 186,
              "name": "insert_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 188,
                      "promiser": "$(list)",
                      "attributes": [
                        {
                          "line": 190,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Append lines to the file if they don\\'t already exist"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 195,
          "namespace": "default",
          "name": "replace_line_end",
          "bundleType": "edit_line",
          "arguments": [
            "start",
            "end"
          ],
          "promiseTypes": [
            {
              "line": 204,
              "name": "field_edits",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 206,
                      "promiser": "\\s*$(start)\\s.*",
                      "attributes": [
                        {
                          "line": 207,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Replace lines with $(this.start) and $(this.end)"
                          }
                        },
                        {
                          "line": 208,
                          "lval": "edit_field",
                          "rval": {
                            "type": "functionCall",
                            "name": "line",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "(^|\\s)$(start)\\s*"
                              },
                              {
                                "type": "string",
                                "value": "2"
                              },
                              {
                                "type": "string",
                                "value": "$(end)"
                              },
                              {
                                "type": "string",
                                "value": "set"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 213,
          "namespace": "default",
          "name": "append_to_line_end",
          "bundleType": "edit_line",
          "arguments": [
            "start",
            "end"
          ],
          "promiseTypes": [
            {
              "line": 236,
              "name": "field_edits",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 238,
                      "promiser": "\\s*$(start)\\s.*",
                      "attributes": [
                        {
                          "line": 239,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Append lines with $(this.start) and $(this.end)"
                          }
                        },
                        {
                          "line": 240,
                          "lval": "edit_field",
                          "rval": {
                            "type": "functionCall",
                            "name": "line",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "(^|\\s)$(start)\\s*"
                              },
                              {
                                "type": "string",
                                "value": "2"
                              },
                              {
                                "type": "string",
                                "value": "$(end)"
                              },
                              {
                                "type": "string",
                                "value": "append"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 245,
          "namespace": "default",
          "name": "regex_replace",
          "bundleType": "edit_line",
          "arguments": [
            "find",
            "replace"
          ],
          "promiseTypes": [
            {
              "line": 249,
              "name": "replace_patterns",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 251,
                      "promiser": "$(find)",
                      "attributes": [
                        {
                          "line": 252,
                          "lval": "replace_with",
                          "rval": {
                            "type": "functionCall",
                            "name": "value",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(replace)"
                              }
                            ]
                          }
                        },
                        {
                          "line": 253,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Search and replace string"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 258,
          "namespace": "default",
          "name": "resolvconf",
          "bundleType": "edit_line",
          "arguments": [
            "search",
            "list"
          ],
          "promiseTypes": [
            {
              "line": 264,
              "name": "delete_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 266,
                      "promiser": "search.*",
                      "attributes": [
                        {
                          "line": 266,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Reset search lines from resolver"
                          }
                        }
                      ]
                    },
                    {
                      "line": 267,
                      "promiser": "nameserver.*",
                      "attributes": [
                        {
                          "line": 267,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Reset nameservers in resolver"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 269,
              "name": "insert_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 271,
                      "promiser": "search $(search)",
                      "attributes": [
                        {
                          "line": 271,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Add search domains to resolver"
                          }
                        }
                      ]
                    },
                    {
                      "line": 272,
                      "promiser": "nameserver $(list)",
                      "attributes": [
                        {
                          "line": 272,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Add name servers to resolver"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 277,
          "namespace": "default",
          "name": "resolvconf_o",
          "bundleType": "edit_line",
          "arguments": [
            "search",
            "list",
            "options"
          ],
          "promiseTypes": [
            {
              "line": 284,
              "name": "delete_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 286,
                      "promiser": "search.*",
                      "attributes": [
                        {
                          "line": 286,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Reset search lines from resolver"
                          }
                        }
                      ]
                    },
                    {
                      "line": 287,
                      "promiser": "nameserver.*",
                      "attributes": [
                        {
                          "line": 287,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Reset nameservers in resolver"
                          }
                        }
                      ]
                    },
                    {
                      "line": 288,
                      "promiser": "options.*",
                      "attributes": [
                        {
                          "line": 288,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Reset options in resolver"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 290,
              "name": "insert_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 292,
                      "promiser": "search $(search)",
                      "attributes": [
                        {
                          "line": 292,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Add search domains to resolver"
                          }
                        }
                      ]
                    },
                    {
                      "line": 293,
                      "promiser": "nameserver $(list)",
                      "attributes": [
                        {
                          "line": 293,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Add name servers to resolver"
                          }
                        }
                      ]
                    },
                    {
                      "line": 294,
                      "promiser": "options $(options)",
                      "attributes": [
                        {
                          "line": 294,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Add options to resolver"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 299,
          "namespace": "default",
          "name": "manage_variable_values_ini",
          "bundleType": "edit_line",
          "arguments": [
            "tab",
            "sectionName"
          ],
          "promiseTypes": [
            {
              "line": 332,
              "name": "vars",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 333,
                      "promiser": "index",
                      "attributes": [
                        {
                          "line": 333,
                          "lval": "slist",
                          "rval": {
                            "type": "functionCall",
                            "name": "getindices",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(tab)[$(sectionName)]"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 336,
                      "promiser": "cindex[$(index)]",
                      "attributes": [
                        {
                          "line": 336,
                          "lval": "string",
                          "rval": {
                            "type": "functionCall",
                            "name": "canonify",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(index)"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 338,
              "name": "classes",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 339,
                      "promiser": "edit_$(cindex[$(index)])",
                      "attributes": [
                        {
                          "line": 339,
                          "lval": "not",
                          "rval": {
                            "type": "functionCall",
                            "name": "strcmp",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$($(tab)[$(sectionName)][$(index)])"
                              },
                              {
                                "type": "string",
                                "value": "dontchange"
                              }
                            ]
                          }
                        },
                        {
                          "line": 340,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Create conditions to make changes"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 342,
              "name": "field_edits",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 345,
                      "promiser": "#+\\s*$(index)\\s*=.*",
                      "attributes": [
                        {
                          "line": 346,
                          "lval": "select_region",
                          "rval": {
                            "type": "functionCall",
                            "name": "INI_section",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(sectionName)"
                              }
                            ]
                          }
                        },
                        {
                          "line": 347,
                          "lval": "edit_field",
                          "rval": {
                            "type": "functionCall",
                            "name": "col",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "="
                              },
                              {
                                "type": "string",
                                "value": "1"
                              },
                              {
                                "type": "string",
                                "value": "$(index)"
                              },
                              {
                                "type": "string",
                                "value": "set"
                              }
                            ]
                          }
                        },
                        {
                          "line": 348,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "string",
                            "value": "edit_$(cindex[$(index)])"
                          }
                        }
                      ]
                    },
                    {
                      "line": 351,
                      "promiser": "$(index)\\s*=.*",
                      "attributes": [
                        {
                          "line": 352,
                          "lval": "edit_field",
                          "rval": {
                            "type": "functionCall",
                            "name": "col",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "="
                              },
                              {
                                "type": "string",
                                "value": "2"
                              },
                              {
                                "type": "string",
                                "value": "$($(tab)[$(sectionName)][$(index)])"
                              },
                              {
                                "type": "string",
                                "value": "set"
                              }
                            ]
                          }
                        },
                        {
                          "line": 353,
                          "lval": "select_region",
                          "rval": {
                            "type": "functionCall",
                            "name": "INI_section",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(sectionName)"
                              }
                            ]
                          }
                        },
                        {
                          "line": 354,
                          "lval": "classes",
                          "rval": {
                            "type": "functionCall",
                            "name": "if_ok",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "manage_variable_values_ini_not_$(cindex[$(index)])"
                              }
                            ]
                          }
                        },
                        {
                          "line": 355,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "string",
                            "value": "edit_$(cindex[$(index)])"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 357,
              "name": "delete_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 358,
                      "promiser": ".*",
                      "attributes": [
                        {
                          "line": 359,
                          "lval": "select_region",
                          "rval": {
                            "type": "functionCall",
                            "name": "INI_section",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(sectionName)"
                              }
                            ]
                          }
                        },
                        {
                          "line": 360,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Remove all entries in the region so there are no extra entries"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 362,
              "name": "insert_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 363,
                      "promiser": "[$(sectionName)]",
                      "attributes": [
                        {
                          "line": 364,
                          "lval": "location",
                          "rval": {
                            "type": "symbol",
                            "value": "start"
                          }
                        },
                        {
                          "line": 365,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Insert lines"
                          }
                        }
                      ]
                    },
                    {
                      "line": 367,
                      "promiser": "$(index)=$($(tab)[$(sectionName)][$(index)])",
                      "attributes": [
                        {
                          "line": 368,
                          "lval": "select_region",
                          "rval": {
                            "type": "functionCall",
                            "name": "INI_section",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(sectionName)"
                              }
                            ]
                          }
                        },
                        {
                          "line": 369,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "string",
                            "value": "!manage_variable_values_ini_not_$(cindex[$(index)]).edit_$(cindex[$(index)])"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 375,
          "namespace": "default",
          "name": "set_variable_values_ini",
          "bundleType": "edit_line",
          "arguments": [
            "tab",
            "sectionName"
          ],
          "promiseTypes": [
            {
              "line": 407,
              "name": "vars",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 408,
                      "promiser": "index",
                      "attributes": [
                        {
                          "line": 408,
                          "lval": "slist",
                          "rval": {
                            "type": "functionCall",
                            "name": "getindices",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(tab)[$(sectionName)]"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 411,
                      "promiser": "cindex[$(index)]",
                      "attributes": [
                        {
                          "line": 411,
                          "lval": "string",
                          "rval": {
                            "type": "functionCall",
                            "name": "canonify",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(index)"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 413,
              "name": "classes",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 414,
                      "promiser": "edit_$(cindex[$(index)])",
                      "attributes": [
                        {
                          "line": 414,
                          "lval": "not",
                          "rval": {
                            "type": "functionCall",
                            "name": "strcmp",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$($(tab)[$(sectionName)][$(index)])"
                              },
                              {
                                "type": "string",
                                "value": "dontchange"
                              }
                            ]
                          }
                        },
                        {
                          "line": 415,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Create conditions to make changes"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 417,
              "name": "field_edits",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 420,
                      "promiser": "#+\\s*$(index)\\s*=.*",
                      "attributes": [
                        {
                          "line": 421,
                          "lval": "select_region",
                          "rval": {
                            "type": "functionCall",
                            "name": "INI_section",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(sectionName)"
                              }
                            ]
                          }
                        },
                        {
                          "line": 422,
                          "lval": "edit_field",
                          "rval": {
                            "type": "functionCall",
                            "name": "col",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "="
                              },
                              {
                                "type": "string",
                                "value": "1"
                              },
                              {
                                "type": "string",
                                "value": "$(index)"
                              },
                              {
                                "type": "string",
                                "value": "set"
                              }
                            ]
                          }
                        },
                        {
                          "line": 423,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "string",
                            "value": "edit_$(cindex[$(index)])"
                          }
                        }
                      ]
                    },
                    {
                      "line": 426,
                      "promiser": "$(index)\\s*=.*",
                      "attributes": [
                        {
                          "line": 427,
                          "lval": "edit_field",
                          "rval": {
                            "type": "functionCall",
                            "name": "col",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "="
                              },
                              {
                                "type": "string",
                                "value": "2"
                              },
                              {
                                "type": "string",
                                "value": "$($(tab)[$(sectionName)][$(index)])"
                              },
                              {
                                "type": "string",
                                "value": "set"
                              }
                            ]
                          }
                        },
                        {
                          "line": 428,
                          "lval": "select_region",
                          "rval": {
                            "type": "functionCall",
                            "name": "INI_section",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(sectionName)"
                              }
                            ]
                          }
                        },
                        {
                          "line": 429,
                          "lval": "classes",
                          "rval": {
                            "type": "functionCall",
                            "name": "if_ok",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "set_variable_values_ini_not_$(cindex[$(index)])"
                              }
                            ]
                          }
                        },
                        {
                          "line": 430,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "string",
                            "value": "edit_$(cindex[$(index)])"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 432,
              "name": "insert_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 433,
                      "promiser": "[$(sectionName)]",
                      "attributes": [
                        {
                          "line": 434,
                          "lval": "location",
                          "rval": {
                            "type": "symbol",
                            "value": "start"
                          }
                        },
                        {
                          "line": 435,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Insert lines"
                          }
                        }
                      ]
                    },
                    {
                      "line": 437,
                      "promiser": "$(index)=$($(tab)[$(sectionName)][$(index)])",
                      "attributes": [
                        {
                          "line": 438,
                          "lval": "select_region",
                          "rval": {
                            "type": "functionCall",
                            "name": "INI_section",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(sectionName)"
                              }
                            ]
                          }
                        },
                        {
                          "line": 439,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "string",
                            "value": "!set_variable_values_ini_not_$(cindex[$(index)]).edit_$(cindex[$(index)])"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 443,
          "namespace": "default",
          "name": "set_quoted_values",
          "bundleType": "edit_line",
          "arguments": [
            "v"
          ],
          "promiseTypes": [
            {
              "line": 459,
              "name": "vars",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 460,
                      "promiser": "index",
                      "attributes": [
                        {
                          "line": 460,
                          "lval": "slist",
                          "rval": {
                            "type": "functionCall",
                            "name": "getindices",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(v)"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 463,
                      "promiser": "cindex[$(index)]",
                      "attributes": [
                        {
                          "line": 463,
                          "lval": "string",
                          "rval": {
                            "type": "functionCall",
                            "name": "canonify",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(index)"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 465,
              "name": "field_edits",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 467,
                      "promiser": "#+\\s*$(index)\\s*=.*",
                      "attributes": [
                        {
                          "line": 468,
                          "lval": "edit_field",
                          "rval": {
                            "type": "functionCall",
                            "name": "col",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "="
                              },
                              {
                                "type": "string",
                                "value": "1"
                              },
                              {
                                "type": "string",
                                "value": "$(index)"
                              },
                              {
                                "type": "string",
                                "value": "set"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 471,
                      "promiser": "\\s*$(index)\\s*=.*",
                      "attributes": [
                        {
                          "line": 472,
                          "lval": "edit_field",
                          "rval": {
                            "type": "functionCall",
                            "name": "col",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "="
                              },
                              {
                                "type": "string",
                                "value": "2"
                              },
                              {
                                "type": "string",
                                "value": "\\\"$($(v)[$(index)])\\\""
                              },
                              {
                                "type": "string",
                                "value": "set"
                              }
                            ]
                          }
                        },
                        {
                          "line": 473,
                          "lval": "classes",
                          "rval": {
                            "type": "functionCall",
                            "name": "if_ok",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(cindex[$(index)])_in_file"
                              }
                            ]
                          }
                        },
                        {
                          "line": 474,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Match a line starting like key = something"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 476,
              "name": "insert_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 477,
                      "promiser": "$(index)=\"$($(v)[$(index)])\"",
                      "attributes": [
                        {
                          "line": 478,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Insert a variable definition"
                          }
                        },
                        {
                          "line": 479,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "string",
                            "value": "!$(cindex[$(index)])_in_file"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 484,
          "namespace": "default",
          "name": "set_variable_values",
          "bundleType": "edit_line",
          "arguments": [
            "v"
          ],
          "promiseTypes": [
            {
              "line": 498,
              "name": "vars",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 500,
                      "promiser": "index",
                      "attributes": [
                        {
                          "line": 500,
                          "lval": "slist",
                          "rval": {
                            "type": "functionCall",
                            "name": "getindices",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(v)"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 504,
                      "promiser": "cindex[$(index)]",
                      "attributes": [
                        {
                          "line": 504,
                          "lval": "string",
                          "rval": {
                            "type": "functionCall",
                            "name": "canonify",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(index)"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 505,
                      "promiser": "cv",
                      "attributes": [
                        {
                          "line": 505,
                          "lval": "string",
                          "rval": {
                            "type": "functionCall",
                            "name": "canonify",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(v)"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 507,
              "name": "field_edits",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 511,
                      "promiser": "\\s*$(index)\\s*=.*",
                      "attributes": [
                        {
                          "line": 513,
                          "lval": "edit_field",
                          "rval": {
                            "type": "functionCall",
                            "name": "col",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "\\s*$(index)\\s*="
                              },
                              {
                                "type": "string",
                                "value": "2"
                              },
                              {
                                "type": "string",
                                "value": "$($(v)[$(index)])"
                              },
                              {
                                "type": "string",
                                "value": "set"
                              }
                            ]
                          }
                        },
                        {
                          "line": 514,
                          "lval": "classes",
                          "rval": {
                            "type": "functionCall",
                            "name": "if_ok",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(cv)_$(cindex[$(index)])_in_file"
                              }
                            ]
                          }
                        },
                        {
                          "line": 515,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Match a line starting like key = something"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 517,
              "name": "insert_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 519,
                      "promiser": "$(index)=$($(v)[$(index)])",
                      "attributes": [
                        {
                          "line": 521,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Insert a variable definition"
                          }
                        },
                        {
                          "line": 522,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "string",
                            "value": "!$(cv)_$(cindex[$(index)])_in_file"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 525,
          "namespace": "default",
          "name": "set_config_values",
          "bundleType": "edit_line",
          "arguments": [
            "v"
          ],
          "promiseTypes": [
            {
              "line": 534,
              "name": "vars",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 535,
                      "promiser": "index",
                      "attributes": [
                        {
                          "line": 535,
                          "lval": "slist",
                          "rval": {
                            "type": "functionCall",
                            "name": "getindices",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(v)"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 538,
                      "promiser": "cindex[$(index)]",
                      "attributes": [
                        {
                          "line": 538,
                          "lval": "string",
                          "rval": {
                            "type": "functionCall",
                            "name": "canonify",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(index)"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 540,
              "name": "replace_patterns",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 543,
                      "promiser": "^\\s*($(index)\\s+(?!$($(v)[$(index)])$).*|# ?$(index)\\s+.*)$",
                      "attributes": [
                        {
                          "line": 544,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Correct the value"
                          }
                        },
                        {
                          "line": 545,
                          "lval": "replace_with",
                          "rval": {
                            "type": "functionCall",
                            "name": "value",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(index) $($(v)[$(index)])"
                              }
                            ]
                          }
                        },
                        {
                          "line": 546,
                          "lval": "classes",
                          "rval": {
                            "type": "functionCall",
                            "name": "always",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "replace_attempted_$(cindex[$(index)])"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 548,
              "name": "insert_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 549,
                      "promiser": "$(index) $($(v)[$(index)])",
                      "attributes": [
                        {
                          "line": 550,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "string",
                            "value": "replace_attempted_$(cindex[$(index)])"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 554,
          "namespace": "default",
          "name": "set_config_values_matching",
          "bundleType": "edit_line",
          "arguments": [
            "v",
            "pat"
          ],
          "promiseTypes": [
            {
              "line": 564,
              "name": "vars",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 565,
                      "promiser": "allparams",
                      "attributes": [
                        {
                          "line": 565,
                          "lval": "slist",
                          "rval": {
                            "type": "functionCall",
                            "name": "getindices",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(v)"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 566,
                      "promiser": "index",
                      "attributes": [
                        {
                          "line": 566,
                          "lval": "slist",
                          "rval": {
                            "type": "functionCall",
                            "name": "grep",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(pat)"
                              },
                              {
                                "type": "string",
                                "value": "allparams"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 569,
                      "promiser": "cindex[$(index)]",
                      "attributes": [
                        {
                          "line": 569,
                          "lval": "string",
                          "rval": {
                            "type": "functionCall",
                            "name": "canonify",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(index)"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 571,
              "name": "replace_patterns",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 574,
                      "promiser": "^\\s*($(index)\\s+(?!$($(v)[$(index)])).*|# ?$(index)\\s+.*)$",
                      "attributes": [
                        {
                          "line": 575,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Correct the value"
                          }
                        },
                        {
                          "line": 576,
                          "lval": "replace_with",
                          "rval": {
                            "type": "functionCall",
                            "name": "value",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(index) $($(v)[$(index)])"
                              }
                            ]
                          }
                        },
                        {
                          "line": 577,
                          "lval": "classes",
                          "rval": {
                            "type": "functionCall",
                            "name": "always",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "replace_attempted_$(cindex[$(index)])"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 579,
              "name": "insert_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 580,
                      "promiser": "$(index) $($(v)[$(index)])",
                      "attributes": [
                        {
                          "line": 581,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "string",
                            "value": "replace_attempted_$(cindex[$(index)])"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 587,
          "namespace": "default",
          "name": "maintain_key_values",
          "bundleType": "edit_line",
          "arguments": [
            "v",
            "sep"
          ],
          "promiseTypes": [
            {
              "line": 593,
              "name": "vars",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 594,
                      "promiser": "index",
                      "attributes": [
                        {
                          "line": 594,
                          "lval": "slist",
                          "rval": {
                            "type": "functionCall",
                            "name": "getindices",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(v)"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 596,
                      "promiser": "cindex[$(index)]",
                      "attributes": [
                        {
                          "line": 596,
                          "lval": "string",
                          "rval": {
                            "type": "functionCall",
                            "name": "canonify",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(index)"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 598,
                      "promiser": "keypat[$(index)]",
                      "attributes": [
                        {
                          "line": 598,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": "\\s*$(index)\\s*$(sep)\\s*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 601,
                      "promiser": "ve[$(index)]",
                      "attributes": [
                        {
                          "line": 601,
                          "lval": "string",
                          "rval": {
                            "type": "functionCall",
                            "name": "escape",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$($(v)[$(index)])"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 603,
              "name": "classes",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 604,
                      "promiser": "$(cindex[$(index)])_key_in_file",
                      "attributes": [
                        {
                          "line": 605,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Dynamic Class created if patterns matching"
                          }
                        },
                        {
                          "line": 606,
                          "lval": "expression",
                          "rval": {
                            "type": "functionCall",
                            "name": "regline",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "^$(keypat[$(index)]).*"
                              },
                              {
                                "type": "string",
                                "value": "$(edit.filename)"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 608,
              "name": "replace_patterns",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 611,
                      "promiser": "^($(keypat[$(index)]))(?!$(ve[$(index)])$).*",
                      "attributes": [
                        {
                          "line": 612,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Replace definition of $(index)"
                          }
                        },
                        {
                          "line": 613,
                          "lval": "replace_with",
                          "rval": {
                            "type": "functionCall",
                            "name": "value",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(match.1)$($(v)[$(index)])"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 615,
              "name": "insert_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 616,
                      "promiser": "$(index)$(sep)$($(v)[$(index)])",
                      "attributes": [
                        {
                          "line": 617,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Insert definition of $(index)"
                          }
                        },
                        {
                          "line": 618,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "string",
                            "value": "!$(cindex[$(index)])_key_in_file"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 623,
          "namespace": "default",
          "name": "append_users_starting",
          "bundleType": "edit_line",
          "arguments": [
            "v"
          ],
          "promiseTypes": [
            {
              "line": 629,
              "name": "vars",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 631,
                      "promiser": "index",
                      "attributes": [
                        {
                          "line": 631,
                          "lval": "slist",
                          "rval": {
                            "type": "functionCall",
                            "name": "getindices",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(v)"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 633,
              "name": "classes",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 635,
                      "promiser": "add_$(index)",
                      "attributes": [
                        {
                          "line": 635,
                          "lval": "not",
                          "rval": {
                            "type": "functionCall",
                            "name": "userexists",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(index)"
                              }
                            ]
                          }
                        },
                        {
                          "line": 636,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Class created if user does not exist"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 638,
              "name": "insert_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 640,
                      "promiser": "$($(v)[$(index)])",
                      "attributes": [
                        {
                          "line": 642,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Append users into a password file format"
                          }
                        },
                        {
                          "line": 643,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "string",
                            "value": "add_$(index)"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 648,
          "namespace": "default",
          "name": "append_groups_starting",
          "bundleType": "edit_line",
          "arguments": [
            "v"
          ],
          "promiseTypes": [
            {
              "line": 654,
              "name": "vars",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 656,
                      "promiser": "index",
                      "attributes": [
                        {
                          "line": 656,
                          "lval": "slist",
                          "rval": {
                            "type": "functionCall",
                            "name": "getindices",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(v)"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 658,
              "name": "classes",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 660,
                      "promiser": "add_$(index)",
                      "attributes": [
                        {
                          "line": 660,
                          "lval": "not",
                          "rval": {
                            "type": "functionCall",
                            "name": "groupexists",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(index)"
                              }
                            ]
                          }
                        },
                        {
                          "line": 661,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Class created if group does not exist"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 663,
              "name": "insert_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 665,
                      "promiser": "$($(v)[$(index)])",
                      "attributes": [
                        {
                          "line": 667,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Append users into a group file format"
                          }
                        },
                        {
                          "line": 668,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "string",
                            "value": "add_$(index)"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 674,
          "namespace": "default",
          "name": "set_colon_field",
          "bundleType": "edit_line",
          "arguments": [
            "key",
            "field",
            "val"
          ],
          "promiseTypes": [
            {
              "line": 680,
              "name": "field_edits",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 682,
                      "promiser": "$(key):.*",
                      "attributes": [
                        {
                          "line": 684,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Edit a colon-separated file, using the first field as a key"
                          }
                        },
                        {
                          "line": 685,
                          "lval": "edit_field",
                          "rval": {
                            "type": "functionCall",
                            "name": "col",
                            "arguments": [
                              {
                                "type": "string",
                                "value": ":"
                              },
                              {
                                "type": "string",
                                "value": "$(field)"
                              },
                              {
                                "type": "string",
                                "value": "$(val)"
                              },
                              {
                                "type": "string",
                                "value": "set"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 690,
          "namespace": "default",
          "name": "set_user_field",
          "bundleType": "edit_line",
          "arguments": [
            "user",
            "field",
            "val"
          ],
          "promiseTypes": [
            {
              "line": 696,
              "name": "field_edits",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 698,
                      "promiser": "$(user):.*",
                      "attributes": [
                        {
                          "line": 700,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Edit a user attribute in the password file"
                          }
                        },
                        {
                          "line": 701,
                          "lval": "edit_field",
                          "rval": {
                            "type": "functionCall",
                            "name": "col",
                            "arguments": [
                              {
                                "type": "string",
                                "value": ":"
                              },
                              {
                                "type": "string",
                                "value": "$(field)"
                              },
                              {
                                "type": "string",
                                "value": "$(val)"
                              },
                              {
                                "type": "string",
                                "value": "set"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 706,
          "namespace": "default",
          "name": "append_user_field",
          "bundleType": "edit_line",
          "arguments": [
            "group",
            "field",
            "allusers"
          ],
          "promiseTypes": [
            {
              "line": 712,
              "name": "vars",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 714,
                      "promiser": "val",
                      "attributes": [
                        {
                          "line": 714,
                          "lval": "slist",
                          "rval": {
                            "type": "list",
                            "value": [
                              {
                                "type": "string",
                                "value": "@(allusers)"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 716,
              "name": "field_edits",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 718,
                      "promiser": "$(group):.*",
                      "attributes": [
                        {
                          "line": 720,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Append users into a password file format"
                          }
                        },
                        {
                          "line": 721,
                          "lval": "edit_field",
                          "rval": {
                            "type": "functionCall",
                            "name": "col",
                            "arguments": [
                              {
                                "type": "string",
                                "value": ":"
                              },
                              {
                                "type": "string",
                                "value": "$(field)"
                              },
                              {
                                "type": "string",
                                "value": "$(val)"
                              },
                              {
                                "type": "string",
                                "value": "alphanum"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 726,
          "namespace": "default",
          "name": "expand_template",
          "bundleType": "edit_line",
          "arguments": [
            "templatefile"
          ],
          "promiseTypes": [
            {
              "line": 732,
              "name": "insert_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 734,
                      "promiser": "$(templatefile)",
                      "attributes": [
                        {
                          "line": 736,
                          "lval": "insert_type",
                          "rval": {
                            "type": "string",
                            "value": "file"
                          }
                        },
                        {
                          "line": 737,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Expand variables in the template file"
                          }
                        },
                        {
                          "line": 738,
                          "lval": "expand_scalars",
                          "rval": {
                            "type": "string",
                            "value": "true"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 741,
          "namespace": "default",
          "name": "replace_or_add",
          "bundleType": "edit_line",
          "arguments": [
            "pattern",
            "line"
          ],
          "promiseTypes": [
            {
              "line": 750,
              "name": "vars",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 751,
                      "promiser": "cline",
                      "attributes": [
                        {
                          "line": 751,
                          "lval": "string",
                          "rval": {
                            "type": "functionCall",
                            "name": "canonify",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(line)"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 752,
                      "promiser": "eline",
                      "attributes": [
                        {
                          "line": 752,
                          "lval": "string",
                          "rval": {
                            "type": "functionCall",
                            "name": "escape",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(line)"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 754,
              "name": "replace_patterns",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 755,
                      "promiser": "^(?!$(eline)$)$(pattern)$",
                      "attributes": [
                        {
                          "line": 756,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Replace a pattern here"
                          }
                        },
                        {
                          "line": 757,
                          "lval": "replace_with",
                          "rval": {
                            "type": "functionCall",
                            "name": "value",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(line)"
                              }
                            ]
                          }
                        },
                        {
                          "line": 758,
                          "lval": "classes",
                          "rval": {
                            "type": "functionCall",
                            "name": "always",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "replace_done_$(cline)"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 760,
              "name": "insert_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 761,
                      "promiser": "$(line)",
                      "attributes": [
                        {
                          "line": 762,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "string",
                            "value": "replace_done_$(cline)"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 765,
          "namespace": "default",
          "name": "fstab_option_editor",
          "bundleType": "edit_line",
          "arguments": [
            "method",
            "mount",
            "option"
          ],
          "promiseTypes": [
            {
              "line": 783,
              "name": "field_edits",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 784,
                      "promiser": "(?!#)\\S+\\s+$(mount)\\s.+",
                      "attributes": [
                        {
                          "line": 785,
                          "lval": "edit_field",
                          "rval": {
                            "type": "functionCall",
                            "name": "fstab_options",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(option)"
                              },
                              {
                                "type": "string",
                                "value": "$(method)"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "bodies": [
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 57,
          "namespace": "default",
          "name": "control",
          "bodyType": "file",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 60,
                  "lval": "inputs",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "@(files_common.inputs)"
                      }
                    ]
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 792,
          "namespace": "default",
          "name": "fstab_options",
          "bodyType": "edit_field",
          "arguments": [
            "newval",
            "method"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 810,
                  "lval": "field_separator",
                  "rval": {
                    "type": "string",
                    "value": "\\s+"
                  }
                },
                {
                  "line": 811,
                  "lval": "select_field",
                  "rval": {
                    "type": "string",
                    "value": "4"
                  }
                },
                {
                  "line": 812,
                  "lval": "value_separator",
                  "rval": {
                    "type": "string",
                    "value": ","
                  }
                },
                {
                  "line": 813,
                  "lval": "field_value",
                  "rval": {
                    "type": "string",
                    "value": "$(newval)"
                  }
                },
                {
                  "line": 814,
                  "lval": "field_operation",
                  "rval": {
                    "type": "string",
                    "value": "$(method)"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 817,
          "namespace": "default",
          "name": "quoted_var",
          "bodyType": "edit_field",
          "arguments": [
            "newval",
            "method"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 819,
                  "lval": "field_separator",
                  "rval": {
                    "type": "string",
                    "value": "\\\""
                  }
                },
                {
                  "line": 820,
                  "lval": "select_field",
                  "rval": {
                    "type": "string",
                    "value": "2"
                  }
                },
                {
                  "line": 821,
                  "lval": "value_separator",
                  "rval": {
                    "type": "string",
                    "value": " "
                  }
                },
                {
                  "line": 822,
                  "lval": "field_value",
                  "rval": {
                    "type": "string",
                    "value": "$(newval)"
                  }
                },
                {
                  "line": 823,
                  "lval": "field_operation",
                  "rval": {
                    "type": "string",
                    "value": "$(method)"
                  }
                },
                {
                  "line": 824,
                  "lval": "extend_fields",
                  "rval": {
                    "type": "string",
                    "value": "false"
                  }
                },
                {
                  "line": 825,
                  "lval": "allow_blank_fields",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 830,
          "namespace": "default",
          "name": "col",
          "bodyType": "edit_field",
          "arguments": [
            "split",
            "col",
            "newval",
            "method"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 832,
                  "lval": "field_separator",
                  "rval": {
                    "type": "string",
                    "value": "$(split)"
                  }
                },
                {
                  "line": 833,
                  "lval": "select_field",
                  "rval": {
                    "type": "string",
                    "value": "$(col)"
                  }
                },
                {
                  "line": 834,
                  "lval": "value_separator",
                  "rval": {
                    "type": "string",
                    "value": ","
                  }
                },
                {
                  "line": 835,
                  "lval": "field_value",
                  "rval": {
                    "type": "string",
                    "value": "$(newval)"
                  }
                },
                {
                  "line": 836,
                  "lval": "field_operation",
                  "rval": {
                    "type": "string",
                    "value": "$(method)"
                  }
                },
                {
                  "line": 837,
                  "lval": "extend_fields",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                },
                {
                  "line": 838,
                  "lval": "allow_blank_fields",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 843,
          "namespace": "default",
          "name": "line",
          "bodyType": "edit_field",
          "arguments": [
            "split",
            "col",
            "newval",
            "method"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 845,
                  "lval": "field_separator",
                  "rval": {
                    "type": "string",
                    "value": "$(split)"
                  }
                },
                {
                  "line": 846,
                  "lval": "select_field",
                  "rval": {
                    "type": "string",
                    "value": "$(col)"
                  }
                },
                {
                  "line": 847,
                  "lval": "value_separator",
                  "rval": {
                    "type": "string",
                    "value": " "
                  }
                },
                {
                  "line": 848,
                  "lval": "field_value",
                  "rval": {
                    "type": "string",
                    "value": "$(newval)"
                  }
                },
                {
                  "line": 849,
                  "lval": "field_operation",
                  "rval": {
                    "type": "string",
                    "value": "$(method)"
                  }
                },
                {
                  "line": 850,
                  "lval": "extend_fields",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                },
                {
                  "line": 851,
                  "lval": "allow_blank_fields",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 856,
          "namespace": "default",
          "name": "value",
          "bodyType": "replace_with",
          "arguments": [
            "x"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 858,
                  "lval": "replace_value",
                  "rval": {
                    "type": "string",
                    "value": "$(x)"
                  }
                },
                {
                  "line": 859,
                  "lval": "occurrences",
                  "rval": {
                    "type": "string",
                    "value": "all"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 864,
          "namespace": "default",
          "name": "INI_section",
          "bodyType": "select_region",
          "arguments": [
            "x"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 866,
                  "lval": "select_start",
                  "rval": {
                    "type": "string",
                    "value": "\\[$(x)\\]\\s*"
                  }
                },
                {
                  "line": 867,
                  "lval": "select_end",
                  "rval": {
                    "type": "string",
                    "value": "\\[.*\\]\\s*"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 874,
          "namespace": "default",
          "name": "std_defs",
          "bodyType": "edit_defaults",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 876,
                  "lval": "empty_file_before_editing",
                  "rval": {
                    "type": "string",
                    "value": "false"
                  }
                },
                {
                  "line": 877,
                  "lval": "edit_backup",
                  "rval": {
                    "type": "string",
                    "value": "false"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 883,
          "namespace": "default",
          "name": "empty",
          "bodyType": "edit_defaults",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 885,
                  "lval": "empty_file_before_editing",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                },
                {
                  "line": 886,
                  "lval": "edit_backup",
                  "rval": {
                    "type": "string",
                    "value": "false"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 892,
          "namespace": "default",
          "name": "no_backup",
          "bodyType": "edit_defaults",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 894,
                  "lval": "edit_backup",
                  "rval": {
                    "type": "string",
                    "value": "false"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 899,
          "namespace": "default",
          "name": "backup_timestamp",
          "bodyType": "edit_defaults",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 901,
                  "lval": "empty_file_before_editing",
                  "rval": {
                    "type": "string",
                    "value": "false"
                  }
                },
                {
                  "line": 902,
                  "lval": "edit_backup",
                  "rval": {
                    "type": "string",
                    "value": "timestamp"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 910,
          "namespace": "default",
          "name": "start",
          "bodyType": "location",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 912,
                  "lval": "before_after",
                  "rval": {
                    "type": "string",
                    "value": "before"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 917,
          "namespace": "default",
          "name": "after",
          "bodyType": "location",
          "arguments": [
            "str"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 919,
                  "lval": "before_after",
                  "rval": {
                    "type": "string",
                    "value": "after"
                  }
                },
                {
                  "line": 920,
                  "lval": "select_line_matching",
                  "rval": {
                    "type": "string",
                    "value": "$(str)"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 925,
          "namespace": "default",
          "name": "before",
          "bodyType": "location",
          "arguments": [
            "str"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 927,
                  "lval": "before_after",
                  "rval": {
                    "type": "string",
                    "value": "before"
                  }
                },
                {
                  "line": 928,
                  "lval": "select_line_matching",
                  "rval": {
                    "type": "string",
                    "value": "$(str)"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 937,
          "namespace": "default",
          "name": "comment",
          "bodyType": "replace_with",
          "arguments": [
            "c"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 939,
                  "lval": "replace_value",
                  "rval": {
                    "type": "string",
                    "value": "$(c) $(match.1)"
                  }
                },
                {
                  "line": 940,
                  "lval": "occurrences",
                  "rval": {
                    "type": "string",
                    "value": "all"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 945,
          "namespace": "default",
          "name": "uncomment",
          "bodyType": "replace_with",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 947,
                  "lval": "replace_value",
                  "rval": {
                    "type": "string",
                    "value": "$(match.1)"
                  }
                },
                {
                  "line": 948,
                  "lval": "occurrences",
                  "rval": {
                    "type": "string",
                    "value": "all"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 955,
          "namespace": "default",
          "name": "secure_cp",
          "bodyType": "copy_from",
          "arguments": [
            "from",
            "server"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 957,
                  "lval": "source",
                  "rval": {
                    "type": "string",
                    "value": "$(from)"
                  }
                },
                {
                  "line": 958,
                  "lval": "servers",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "$(server)"
                      }
                    ]
                  }
                },
                {
                  "line": 959,
                  "lval": "compare",
                  "rval": {
                    "type": "string",
                    "value": "digest"
                  }
                },
                {
                  "line": 960,
                  "lval": "encrypt",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                },
                {
                  "line": 961,
                  "lval": "verify",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 966,
          "namespace": "default",
          "name": "remote_cp",
          "bodyType": "copy_from",
          "arguments": [
            "from",
            "server"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 968,
                  "lval": "servers",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "$(server)"
                      }
                    ]
                  }
                },
                {
                  "line": 969,
                  "lval": "source",
                  "rval": {
                    "type": "string",
                    "value": "$(from)"
                  }
                },
                {
                  "line": 970,
                  "lval": "compare",
                  "rval": {
                    "type": "string",
                    "value": "mtime"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 975,
          "namespace": "default",
          "name": "remote_dcp",
          "bodyType": "copy_from",
          "arguments": [
            "from",
            "server"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 977,
                  "lval": "servers",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "$(server)"
                      }
                    ]
                  }
                },
                {
                  "line": 978,
                  "lval": "source",
                  "rval": {
                    "type": "string",
                    "value": "$(from)"
                  }
                },
                {
                  "line": 979,
                  "lval": "compare",
                  "rval": {
                    "type": "string",
                    "value": "digest"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 984,
          "namespace": "default",
          "name": "local_cp",
          "bodyType": "copy_from",
          "arguments": [
            "from"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 986,
                  "lval": "source",
                  "rval": {
                    "type": "string",
                    "value": "$(from)"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 991,
          "namespace": "default",
          "name": "local_dcp",
          "bodyType": "copy_from",
          "arguments": [
            "from"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 993,
                  "lval": "source",
                  "rval": {
                    "type": "string",
                    "value": "$(from)"
                  }
                },
                {
                  "line": 994,
                  "lval": "compare",
                  "rval": {
                    "type": "string",
                    "value": "digest"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 999,
          "namespace": "default",
          "name": "perms_cp",
          "bodyType": "copy_from",
          "arguments": [
            "from"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1001,
                  "lval": "source",
                  "rval": {
                    "type": "string",
                    "value": "$(from)"
                  }
                },
                {
                  "line": 1002,
                  "lval": "preserve",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1005,
          "namespace": "default",
          "name": "backup_local_cp",
          "bodyType": "copy_from",
          "arguments": [
            "from"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1008,
                  "lval": "source",
                  "rval": {
                    "type": "string",
                    "value": "$(from)"
                  }
                },
                {
                  "line": 1009,
                  "lval": "copy_backup",
                  "rval": {
                    "type": "string",
                    "value": "timestamp"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1016,
          "namespace": "default",
          "name": "seed_cp",
          "bodyType": "copy_from",
          "arguments": [
            "from"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1018,
                  "lval": "source",
                  "rval": {
                    "type": "string",
                    "value": "$(from)"
                  }
                },
                {
                  "line": 1019,
                  "lval": "compare",
                  "rval": {
                    "type": "string",
                    "value": "exists"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1024,
          "namespace": "default",
          "name": "sync_cp",
          "bodyType": "copy_from",
          "arguments": [
            "from",
            "server"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1026,
                  "lval": "servers",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "$(server)"
                      }
                    ]
                  }
                },
                {
                  "line": 1027,
                  "lval": "source",
                  "rval": {
                    "type": "string",
                    "value": "$(from)"
                  }
                },
                {
                  "line": 1028,
                  "lval": "purge",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                },
                {
                  "line": 1029,
                  "lval": "preserve",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                },
                {
                  "line": 1030,
                  "lval": "type_check",
                  "rval": {
                    "type": "string",
                    "value": "false"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1035,
          "namespace": "default",
          "name": "no_backup_cp",
          "bodyType": "copy_from",
          "arguments": [
            "from"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1037,
                  "lval": "source",
                  "rval": {
                    "type": "string",
                    "value": "$(from)"
                  }
                },
                {
                  "line": 1038,
                  "lval": "copy_backup",
                  "rval": {
                    "type": "string",
                    "value": "false"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1043,
          "namespace": "default",
          "name": "no_backup_dcp",
          "bodyType": "copy_from",
          "arguments": [
            "from"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1045,
                  "lval": "source",
                  "rval": {
                    "type": "string",
                    "value": "$(from)"
                  }
                },
                {
                  "line": 1046,
                  "lval": "copy_backup",
                  "rval": {
                    "type": "string",
                    "value": "false"
                  }
                },
                {
                  "line": 1047,
                  "lval": "compare",
                  "rval": {
                    "type": "string",
                    "value": "digest"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1052,
          "namespace": "default",
          "name": "no_backup_rcp",
          "bodyType": "copy_from",
          "arguments": [
            "from",
            "server"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1054,
                  "lval": "servers",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "$(server)"
                      }
                    ]
                  }
                },
                {
                  "line": 1055,
                  "lval": "source",
                  "rval": {
                    "type": "string",
                    "value": "$(from)"
                  }
                },
                {
                  "line": 1056,
                  "lval": "compare",
                  "rval": {
                    "type": "string",
                    "value": "mtime"
                  }
                },
                {
                  "line": 1057,
                  "lval": "copy_backup",
                  "rval": {
                    "type": "string",
                    "value": "false"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1064,
          "namespace": "default",
          "name": "ln_s",
          "bodyType": "link_from",
          "arguments": [
            "x"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1066,
                  "lval": "link_type",
                  "rval": {
                    "type": "string",
                    "value": "symlink"
                  }
                },
                {
                  "line": 1067,
                  "lval": "source",
                  "rval": {
                    "type": "string",
                    "value": "$(x)"
                  }
                },
                {
                  "line": 1068,
                  "lval": "when_no_source",
                  "rval": {
                    "type": "string",
                    "value": "force"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1073,
          "namespace": "default",
          "name": "linkchildren",
          "bodyType": "link_from",
          "arguments": [
            "tofile"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1075,
                  "lval": "source",
                  "rval": {
                    "type": "string",
                    "value": "$(tofile)"
                  }
                },
                {
                  "line": 1076,
                  "lval": "link_type",
                  "rval": {
                    "type": "string",
                    "value": "symlink"
                  }
                },
                {
                  "line": 1077,
                  "lval": "when_no_source",
                  "rval": {
                    "type": "string",
                    "value": "force"
                  }
                },
                {
                  "line": 1078,
                  "lval": "link_children",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                },
                {
                  "line": 1079,
                  "lval": "when_linking_children",
                  "rval": {
                    "type": "string",
                    "value": "if_no_such_file"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1086,
          "namespace": "default",
          "name": "m",
          "bodyType": "perms",
          "arguments": [
            "mode"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1088,
                  "lval": "mode",
                  "rval": {
                    "type": "string",
                    "value": "$(mode)"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1093,
          "namespace": "default",
          "name": "mo",
          "bodyType": "perms",
          "arguments": [
            "mode",
            "user"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1095,
                  "lval": "owners",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "$(user)"
                      }
                    ]
                  }
                },
                {
                  "line": 1096,
                  "lval": "mode",
                  "rval": {
                    "type": "string",
                    "value": "$(mode)"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1101,
          "namespace": "default",
          "name": "mog",
          "bodyType": "perms",
          "arguments": [
            "mode",
            "user",
            "group"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1103,
                  "lval": "owners",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "$(user)"
                      }
                    ]
                  }
                },
                {
                  "line": 1104,
                  "lval": "groups",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "$(group)"
                      }
                    ]
                  }
                },
                {
                  "line": 1105,
                  "lval": "mode",
                  "rval": {
                    "type": "string",
                    "value": "$(mode)"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1110,
          "namespace": "default",
          "name": "og",
          "bodyType": "perms",
          "arguments": [
            "u",
            "g"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1112,
                  "lval": "owners",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "$(u)"
                      }
                    ]
                  }
                },
                {
                  "line": 1113,
                  "lval": "groups",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "$(g)"
                      }
                    ]
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1118,
          "namespace": "default",
          "name": "owner",
          "bodyType": "perms",
          "arguments": [
            "user"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1120,
                  "lval": "owners",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "$(user)"
                      }
                    ]
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1127,
          "namespace": "default",
          "name": "access_generic",
          "bodyType": "acl",
          "arguments": [
            "acl"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1131,
                  "lval": "acl_method",
                  "rval": {
                    "type": "string",
                    "value": "overwrite"
                  }
                },
                {
                  "line": 1132,
                  "lval": "aces",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "@(acl)"
                      }
                    ]
                  }
                }
              ]
            },
            {
              "name": "windows",
              "attributes": [
                {
                  "line": 1135,
                  "lval": "acl_type",
                  "rval": {
                    "type": "string",
                    "value": "ntfs"
                  }
                }
              ]
            },
            {
              "name": "!windows",
              "attributes": [
                {
                  "line": 1138,
                  "lval": "acl_type",
                  "rval": {
                    "type": "string",
                    "value": "posix"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1143,
          "namespace": "default",
          "name": "ntfs",
          "bodyType": "acl",
          "arguments": [
            "acl"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1145,
                  "lval": "acl_type",
                  "rval": {
                    "type": "string",
                    "value": "ntfs"
                  }
                },
                {
                  "line": 1146,
                  "lval": "acl_method",
                  "rval": {
                    "type": "string",
                    "value": "overwrite"
                  }
                },
                {
                  "line": 1147,
                  "lval": "aces",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "@(acl)"
                      }
                    ]
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1152,
          "namespace": "default",
          "name": "strict",
          "bodyType": "acl",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1156,
                  "lval": "acl_method",
                  "rval": {
                    "type": "string",
                    "value": "overwrite"
                  }
                }
              ]
            },
            {
              "name": "windows",
              "attributes": [
                {
                  "line": 1159,
                  "lval": "aces",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "user:Administrator:rwx"
                      }
                    ]
                  }
                }
              ]
            },
            {
              "name": "!windows",
              "attributes": [
                {
                  "line": 1161,
                  "lval": "aces",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "user:root:rwx"
                      }
                    ]
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1168,
          "namespace": "default",
          "name": "recurse",
          "bodyType": "depth_search",
          "arguments": [
            "d"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1171,
                  "lval": "depth",
                  "rval": {
                    "type": "string",
                    "value": "$(d)"
                  }
                },
                {
                  "line": 1172,
                  "lval": "xdev",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1177,
          "namespace": "default",
          "name": "recurse_ignore",
          "bodyType": "depth_search",
          "arguments": [
            "d",
            "list"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1179,
                  "lval": "depth",
                  "rval": {
                    "type": "string",
                    "value": "$(d)"
                  }
                },
                {
                  "line": 1180,
                  "lval": "exclude_dirs",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "@(list)"
                      }
                    ]
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1185,
          "namespace": "default",
          "name": "include_base",
          "bodyType": "depth_search",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1187,
                  "lval": "include_basedir",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1190,
          "namespace": "default",
          "name": "recurse_with_base",
          "bodyType": "depth_search",
          "arguments": [
            "d"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1192,
                  "lval": "depth",
                  "rval": {
                    "type": "string",
                    "value": "$(d)"
                  }
                },
                {
                  "line": 1193,
                  "lval": "xdev",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                },
                {
                  "line": 1194,
                  "lval": "include_basedir",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1201,
          "namespace": "default",
          "name": "tidy",
          "bodyType": "delete",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1204,
                  "lval": "dirlinks",
                  "rval": {
                    "type": "string",
                    "value": "delete"
                  }
                },
                {
                  "line": 1205,
                  "lval": "rmdirs",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1212,
          "namespace": "default",
          "name": "disable",
          "bodyType": "rename",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1214,
                  "lval": "disable",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1219,
          "namespace": "default",
          "name": "rotate",
          "bodyType": "rename",
          "arguments": [
            "level"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1221,
                  "lval": "rotate",
                  "rval": {
                    "type": "string",
                    "value": "$(level)"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1226,
          "namespace": "default",
          "name": "to",
          "bodyType": "rename",
          "arguments": [
            "file"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1228,
                  "lval": "newname",
                  "rval": {
                    "type": "string",
                    "value": "$(file)"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1235,
          "namespace": "default",
          "name": "name_age",
          "bodyType": "file_select",
          "arguments": [
            "name",
            "days"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1237,
                  "lval": "leaf_name",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "$(name)"
                      }
                    ]
                  }
                },
                {
                  "line": 1238,
                  "lval": "mtime",
                  "rval": {
                    "type": "functionCall",
                    "name": "irange",
                    "arguments": [
                      {
                        "type": "string",
                        "value": "0"
                      },
                      {
                        "type": "functionCall",
                        "name": "ago",
                        "arguments": [
                          {
                            "type": "string",
                            "value": "0"
                          },
                          {
                            "type": "string",
                            "value": "0"
                          },
                          {
                            "type": "string",
                            "value": "$(days)"
                          },
                          {
                            "type": "string",
                            "value": "0"
                          },
                          {
                            "type": "string",
                            "value": "0"
                          },
                          {
                            "type": "string",
                            "value": "0"
                          }
                        ]
                      }
                    ]
                  }
                },
                {
                  "line": 1239,
                  "lval": "file_result",
                  "rval": {
                    "type": "string",
                    "value": "mtime.leaf_name"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1244,
          "namespace": "default",
          "name": "days_old",
          "bodyType": "file_select",
          "arguments": [
            "days"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1246,
                  "lval": "mtime",
                  "rval": {
                    "type": "functionCall",
                    "name": "irange",
                    "arguments": [
                      {
                        "type": "string",
                        "value": "0"
                      },
                      {
                        "type": "functionCall",
                        "name": "ago",
                        "arguments": [
                          {
                            "type": "string",
                            "value": "0"
                          },
                          {
                            "type": "string",
                            "value": "0"
                          },
                          {
                            "type": "string",
                            "value": "$(days)"
                          },
                          {
                            "type": "string",
                            "value": "0"
                          },
                          {
                            "type": "string",
                            "value": "0"
                          },
                          {
                            "type": "string",
                            "value": "0"
                          }
                        ]
                      }
                    ]
                  }
                },
                {
                  "line": 1247,
                  "lval": "file_result",
                  "rval": {
                    "type": "string",
                    "value": "mtime"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1252,
          "namespace": "default",
          "name": "size_range",
          "bodyType": "file_select",
          "arguments": [
            "from",
            "to"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1254,
                  "lval": "search_size",
                  "rval": {
                    "type": "functionCall",
                    "name": "irange",
                    "arguments": [
                      {
                        "type": "string",
                        "value": "$(from)"
                      },
                      {
                        "type": "string",
                        "value": "$(to)"
                      }
                    ]
                  }
                },
                {
                  "line": 1255,
                  "lval": "file_result",
                  "rval": {
                    "type": "string",
                    "value": "size"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1260,
          "namespace": "default",
          "name": "bigger_than",
          "bodyType": "file_select",
          "arguments": [
            "size"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1262,
                  "lval": "search_size",
                  "rval": {
                    "type": "functionCall",
                    "name": "irange",
                    "arguments": [
                      {
                        "type": "string",
                        "value": "0"
                      },
                      {
                        "type": "string",
                        "value": "$(size)"
                      }
                    ]
                  }
                },
                {
                  "line": 1263,
                  "lval": "file_result",
                  "rval": {
                    "type": "string",
                    "value": "!size"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1268,
          "namespace": "default",
          "name": "exclude",
          "bodyType": "file_select",
          "arguments": [
            "name"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1270,
                  "lval": "leaf_name",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "$(name)"
                      }
                    ]
                  }
                },
                {
                  "line": 1271,
                  "lval": "file_result",
                  "rval": {
                    "type": "string",
                    "value": "!leaf_name"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1276,
          "namespace": "default",
          "name": "plain",
          "bodyType": "file_select",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1278,
                  "lval": "file_types",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "plain"
                      }
                    ]
                  }
                },
                {
                  "line": 1279,
                  "lval": "file_result",
                  "rval": {
                    "type": "string",
                    "value": "file_types"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1282,
          "namespace": "default",
          "name": "dirs",
          "bodyType": "file_select",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1284,
                  "lval": "file_types",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "dir"
                      }
                    ]
                  }
                },
                {
                  "line": 1285,
                  "lval": "file_result",
                  "rval": {
                    "type": "string",
                    "value": "file_types"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1290,
          "namespace": "default",
          "name": "by_name",
          "bodyType": "file_select",
          "arguments": [
            "names"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1292,
                  "lval": "leaf_name",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "@(names)"
                      }
                    ]
                  }
                },
                {
                  "line": 1293,
                  "lval": "file_result",
                  "rval": {
                    "type": "string",
                    "value": "leaf_name"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1298,
          "namespace": "default",
          "name": "ex_list",
          "bodyType": "file_select",
          "arguments": [
            "names"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1300,
                  "lval": "leaf_name",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "@(names)"
                      }
                    ]
                  }
                },
                {
                  "line": 1301,
                  "lval": "file_result",
                  "rval": {
                    "type": "string",
                    "value": "!leaf_name"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1306,
          "namespace": "default",
          "name": "all",
          "bodyType": "file_select",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1308,
                  "lval": "leaf_name",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": ".*"
                      }
                    ]
                  }
                },
                {
                  "line": 1309,
                  "lval": "file_result",
                  "rval": {
                    "type": "string",
                    "value": "leaf_name"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1314,
          "namespace": "default",
          "name": "older_than",
          "bodyType": "file_select",
          "arguments": [
            "years",
            "months",
            "days",
            "hours",
            "minutes",
            "seconds"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1318,
                  "lval": "mtime",
                  "rval": {
                    "type": "functionCall",
                    "name": "irange",
                    "arguments": [
                      {
                        "type": "string",
                        "value": "0"
                      },
                      {
                        "type": "functionCall",
                        "name": "ago",
                        "arguments": [
                          {
                            "type": "string",
                            "value": "$(years)"
                          },
                          {
                            "type": "string",
                            "value": "$(months)"
                          },
                          {
                            "type": "string",
                            "value": "$(days)"
                          },
                          {
                            "type": "string",
                            "value": "$(hours)"
                          },
                          {
                            "type": "string",
                            "value": "$(minutes)"
                          },
                          {
                            "type": "string",
                            "value": "$(seconds)"
                          }
                        ]
                      }
                    ]
                  }
                },
                {
                  "line": 1319,
                  "lval": "file_result",
                  "rval": {
                    "type": "string",
                    "value": "mtime"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1324,
          "namespace": "default",
          "name": "filetype_older_than",
          "bodyType": "file_select",
          "arguments": [
            "filetype",
            "days"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1329,
                  "lval": "file_types",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "$(filetype)"
                      }
                    ]
                  }
                },
                {
                  "line": 1330,
                  "lval": "mtime",
                  "rval": {
                    "type": "functionCall",
                    "name": "irange",
                    "arguments": [
                      {
                        "type": "string",
                        "value": "0"
                      },
                      {
                        "type": "functionCall",
                        "name": "ago",
                        "arguments": [
                          {
                            "type": "string",
                            "value": "0"
                          },
                          {
                            "type": "string",
                            "value": "0"
                          },
                          {
                            "type": "string",
                            "value": "$(days)"
                          },
                          {
                            "type": "string",
                            "value": "0"
                          },
                          {
                            "type": "string",
                            "value": "0"
                          },
                          {
                            "type": "string",
                            "value": "0"
                          }
                        ]
                      }
                    ]
                  }
                },
                {
                  "line": 1331,
                  "lval": "file_result",
                  "rval": {
                    "type": "string",
                    "value": "file_types.mtime"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1336,
          "namespace": "default",
          "name": "filetypes_older_than",
          "bodyType": "file_select",
          "arguments": [
            "filetypes",
            "days"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1340,
                  "lval": "file_types",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "@(filetypes)"
                      }
                    ]
                  }
                },
                {
                  "line": 1341,
                  "lval": "mtime",
                  "rval": {
                    "type": "functionCall",
                    "name": "irange",
                    "arguments": [
                      {
                        "type": "string",
                        "value": "0"
                      },
                      {
                        "type": "functionCall",
                        "name": "ago",
                        "arguments": [
                          {
                            "type": "string",
                            "value": "0"
                          },
                          {
                            "type": "string",
                            "value": "0"
                          },
                          {
                            "type": "string",
                            "value": "$(days)"
                          },
                          {
                            "type": "string",
                            "value": "0"
                          },
                          {
                            "type": "string",
                            "value": "0"
                          },
                          {
                            "type": "string",
                            "value": "0"
                          }
                        ]
                      }
                    ]
                  }
                },
                {
                  "line": 1342,
                  "lval": "file_result",
                  "rval": {
                    "type": "string",
                    "value": "file_types.mtime"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1349,
          "namespace": "default",
          "name": "detect_all_change",
          "bodyType": "changes",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1354,
                  "lval": "hash",
                  "rval": {
                    "type": "string",
                    "value": "best"
                  }
                },
                {
                  "line": 1355,
                  "lval": "report_changes",
                  "rval": {
                    "type": "string",
                    "value": "all"
                  }
                },
                {
                  "line": 1356,
                  "lval": "update_hashes",
                  "rval": {
                    "type": "string",
                    "value": "yes"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1361,
          "namespace": "default",
          "name": "detect_all_change_using",
          "bodyType": "changes",
          "arguments": [
            "hash"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1369,
                  "lval": "hash",
                  "rval": {
                    "type": "string",
                    "value": "$(hash)"
                  }
                },
                {
                  "line": 1370,
                  "lval": "report_changes",
                  "rval": {
                    "type": "string",
                    "value": "all"
                  }
                },
                {
                  "line": 1371,
                  "lval": "update_hashes",
                  "rval": {
                    "type": "string",
                    "value": "yes"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1376,
          "namespace": "default",
          "name": "detect_content",
          "bodyType": "changes",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1381,
                  "lval": "hash",
                  "rval": {
                    "type": "string",
                    "value": "md5"
                  }
                },
                {
                  "line": 1382,
                  "lval": "report_changes",
                  "rval": {
                    "type": "string",
                    "value": "content"
                  }
                },
                {
                  "line": 1383,
                  "lval": "update_hashes",
                  "rval": {
                    "type": "string",
                    "value": "yes"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1388,
          "namespace": "default",
          "name": "detect_content_using",
          "bodyType": "changes",
          "arguments": [
            "hash"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1396,
                  "lval": "hash",
                  "rval": {
                    "type": "string",
                    "value": "$(hash)"
                  }
                },
                {
                  "line": 1397,
                  "lval": "report_changes",
                  "rval": {
                    "type": "string",
                    "value": "content"
                  }
                },
                {
                  "line": 1398,
                  "lval": "update_hashes",
                  "rval": {
                    "type": "string",
                    "value": "yes"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1403,
          "namespace": "default",
          "name": "noupdate",
          "bodyType": "changes",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1406,
                  "lval": "hash",
                  "rval": {
                    "type": "string",
                    "value": "sha256"
                  }
                },
                {
                  "line": 1407,
                  "lval": "report_changes",
                  "rval": {
                    "type": "string",
                    "value": "content"
                  }
                },
                {
                  "line": 1408,
                  "lval": "update_hashes",
                  "rval": {
                    "type": "string",
                    "value": "no"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1413,
          "namespace": "default",
          "name": "diff",
          "bodyType": "changes",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1416,
                  "lval": "hash",
                  "rval": {
                    "type": "string",
                    "value": "sha256"
                  }
                },
                {
                  "line": 1417,
                  "lval": "report_changes",
                  "rval": {
                    "type": "string",
                    "value": "content"
                  }
                },
                {
                  "line": 1418,
                  "lval": "report_diffs",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                },
                {
                  "line": 1419,
                  "lval": "update_hashes",
                  "rval": {
                    "type": "string",
                    "value": "yes"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1424,
          "namespace": "default",
          "name": "all_changes",
          "bodyType": "changes",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1427,
                  "lval": "hash",
                  "rval": {
                    "type": "string",
                    "value": "sha256"
                  }
                },
                {
                  "line": 1428,
                  "lval": "report_changes",
                  "rval": {
                    "type": "string",
                    "value": "all"
                  }
                },
                {
                  "line": 1429,
                  "lval": "report_diffs",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                },
                {
                  "line": 1430,
                  "lval": "update_hashes",
                  "rval": {
                    "type": "string",
                    "value": "yes"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1435,
          "namespace": "default",
          "name": "diff_noupdate",
          "bodyType": "changes",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1437,
                  "lval": "hash",
                  "rval": {
                    "type": "string",
                    "value": "sha256"
                  }
                },
                {
                  "line": 1438,
                  "lval": "report_changes",
                  "rval": {
                    "type": "string",
                    "value": "content"
                  }
                },
                {
                  "line": 1439,
                  "lval": "report_diffs",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                },
                {
                  "line": 1440,
                  "lval": "update_hashes",
                  "rval": {
                    "type": "string",
                    "value": "no"
                  }
                }
              ]
            }
          ]
        }
      ]
    }