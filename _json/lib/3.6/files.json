{
      "bundles": [
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 50,
          "namespace": "default",
          "name": "files_common",
          "bundleType": "common",
          "arguments": [],
          "promiseTypes": [
            {
              "line": 53,
              "name": "vars",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 54,
                      "promiser": "inputs",
                      "attributes": [
                        {
                          "line": 54,
                          "lval": "slist",
                          "rval": {
                            "type": "list",
                            "value": [
                              {
                                "type": "string",
                                "value": "$(this.promise_dirname)/common.cf"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 67,
          "namespace": "default",
          "name": "insert_lines",
          "bundleType": "edit_line",
          "arguments": [
            "lines"
          ],
          "promiseTypes": [
            {
              "line": 74,
              "name": "insert_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 76,
                      "promiser": "$(lines)",
                      "attributes": [
                        {
                          "line": 77,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Append lines if they don\\'t exist"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 82,
          "namespace": "default",
          "name": "insert_file",
          "bundleType": "edit_line",
          "arguments": [
            "templatefile"
          ],
          "promiseTypes": [
            {
              "line": 87,
              "name": "insert_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 89,
                      "promiser": "$(templatefile)",
                      "attributes": [
                        {
                          "line": 90,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Insert the template file into the file being edited"
                          }
                        },
                        {
                          "line": 91,
                          "lval": "insert_type",
                          "rval": {
                            "type": "string",
                            "value": "file"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 96,
          "namespace": "default",
          "name": "comment_lines_matching",
          "bundleType": "edit_line",
          "arguments": [
            "regex",
            "comment"
          ],
          "promiseTypes": [
            {
              "line": 101,
              "name": "replace_patterns",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 103,
                      "promiser": "^($(regex))$",
                      "attributes": [
                        {
                          "line": 105,
                          "lval": "replace_with",
                          "rval": {
                            "type": "functionCall",
                            "name": "comment",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(comment)"
                              }
                            ]
                          }
                        },
                        {
                          "line": 106,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Search and replace string"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 111,
          "namespace": "default",
          "name": "uncomment_lines_matching",
          "bundleType": "edit_line",
          "arguments": [
            "regex",
            "comment"
          ],
          "promiseTypes": [
            {
              "line": 117,
              "name": "replace_patterns",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 119,
                      "promiser": "^$(comment)\\s?($(regex))$",
                      "attributes": [
                        {
                          "line": 121,
                          "lval": "replace_with",
                          "rval": {
                            "type": "symbol",
                            "value": "uncomment"
                          }
                        },
                        {
                          "line": 122,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Uncomment lines matching a regular expression"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 127,
          "namespace": "default",
          "name": "comment_lines_containing",
          "bundleType": "edit_line",
          "arguments": [
            "regex",
            "comment"
          ],
          "promiseTypes": [
            {
              "line": 132,
              "name": "replace_patterns",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 134,
                      "promiser": "^((?!$(comment)).*$(regex).*)$",
                      "attributes": [
                        {
                          "line": 136,
                          "lval": "replace_with",
                          "rval": {
                            "type": "functionCall",
                            "name": "comment",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(comment)"
                              }
                            ]
                          }
                        },
                        {
                          "line": 137,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Comment out lines in a file"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 142,
          "namespace": "default",
          "name": "uncomment_lines_containing",
          "bundleType": "edit_line",
          "arguments": [
            "regex",
            "comment"
          ],
          "promiseTypes": [
            {
              "line": 148,
              "name": "replace_patterns",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 150,
                      "promiser": "^$(comment)\\s?(.*$(regex).*)$",
                      "attributes": [
                        {
                          "line": 152,
                          "lval": "replace_with",
                          "rval": {
                            "type": "symbol",
                            "value": "uncomment"
                          }
                        },
                        {
                          "line": 153,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Uncomment a line containing a fragment"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 158,
          "namespace": "default",
          "name": "delete_lines_matching",
          "bundleType": "edit_line",
          "arguments": [
            "regex"
          ],
          "promiseTypes": [
            {
              "line": 162,
              "name": "delete_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 164,
                      "promiser": "$(regex)",
                      "attributes": [
                        {
                          "line": 166,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Delete lines matching regular expressions"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 171,
          "namespace": "default",
          "name": "warn_lines_matching",
          "bundleType": "edit_line",
          "arguments": [
            "regex"
          ],
          "promiseTypes": [
            {
              "line": 175,
              "name": "delete_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 177,
                      "promiser": "$(regex)",
                      "attributes": [
                        {
                          "line": 179,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Warn about lines in a file"
                          }
                        },
                        {
                          "line": 180,
                          "lval": "action",
                          "rval": {
                            "type": "symbol",
                            "value": "warn_only"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 185,
          "namespace": "default",
          "name": "prepend_if_no_line",
          "bundleType": "edit_line",
          "arguments": [
            "string"
          ],
          "promiseTypes": [
            {
              "line": 192,
              "name": "insert_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 193,
                      "promiser": "$(string)",
                      "attributes": [
                        {
                          "line": 194,
                          "lval": "location",
                          "rval": {
                            "type": "symbol",
                            "value": "start"
                          }
                        },
                        {
                          "line": 195,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Prepend a line to the file if it doesn\\'t already exist"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 198,
          "namespace": "default",
          "name": "append_if_no_line",
          "bundleType": "edit_line",
          "arguments": [
            "str"
          ],
          "promiseTypes": [
            {
              "line": 202,
              "name": "insert_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 204,
                      "promiser": "$(str)",
                      "attributes": [
                        {
                          "line": 206,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Append a line to the file if it doesn\\'t already exist"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 211,
          "namespace": "default",
          "name": "append_if_no_lines",
          "bundleType": "edit_line",
          "arguments": [
            "list"
          ],
          "promiseTypes": [
            {
              "line": 215,
              "name": "insert_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 217,
                      "promiser": "$(list)",
                      "attributes": [
                        {
                          "line": 219,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Append lines to the file if they don\\'t already exist"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 224,
          "namespace": "default",
          "name": "replace_line_end",
          "bundleType": "edit_line",
          "arguments": [
            "start",
            "end"
          ],
          "promiseTypes": [
            {
              "line": 239,
              "name": "field_edits",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 241,
                      "promiser": "\\s*$(start)\\s.*",
                      "attributes": [
                        {
                          "line": 242,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Replace lines with $(this.start) and $(this.end)"
                          }
                        },
                        {
                          "line": 243,
                          "lval": "edit_field",
                          "rval": {
                            "type": "functionCall",
                            "name": "line",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "(^|\\s)$(start)\\s*"
                              },
                              {
                                "type": "string",
                                "value": "2"
                              },
                              {
                                "type": "string",
                                "value": "$(end)"
                              },
                              {
                                "type": "string",
                                "value": "set"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 248,
          "namespace": "default",
          "name": "append_to_line_end",
          "bundleType": "edit_line",
          "arguments": [
            "start",
            "end"
          ],
          "promiseTypes": [
            {
              "line": 274,
              "name": "field_edits",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 276,
                      "promiser": "\\s*$(start)\\s.*",
                      "attributes": [
                        {
                          "line": 277,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Append lines with $(this.start) and $(this.end)"
                          }
                        },
                        {
                          "line": 278,
                          "lval": "edit_field",
                          "rval": {
                            "type": "functionCall",
                            "name": "line",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "(^|\\s)$(start)\\s*"
                              },
                              {
                                "type": "string",
                                "value": "2"
                              },
                              {
                                "type": "string",
                                "value": "$(end)"
                              },
                              {
                                "type": "string",
                                "value": "append"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 283,
          "namespace": "default",
          "name": "regex_replace",
          "bundleType": "edit_line",
          "arguments": [
            "find",
            "replace"
          ],
          "promiseTypes": [
            {
              "line": 289,
              "name": "replace_patterns",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 291,
                      "promiser": "$(find)",
                      "attributes": [
                        {
                          "line": 292,
                          "lval": "replace_with",
                          "rval": {
                            "type": "functionCall",
                            "name": "value",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(replace)"
                              }
                            ]
                          }
                        },
                        {
                          "line": 293,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Search and replace string"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 298,
          "namespace": "default",
          "name": "resolvconf",
          "bundleType": "edit_line",
          "arguments": [
            "search",
            "list"
          ],
          "promiseTypes": [
            {
              "line": 308,
              "name": "delete_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 310,
                      "promiser": "search.*",
                      "attributes": [
                        {
                          "line": 310,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Reset search lines from resolver"
                          }
                        }
                      ]
                    },
                    {
                      "line": 311,
                      "promiser": "nameserver.*",
                      "attributes": [
                        {
                          "line": 311,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Reset nameservers in resolver"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 313,
              "name": "insert_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 315,
                      "promiser": "search $(search)",
                      "attributes": [
                        {
                          "line": 315,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Add search domains to resolver"
                          }
                        }
                      ]
                    },
                    {
                      "line": 316,
                      "promiser": "nameserver $(list)",
                      "attributes": [
                        {
                          "line": 316,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Add name servers to resolver"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 321,
          "namespace": "default",
          "name": "resolvconf_o",
          "bundleType": "edit_line",
          "arguments": [
            "search",
            "list",
            "options"
          ],
          "promiseTypes": [
            {
              "line": 333,
              "name": "delete_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 335,
                      "promiser": "search.*",
                      "attributes": [
                        {
                          "line": 335,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Reset search lines from resolver"
                          }
                        }
                      ]
                    },
                    {
                      "line": 336,
                      "promiser": "nameserver.*",
                      "attributes": [
                        {
                          "line": 336,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Reset nameservers in resolver"
                          }
                        }
                      ]
                    },
                    {
                      "line": 337,
                      "promiser": "options.*",
                      "attributes": [
                        {
                          "line": 337,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Reset options in resolver"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 339,
              "name": "insert_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 341,
                      "promiser": "search $(search)",
                      "attributes": [
                        {
                          "line": 341,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Add search domains to resolver"
                          }
                        }
                      ]
                    },
                    {
                      "line": 342,
                      "promiser": "nameserver $(list)",
                      "attributes": [
                        {
                          "line": 342,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Add name servers to resolver"
                          }
                        }
                      ]
                    },
                    {
                      "line": 343,
                      "promiser": "options $(options)",
                      "attributes": [
                        {
                          "line": 343,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Add options to resolver"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 348,
          "namespace": "default",
          "name": "manage_variable_values_ini",
          "bundleType": "edit_line",
          "arguments": [
            "tab",
            "sectionName"
          ],
          "promiseTypes": [
            {
              "line": 363,
              "name": "vars",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 364,
                      "promiser": "index",
                      "attributes": [
                        {
                          "line": 364,
                          "lval": "slist",
                          "rval": {
                            "type": "functionCall",
                            "name": "getindices",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(tab)[$(sectionName)]"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 367,
                      "promiser": "cindex[$(index)]",
                      "attributes": [
                        {
                          "line": 367,
                          "lval": "string",
                          "rval": {
                            "type": "functionCall",
                            "name": "canonify",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(index)"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 369,
              "name": "classes",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 370,
                      "promiser": "edit_$(cindex[$(index)])",
                      "attributes": [
                        {
                          "line": 370,
                          "lval": "not",
                          "rval": {
                            "type": "functionCall",
                            "name": "strcmp",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$($(tab)[$(sectionName)][$(index)])"
                              },
                              {
                                "type": "string",
                                "value": "dontchange"
                              }
                            ]
                          }
                        },
                        {
                          "line": 371,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Create conditions to make changes"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 373,
              "name": "field_edits",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 376,
                      "promiser": "#+\\s*$(index)\\s*=.*",
                      "attributes": [
                        {
                          "line": 377,
                          "lval": "select_region",
                          "rval": {
                            "type": "functionCall",
                            "name": "INI_section",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(sectionName)"
                              }
                            ]
                          }
                        },
                        {
                          "line": 378,
                          "lval": "edit_field",
                          "rval": {
                            "type": "functionCall",
                            "name": "col",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "="
                              },
                              {
                                "type": "string",
                                "value": "1"
                              },
                              {
                                "type": "string",
                                "value": "$(index)"
                              },
                              {
                                "type": "string",
                                "value": "set"
                              }
                            ]
                          }
                        },
                        {
                          "line": 379,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "string",
                            "value": "edit_$(cindex[$(index)])"
                          }
                        }
                      ]
                    },
                    {
                      "line": 382,
                      "promiser": "$(index)\\s*=.*",
                      "attributes": [
                        {
                          "line": 383,
                          "lval": "edit_field",
                          "rval": {
                            "type": "functionCall",
                            "name": "col",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "="
                              },
                              {
                                "type": "string",
                                "value": "2"
                              },
                              {
                                "type": "string",
                                "value": "$($(tab)[$(sectionName)][$(index)])"
                              },
                              {
                                "type": "string",
                                "value": "set"
                              }
                            ]
                          }
                        },
                        {
                          "line": 384,
                          "lval": "select_region",
                          "rval": {
                            "type": "functionCall",
                            "name": "INI_section",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(sectionName)"
                              }
                            ]
                          }
                        },
                        {
                          "line": 385,
                          "lval": "classes",
                          "rval": {
                            "type": "functionCall",
                            "name": "if_ok",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "manage_variable_values_ini_not_$(cindex[$(index)])"
                              }
                            ]
                          }
                        },
                        {
                          "line": 386,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "string",
                            "value": "edit_$(cindex[$(index)])"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 388,
              "name": "delete_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 389,
                      "promiser": ".*",
                      "attributes": [
                        {
                          "line": 390,
                          "lval": "select_region",
                          "rval": {
                            "type": "functionCall",
                            "name": "INI_section",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(sectionName)"
                              }
                            ]
                          }
                        },
                        {
                          "line": 391,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Remove all entries in the region so there are no extra entries"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 393,
              "name": "insert_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 394,
                      "promiser": "[$(sectionName)]",
                      "attributes": [
                        {
                          "line": 395,
                          "lval": "location",
                          "rval": {
                            "type": "symbol",
                            "value": "start"
                          }
                        },
                        {
                          "line": 396,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Insert lines"
                          }
                        }
                      ]
                    },
                    {
                      "line": 398,
                      "promiser": "$(index)=$($(tab)[$(sectionName)][$(index)])",
                      "attributes": [
                        {
                          "line": 399,
                          "lval": "select_region",
                          "rval": {
                            "type": "functionCall",
                            "name": "INI_section",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(sectionName)"
                              }
                            ]
                          }
                        },
                        {
                          "line": 400,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "string",
                            "value": "!manage_variable_values_ini_not_$(cindex[$(index)]).edit_$(cindex[$(index)])"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 406,
          "namespace": "default",
          "name": "set_variable_values_ini",
          "bundleType": "edit_line",
          "arguments": [
            "tab",
            "sectionName"
          ],
          "promiseTypes": [
            {
              "line": 420,
              "name": "vars",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 421,
                      "promiser": "index",
                      "attributes": [
                        {
                          "line": 421,
                          "lval": "slist",
                          "rval": {
                            "type": "functionCall",
                            "name": "getindices",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(tab)[$(sectionName)]"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 424,
                      "promiser": "cindex[$(index)]",
                      "attributes": [
                        {
                          "line": 424,
                          "lval": "string",
                          "rval": {
                            "type": "functionCall",
                            "name": "canonify",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(index)"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 426,
              "name": "classes",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 427,
                      "promiser": "edit_$(cindex[$(index)])",
                      "attributes": [
                        {
                          "line": 427,
                          "lval": "not",
                          "rval": {
                            "type": "functionCall",
                            "name": "strcmp",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$($(tab)[$(sectionName)][$(index)])"
                              },
                              {
                                "type": "string",
                                "value": "dontchange"
                              }
                            ]
                          }
                        },
                        {
                          "line": 428,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Create conditions to make changes"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 430,
              "name": "field_edits",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 433,
                      "promiser": "#+\\s*$(index)\\s*=.*",
                      "attributes": [
                        {
                          "line": 434,
                          "lval": "select_region",
                          "rval": {
                            "type": "functionCall",
                            "name": "INI_section",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(sectionName)"
                              }
                            ]
                          }
                        },
                        {
                          "line": 435,
                          "lval": "edit_field",
                          "rval": {
                            "type": "functionCall",
                            "name": "col",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "="
                              },
                              {
                                "type": "string",
                                "value": "1"
                              },
                              {
                                "type": "string",
                                "value": "$(index)"
                              },
                              {
                                "type": "string",
                                "value": "set"
                              }
                            ]
                          }
                        },
                        {
                          "line": 436,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "string",
                            "value": "edit_$(cindex[$(index)])"
                          }
                        }
                      ]
                    },
                    {
                      "line": 439,
                      "promiser": "$(index)\\s*=.*",
                      "attributes": [
                        {
                          "line": 440,
                          "lval": "edit_field",
                          "rval": {
                            "type": "functionCall",
                            "name": "col",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "="
                              },
                              {
                                "type": "string",
                                "value": "2"
                              },
                              {
                                "type": "string",
                                "value": "$($(tab)[$(sectionName)][$(index)])"
                              },
                              {
                                "type": "string",
                                "value": "set"
                              }
                            ]
                          }
                        },
                        {
                          "line": 441,
                          "lval": "select_region",
                          "rval": {
                            "type": "functionCall",
                            "name": "INI_section",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(sectionName)"
                              }
                            ]
                          }
                        },
                        {
                          "line": 442,
                          "lval": "classes",
                          "rval": {
                            "type": "functionCall",
                            "name": "if_ok",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "set_variable_values_ini_not_$(cindex[$(index)])"
                              }
                            ]
                          }
                        },
                        {
                          "line": 443,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "string",
                            "value": "edit_$(cindex[$(index)])"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 445,
              "name": "insert_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 446,
                      "promiser": "[$(sectionName)]",
                      "attributes": [
                        {
                          "line": 447,
                          "lval": "location",
                          "rval": {
                            "type": "symbol",
                            "value": "start"
                          }
                        },
                        {
                          "line": 448,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Insert lines"
                          }
                        }
                      ]
                    },
                    {
                      "line": 450,
                      "promiser": "$(index)=$($(tab)[$(sectionName)][$(index)])",
                      "attributes": [
                        {
                          "line": 451,
                          "lval": "select_region",
                          "rval": {
                            "type": "functionCall",
                            "name": "INI_section",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(sectionName)"
                              }
                            ]
                          }
                        },
                        {
                          "line": 452,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "string",
                            "value": "!set_variable_values_ini_not_$(cindex[$(index)]).edit_$(cindex[$(index)])"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 456,
          "namespace": "default",
          "name": "insert_ini_section",
          "bundleType": "edit_line",
          "arguments": [
            "name",
            "config"
          ],
          "promiseTypes": [
            {
              "line": 471,
              "name": "vars",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 472,
                      "promiser": "k",
                      "attributes": [
                        {
                          "line": 472,
                          "lval": "slist",
                          "rval": {
                            "type": "functionCall",
                            "name": "getindices",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(config)"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 474,
              "name": "insert_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 475,
                      "promiser": "[$(name)]",
                      "attributes": [
                        {
                          "line": 476,
                          "lval": "location",
                          "rval": {
                            "type": "symbol",
                            "value": "start"
                          }
                        },
                        {
                          "line": 477,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Prepend a line to the file if it doesn\\'t already exist"
                          }
                        }
                      ]
                    },
                    {
                      "line": 479,
                      "promiser": "$(k)=$($(config)[$(k)])",
                      "attributes": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 483,
          "namespace": "default",
          "name": "set_quoted_values",
          "bundleType": "edit_line",
          "arguments": [
            "v"
          ],
          "promiseTypes": [
            {
              "line": 509,
              "name": "meta",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 510,
                      "promiser": "tags",
                      "attributes": [
                        {
                          "line": 516,
                          "lval": "slist",
                          "rval": {
                            "type": "list",
                            "value": [
                              {
                                "type": "string",
                                "value": "deprecated=3.6.0"
                              },
                              {
                                "type": "string",
                                "value": "deprecation-reason=Generic reimplementation"
                              },
                              {
                                "type": "string",
                                "value": "replaced-by=set_line_based"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 518,
              "name": "vars",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 519,
                      "promiser": "index",
                      "attributes": [
                        {
                          "line": 519,
                          "lval": "slist",
                          "rval": {
                            "type": "functionCall",
                            "name": "getindices",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(v)"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 522,
                      "promiser": "cindex[$(index)]",
                      "attributes": [
                        {
                          "line": 522,
                          "lval": "string",
                          "rval": {
                            "type": "functionCall",
                            "name": "canonify",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(index)"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 524,
              "name": "field_edits",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 526,
                      "promiser": "#+\\s*$(index)\\s*=.*",
                      "attributes": [
                        {
                          "line": 527,
                          "lval": "edit_field",
                          "rval": {
                            "type": "functionCall",
                            "name": "col",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "="
                              },
                              {
                                "type": "string",
                                "value": "1"
                              },
                              {
                                "type": "string",
                                "value": "$(index)"
                              },
                              {
                                "type": "string",
                                "value": "set"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 530,
                      "promiser": "\\s*$(index)\\s*=.*",
                      "attributes": [
                        {
                          "line": 531,
                          "lval": "edit_field",
                          "rval": {
                            "type": "functionCall",
                            "name": "col",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "="
                              },
                              {
                                "type": "string",
                                "value": "2"
                              },
                              {
                                "type": "string",
                                "value": "\\\"$($(v)[$(index)])\\\""
                              },
                              {
                                "type": "string",
                                "value": "set"
                              }
                            ]
                          }
                        },
                        {
                          "line": 532,
                          "lval": "classes",
                          "rval": {
                            "type": "functionCall",
                            "name": "if_ok",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(cindex[$(index)])_in_file"
                              }
                            ]
                          }
                        },
                        {
                          "line": 533,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Match a line starting like key = something"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 535,
              "name": "insert_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 536,
                      "promiser": "$(index)=\"$($(v)[$(index)])\"",
                      "attributes": [
                        {
                          "line": 537,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Insert a variable definition"
                          }
                        },
                        {
                          "line": 538,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "string",
                            "value": "!$(cindex[$(index)])_in_file"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 543,
          "namespace": "default",
          "name": "set_variable_values",
          "bundleType": "edit_line",
          "arguments": [
            "v"
          ],
          "promiseTypes": [
            {
              "line": 569,
              "name": "meta",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 570,
                      "promiser": "tags",
                      "attributes": [
                        {
                          "line": 576,
                          "lval": "slist",
                          "rval": {
                            "type": "list",
                            "value": [
                              {
                                "type": "string",
                                "value": "deprecated=3.6.0"
                              },
                              {
                                "type": "string",
                                "value": "deprecation-reason=Generic reimplementation"
                              },
                              {
                                "type": "string",
                                "value": "replaced-by=set_line_based"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 578,
              "name": "vars",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 580,
                      "promiser": "index",
                      "attributes": [
                        {
                          "line": 580,
                          "lval": "slist",
                          "rval": {
                            "type": "functionCall",
                            "name": "getindices",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(v)"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 584,
                      "promiser": "cindex[$(index)]",
                      "attributes": [
                        {
                          "line": 584,
                          "lval": "string",
                          "rval": {
                            "type": "functionCall",
                            "name": "canonify",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(index)"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 585,
                      "promiser": "cv",
                      "attributes": [
                        {
                          "line": 585,
                          "lval": "string",
                          "rval": {
                            "type": "functionCall",
                            "name": "canonify",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(v)"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 587,
              "name": "field_edits",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 591,
                      "promiser": "\\s*$(index)\\s*=.*",
                      "attributes": [
                        {
                          "line": 593,
                          "lval": "edit_field",
                          "rval": {
                            "type": "functionCall",
                            "name": "col",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "\\s*$(index)\\s*="
                              },
                              {
                                "type": "string",
                                "value": "2"
                              },
                              {
                                "type": "string",
                                "value": "$($(v)[$(index)])"
                              },
                              {
                                "type": "string",
                                "value": "set"
                              }
                            ]
                          }
                        },
                        {
                          "line": 594,
                          "lval": "classes",
                          "rval": {
                            "type": "functionCall",
                            "name": "if_ok",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(cv)_$(cindex[$(index)])_in_file"
                              }
                            ]
                          }
                        },
                        {
                          "line": 595,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Match a line starting like key = something"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 597,
              "name": "insert_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 599,
                      "promiser": "$(index)=$($(v)[$(index)])",
                      "attributes": [
                        {
                          "line": 601,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Insert a variable definition"
                          }
                        },
                        {
                          "line": 602,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "string",
                            "value": "!$(cv)_$(cindex[$(index)])_in_file"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 605,
          "namespace": "default",
          "name": "set_config_values",
          "bundleType": "edit_line",
          "arguments": [
            "v"
          ],
          "promiseTypes": [
            {
              "line": 618,
              "name": "meta",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 619,
                      "promiser": "tags",
                      "attributes": [
                        {
                          "line": 625,
                          "lval": "slist",
                          "rval": {
                            "type": "list",
                            "value": [
                              {
                                "type": "string",
                                "value": "deprecated=3.6.0"
                              },
                              {
                                "type": "string",
                                "value": "deprecation-reason=Generic reimplementation"
                              },
                              {
                                "type": "string",
                                "value": "replaced-by=set_line_based"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 627,
              "name": "vars",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 628,
                      "promiser": "index",
                      "attributes": [
                        {
                          "line": 628,
                          "lval": "slist",
                          "rval": {
                            "type": "functionCall",
                            "name": "getindices",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(v)"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 631,
                      "promiser": "cindex[$(index)]",
                      "attributes": [
                        {
                          "line": 631,
                          "lval": "string",
                          "rval": {
                            "type": "functionCall",
                            "name": "canonify",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(index)"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 634,
                      "promiser": "ev[$(index)]",
                      "attributes": [
                        {
                          "line": 634,
                          "lval": "string",
                          "rval": {
                            "type": "functionCall",
                            "name": "escape",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$($(v)[$(index)])"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 637,
                      "promiser": "index_comment_matches_$(cindex[$(index)])",
                      "attributes": [
                        {
                          "line": 637,
                          "lval": "int",
                          "rval": {
                            "type": "functionCall",
                            "name": "countlinesmatching",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "^\\s*#\\s*($(index)\\s+.*|$(index))$"
                              },
                              {
                                "type": "string",
                                "value": "$(edit.filename)"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 640,
              "name": "classes",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 642,
                      "promiser": "line_exists_$(cindex[$(index)])",
                      "attributes": [
                        {
                          "line": 642,
                          "lval": "expression",
                          "rval": {
                            "type": "functionCall",
                            "name": "regline",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "^\\s*($(index)\\s.*|$(index))$"
                              },
                              {
                                "type": "string",
                                "value": "$(edit.filename)"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 645,
                      "promiser": "multiple_comments_$(cindex[$(index)])",
                      "attributes": [
                        {
                          "line": 645,
                          "lval": "expression",
                          "rval": {
                            "type": "functionCall",
                            "name": "isgreaterthan",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(index_comment_matches_$(cindex[$(index)]))"
                              },
                              {
                                "type": "string",
                                "value": "1"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 648,
              "name": "replace_patterns",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 651,
                      "promiser": "^\\s*#\\s*($(index)\\s+.*|$(index))$",
                      "attributes": [
                        {
                          "line": 652,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Uncommented the value $(index)"
                          }
                        },
                        {
                          "line": 653,
                          "lval": "replace_with",
                          "rval": {
                            "type": "functionCall",
                            "name": "value",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(index) $($(v)[$(index)])"
                              }
                            ]
                          }
                        },
                        {
                          "line": 654,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "string",
                            "value": "!line_exists_$(cindex[$(index)]).!replace_attempted_$(cindex[$(index)]).!multiple_comments_$(cindex[$(index)])"
                          }
                        },
                        {
                          "line": 655,
                          "lval": "classes",
                          "rval": {
                            "type": "functionCall",
                            "name": "always",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "uncommented_$(cindex[$(index)])"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 659,
                      "promiser": "^\\s*($(index)\\s+(?!$(ev[$(index)])$).*|$(index))$",
                      "attributes": [
                        {
                          "line": 660,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Correct the value $(index)"
                          }
                        },
                        {
                          "line": 661,
                          "lval": "replace_with",
                          "rval": {
                            "type": "functionCall",
                            "name": "value",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(index) $($(v)[$(index)])"
                              }
                            ]
                          }
                        },
                        {
                          "line": 662,
                          "lval": "classes",
                          "rval": {
                            "type": "functionCall",
                            "name": "always",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "replace_attempted_$(cindex[$(index)])"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 664,
              "name": "insert_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 668,
                      "promiser": "$(index) $($(v)[$(index)])",
                      "attributes": [
                        {
                          "line": 669,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Insert the value, marker exists $(index)"
                          }
                        },
                        {
                          "line": 670,
                          "lval": "location",
                          "rval": {
                            "type": "functionCall",
                            "name": "after",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "^\\s*#\\s*($(index)\\s+.*|$(index))$"
                              }
                            ]
                          }
                        },
                        {
                          "line": 671,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "string",
                            "value": "replace_attempted_$(cindex[$(index)]).multiple_comments_$(cindex[$(index)])"
                          }
                        }
                      ]
                    },
                    {
                      "line": 675,
                      "promiser": "$(index) $($(v)[$(index)])",
                      "attributes": [
                        {
                          "line": 676,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Insert the value, marker doesn\\'t exist $(index)"
                          }
                        },
                        {
                          "line": 677,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "string",
                            "value": "replace_attempted_$(cindex[$(index)]).!multiple_comments_$(cindex[$(index)])"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 681,
          "namespace": "default",
          "name": "set_line_based",
          "bundleType": "edit_line",
          "arguments": [
            "v",
            "sep",
            "bp",
            "kp",
            "cp"
          ],
          "promiseTypes": [
            {
              "line": 715,
              "name": "meta",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 716,
                      "promiser": "tags",
                      "attributes": [
                        {
                          "line": 724,
                          "lval": "slist",
                          "rval": {
                            "type": "list",
                            "value": [
                              {
                                "type": "string",
                                "value": "replaces=set_config_values"
                              },
                              {
                                "type": "string",
                                "value": "replaces=set_config_values_matching"
                              },
                              {
                                "type": "string",
                                "value": "replaces=set_variable_values"
                              },
                              {
                                "type": "string",
                                "value": "replaces=set_quoted_values"
                              },
                              {
                                "type": "string",
                                "value": "replaces=maintain_key_values"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 726,
              "name": "vars",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 727,
                      "promiser": "vkeys",
                      "attributes": [
                        {
                          "line": 727,
                          "lval": "slist",
                          "rval": {
                            "type": "functionCall",
                            "name": "getindices",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(v)"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 728,
                      "promiser": "i",
                      "attributes": [
                        {
                          "line": 728,
                          "lval": "slist",
                          "rval": {
                            "type": "functionCall",
                            "name": "grep",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(kp)"
                              },
                              {
                                "type": "string",
                                "value": "vkeys"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 731,
                      "promiser": "ci[$(i)]",
                      "attributes": [
                        {
                          "line": 731,
                          "lval": "string",
                          "rval": {
                            "type": "functionCall",
                            "name": "canonify",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(i)"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 734,
                      "promiser": "ev[$(i)]",
                      "attributes": [
                        {
                          "line": 734,
                          "lval": "string",
                          "rval": {
                            "type": "functionCall",
                            "name": "escape",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$($(v)[$(i)])"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 737,
                      "promiser": "comment_matches_$(ci[$(i)])",
                      "attributes": [
                        {
                          "line": 739,
                          "lval": "int",
                          "rval": {
                            "type": "functionCall",
                            "name": "countlinesmatching",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "^$(cp)($(i)$(bp).*|$(i))$"
                              },
                              {
                                "type": "string",
                                "value": "$(edit.filename)"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 742,
              "name": "classes",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 744,
                      "promiser": "exists_$(ci[$(i)])",
                      "attributes": [
                        {
                          "line": 746,
                          "lval": "expression",
                          "rval": {
                            "type": "functionCall",
                            "name": "regline",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "^\\s*($(i)$(bp).*|$(i))$"
                              },
                              {
                                "type": "string",
                                "value": "$(edit.filename)"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 749,
                      "promiser": "multiple_comments_$(ci[$(i)])",
                      "attributes": [
                        {
                          "line": 751,
                          "lval": "expression",
                          "rval": {
                            "type": "functionCall",
                            "name": "isgreaterthan",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(comment_matches_$(ci[$(i)]))"
                              },
                              {
                                "type": "string",
                                "value": "1"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 754,
              "name": "replace_patterns",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 757,
                      "promiser": "^$(cp)($(i)$(bp).*|$(i))$",
                      "attributes": [
                        {
                          "line": 758,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Uncommented the value \\'$(i)\\'"
                          }
                        },
                        {
                          "line": 759,
                          "lval": "replace_with",
                          "rval": {
                            "type": "functionCall",
                            "name": "value",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(i)$(sep)$($(v)[$(i)])"
                              }
                            ]
                          }
                        },
                        {
                          "line": 760,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "string",
                            "value": "!exists_$(ci[$(i)]).!replace_attempted_$(ci[$(i)]).!multiple_comments_$(ci[$(i)])"
                          }
                        },
                        {
                          "line": 761,
                          "lval": "classes",
                          "rval": {
                            "type": "functionCall",
                            "name": "always",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "uncommented_$(ci[$(i)])"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 765,
                      "promiser": "^\\s*($(i)$(bp)(?!$(ev[$(i)])$).*|$(i))$",
                      "attributes": [
                        {
                          "line": 766,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Correct the value \\'$(i)\\'"
                          }
                        },
                        {
                          "line": 767,
                          "lval": "replace_with",
                          "rval": {
                            "type": "functionCall",
                            "name": "value",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(i)$(sep)$($(v)[$(i)])"
                              }
                            ]
                          }
                        },
                        {
                          "line": 768,
                          "lval": "classes",
                          "rval": {
                            "type": "functionCall",
                            "name": "always",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "replace_attempted_$(ci[$(i)])"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 770,
              "name": "insert_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 774,
                      "promiser": "$(i)$(sep)$($(v)[$(i)])",
                      "attributes": [
                        {
                          "line": 775,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Insert the value, marker \\'$(i)\\' exists"
                          }
                        },
                        {
                          "line": 776,
                          "lval": "location",
                          "rval": {
                            "type": "functionCall",
                            "name": "after",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "^$(cp)($(i)$(bp).*|$(i))$"
                              }
                            ]
                          }
                        },
                        {
                          "line": 777,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "string",
                            "value": "replace_attempted_$(ci[$(i)]).multiple_comments_$(ci[$(i)])"
                          }
                        }
                      ]
                    },
                    {
                      "line": 781,
                      "promiser": "$(i)$(sep)$($(v)[$(i)])",
                      "attributes": [
                        {
                          "line": 782,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Insert the value, marker \\'$(i)\\' doesn\\'t exist"
                          }
                        },
                        {
                          "line": 783,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "string",
                            "value": "replace_attempted_$(ci[$(i)]).!multiple_comments_$(ci[$(i)]).!exists_$(ci[$(i)])"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 785,
              "name": "reports",
              "contexts": [
                {
                  "name": "verbose_mode|EXTRA",
                  "promises": [
                    {
                      "line": 787,
                      "promiser": "$(this.bundle): Line for '$(i)' exists",
                      "attributes": [
                        {
                          "line": 787,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "string",
                            "value": "exists_$(ci[$(i)])"
                          }
                        }
                      ]
                    },
                    {
                      "line": 788,
                      "promiser": "$(this.bundle): Line for '$(i)' does not exist",
                      "attributes": [
                        {
                          "line": 788,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "string",
                            "value": "!exists_$(ci[$(i)])"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 792,
          "namespace": "default",
          "name": "set_config_values_matching",
          "bundleType": "edit_line",
          "arguments": [
            "v",
            "pat"
          ],
          "promiseTypes": [
            {
              "line": 805,
              "name": "meta",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 806,
                      "promiser": "tags",
                      "attributes": [
                        {
                          "line": 812,
                          "lval": "slist",
                          "rval": {
                            "type": "list",
                            "value": [
                              {
                                "type": "string",
                                "value": "deprecated=3.6.0"
                              },
                              {
                                "type": "string",
                                "value": "deprecation-reason=Generic reimplementation"
                              },
                              {
                                "type": "string",
                                "value": "replaced-by=set_line_based"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 814,
              "name": "vars",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 815,
                      "promiser": "allparams",
                      "attributes": [
                        {
                          "line": 815,
                          "lval": "slist",
                          "rval": {
                            "type": "functionCall",
                            "name": "getindices",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(v)"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 816,
                      "promiser": "index",
                      "attributes": [
                        {
                          "line": 816,
                          "lval": "slist",
                          "rval": {
                            "type": "functionCall",
                            "name": "grep",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(pat)"
                              },
                              {
                                "type": "string",
                                "value": "allparams"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 819,
                      "promiser": "cindex[$(index)]",
                      "attributes": [
                        {
                          "line": 819,
                          "lval": "string",
                          "rval": {
                            "type": "functionCall",
                            "name": "canonify",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(index)"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 821,
              "name": "replace_patterns",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 824,
                      "promiser": "^\\s*($(index)\\s+(?!$($(v)[$(index)])).*|# ?$(index)\\s+.*)$",
                      "attributes": [
                        {
                          "line": 825,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Correct the value"
                          }
                        },
                        {
                          "line": 826,
                          "lval": "replace_with",
                          "rval": {
                            "type": "functionCall",
                            "name": "value",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(index) $($(v)[$(index)])"
                              }
                            ]
                          }
                        },
                        {
                          "line": 827,
                          "lval": "classes",
                          "rval": {
                            "type": "functionCall",
                            "name": "always",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "replace_attempted_$(cindex[$(index)])"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 829,
              "name": "insert_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 830,
                      "promiser": "$(index) $($(v)[$(index)])",
                      "attributes": [
                        {
                          "line": 831,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "string",
                            "value": "replace_attempted_$(cindex[$(index)])"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 837,
          "namespace": "default",
          "name": "maintain_key_values",
          "bundleType": "edit_line",
          "arguments": [
            "v",
            "sep"
          ],
          "promiseTypes": [
            {
              "line": 843,
              "name": "meta",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 844,
                      "promiser": "tags",
                      "attributes": [
                        {
                          "line": 850,
                          "lval": "slist",
                          "rval": {
                            "type": "list",
                            "value": [
                              {
                                "type": "string",
                                "value": "deprecated=3.6.0"
                              },
                              {
                                "type": "string",
                                "value": "deprecation-reason=Generic reimplementation"
                              },
                              {
                                "type": "string",
                                "value": "replaced-by=set_line_based"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 852,
              "name": "vars",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 853,
                      "promiser": "index",
                      "attributes": [
                        {
                          "line": 853,
                          "lval": "slist",
                          "rval": {
                            "type": "functionCall",
                            "name": "getindices",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(v)"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 855,
                      "promiser": "cindex[$(index)]",
                      "attributes": [
                        {
                          "line": 855,
                          "lval": "string",
                          "rval": {
                            "type": "functionCall",
                            "name": "canonify",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(index)"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 857,
                      "promiser": "keypat[$(index)]",
                      "attributes": [
                        {
                          "line": 857,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": "\\s*$(index)\\s*$(sep)\\s*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 860,
                      "promiser": "ve[$(index)]",
                      "attributes": [
                        {
                          "line": 860,
                          "lval": "string",
                          "rval": {
                            "type": "functionCall",
                            "name": "escape",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$($(v)[$(index)])"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 862,
              "name": "classes",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 863,
                      "promiser": "$(cindex[$(index)])_key_in_file",
                      "attributes": [
                        {
                          "line": 864,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Dynamic Class created if patterns matching"
                          }
                        },
                        {
                          "line": 865,
                          "lval": "expression",
                          "rval": {
                            "type": "functionCall",
                            "name": "regline",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "^$(keypat[$(index)]).*"
                              },
                              {
                                "type": "string",
                                "value": "$(edit.filename)"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 867,
              "name": "replace_patterns",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 870,
                      "promiser": "^($(keypat[$(index)]))(?!$(ve[$(index)])$).*",
                      "attributes": [
                        {
                          "line": 871,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Replace definition of $(index)"
                          }
                        },
                        {
                          "line": 872,
                          "lval": "replace_with",
                          "rval": {
                            "type": "functionCall",
                            "name": "value",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(match.1)$($(v)[$(index)])"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 874,
              "name": "insert_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 875,
                      "promiser": "$(index)$(sep)$($(v)[$(index)])",
                      "attributes": [
                        {
                          "line": 876,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Insert definition of $(index)"
                          }
                        },
                        {
                          "line": 877,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "string",
                            "value": "!$(cindex[$(index)])_key_in_file"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 882,
          "namespace": "default",
          "name": "append_users_starting",
          "bundleType": "edit_line",
          "arguments": [
            "v"
          ],
          "promiseTypes": [
            {
              "line": 889,
              "name": "vars",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 891,
                      "promiser": "index",
                      "attributes": [
                        {
                          "line": 891,
                          "lval": "slist",
                          "rval": {
                            "type": "functionCall",
                            "name": "getindices",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(v)"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 893,
              "name": "classes",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 895,
                      "promiser": "add_$(index)",
                      "attributes": [
                        {
                          "line": 895,
                          "lval": "not",
                          "rval": {
                            "type": "functionCall",
                            "name": "userexists",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(index)"
                              }
                            ]
                          }
                        },
                        {
                          "line": 896,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Class created if user does not exist"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 898,
              "name": "insert_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 900,
                      "promiser": "$($(v)[$(index)])",
                      "attributes": [
                        {
                          "line": 902,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Append users into a password file format"
                          }
                        },
                        {
                          "line": 903,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "string",
                            "value": "add_$(index)"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 908,
          "namespace": "default",
          "name": "append_groups_starting",
          "bundleType": "edit_line",
          "arguments": [
            "v"
          ],
          "promiseTypes": [
            {
              "line": 915,
              "name": "vars",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 917,
                      "promiser": "index",
                      "attributes": [
                        {
                          "line": 917,
                          "lval": "slist",
                          "rval": {
                            "type": "functionCall",
                            "name": "getindices",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(v)"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 919,
              "name": "classes",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 921,
                      "promiser": "add_$(index)",
                      "attributes": [
                        {
                          "line": 921,
                          "lval": "not",
                          "rval": {
                            "type": "functionCall",
                            "name": "groupexists",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(index)"
                              }
                            ]
                          }
                        },
                        {
                          "line": 922,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Class created if group does not exist"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 924,
              "name": "insert_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 926,
                      "promiser": "$($(v)[$(index)])",
                      "attributes": [
                        {
                          "line": 928,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Append users into a group file format"
                          }
                        },
                        {
                          "line": 929,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "string",
                            "value": "add_$(index)"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 935,
          "namespace": "default",
          "name": "set_colon_field",
          "bundleType": "edit_line",
          "arguments": [
            "key",
            "field",
            "val"
          ],
          "promiseTypes": [
            {
              "line": 942,
              "name": "field_edits",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 944,
                      "promiser": "$(key):.*",
                      "attributes": [
                        {
                          "line": 946,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Edit a colon-separated file, using the first field as a key"
                          }
                        },
                        {
                          "line": 947,
                          "lval": "edit_field",
                          "rval": {
                            "type": "functionCall",
                            "name": "col",
                            "arguments": [
                              {
                                "type": "string",
                                "value": ":"
                              },
                              {
                                "type": "string",
                                "value": "$(field)"
                              },
                              {
                                "type": "string",
                                "value": "$(val)"
                              },
                              {
                                "type": "string",
                                "value": "set"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 952,
          "namespace": "default",
          "name": "set_user_field",
          "bundleType": "edit_line",
          "arguments": [
            "user",
            "field",
            "val"
          ],
          "promiseTypes": [
            {
              "line": 962,
              "name": "field_edits",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 964,
                      "promiser": "$(user):.*",
                      "attributes": [
                        {
                          "line": 966,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Edit a user attribute in the password file"
                          }
                        },
                        {
                          "line": 967,
                          "lval": "edit_field",
                          "rval": {
                            "type": "functionCall",
                            "name": "col",
                            "arguments": [
                              {
                                "type": "string",
                                "value": ":"
                              },
                              {
                                "type": "string",
                                "value": "$(field)"
                              },
                              {
                                "type": "string",
                                "value": "$(val)"
                              },
                              {
                                "type": "string",
                                "value": "set"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 972,
          "namespace": "default",
          "name": "append_user_field",
          "bundleType": "edit_line",
          "arguments": [
            "group",
            "field",
            "allusers"
          ],
          "promiseTypes": [
            {
              "line": 982,
              "name": "vars",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 984,
                      "promiser": "val",
                      "attributes": [
                        {
                          "line": 984,
                          "lval": "slist",
                          "rval": {
                            "type": "list",
                            "value": [
                              {
                                "type": "string",
                                "value": "@(allusers)"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 986,
              "name": "field_edits",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 988,
                      "promiser": "$(group):.*",
                      "attributes": [
                        {
                          "line": 990,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Append users into a password file format"
                          }
                        },
                        {
                          "line": 991,
                          "lval": "edit_field",
                          "rval": {
                            "type": "functionCall",
                            "name": "col",
                            "arguments": [
                              {
                                "type": "string",
                                "value": ":"
                              },
                              {
                                "type": "string",
                                "value": "$(field)"
                              },
                              {
                                "type": "string",
                                "value": "$(val)"
                              },
                              {
                                "type": "string",
                                "value": "alphanum"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 996,
          "namespace": "default",
          "name": "expand_template",
          "bundleType": "edit_line",
          "arguments": [
            "templatefile"
          ],
          "promiseTypes": [
            {
              "line": 1000,
              "name": "insert_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 1002,
                      "promiser": "$(templatefile)",
                      "attributes": [
                        {
                          "line": 1004,
                          "lval": "insert_type",
                          "rval": {
                            "type": "string",
                            "value": "file"
                          }
                        },
                        {
                          "line": 1005,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Expand variables in the template file"
                          }
                        },
                        {
                          "line": 1006,
                          "lval": "expand_scalars",
                          "rval": {
                            "type": "string",
                            "value": "true"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1009,
          "namespace": "default",
          "name": "replace_or_add",
          "bundleType": "edit_line",
          "arguments": [
            "pattern",
            "line"
          ],
          "promiseTypes": [
            {
              "line": 1020,
              "name": "vars",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 1021,
                      "promiser": "cline",
                      "attributes": [
                        {
                          "line": 1021,
                          "lval": "string",
                          "rval": {
                            "type": "functionCall",
                            "name": "canonify",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(line)"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 1022,
                      "promiser": "eline",
                      "attributes": [
                        {
                          "line": 1022,
                          "lval": "string",
                          "rval": {
                            "type": "functionCall",
                            "name": "escape",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(line)"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 1024,
              "name": "replace_patterns",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 1025,
                      "promiser": "^(?!$(eline)$)$(pattern)$",
                      "attributes": [
                        {
                          "line": 1026,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Replace a pattern here"
                          }
                        },
                        {
                          "line": 1027,
                          "lval": "replace_with",
                          "rval": {
                            "type": "functionCall",
                            "name": "value",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(line)"
                              }
                            ]
                          }
                        },
                        {
                          "line": 1028,
                          "lval": "classes",
                          "rval": {
                            "type": "functionCall",
                            "name": "always",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "replace_done_$(cline)"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 1030,
              "name": "insert_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 1031,
                      "promiser": "$(line)",
                      "attributes": [
                        {
                          "line": 1032,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "string",
                            "value": "replace_done_$(cline)"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1035,
          "namespace": "default",
          "name": "converge",
          "bundleType": "edit_line",
          "arguments": [
            "marker",
            "lines"
          ],
          "promiseTypes": [
            {
              "line": 1044,
              "name": "vars",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 1045,
                      "promiser": "regex",
                      "attributes": [
                        {
                          "line": 1045,
                          "lval": "string",
                          "rval": {
                            "type": "functionCall",
                            "name": "escape",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(marker)"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 1047,
              "name": "delete_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 1048,
                      "promiser": "$(regex)",
                      "attributes": [
                        {
                          "line": 1048,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Delete lines matching the marker"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 1049,
              "name": "insert_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 1050,
                      "promiser": "$(lines)",
                      "attributes": [
                        {
                          "line": 1050,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Insert the given lines"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1053,
          "namespace": "default",
          "name": "fstab_option_editor",
          "bundleType": "edit_line",
          "arguments": [
            "method",
            "mount",
            "option"
          ],
          "promiseTypes": [
            {
              "line": 1072,
              "name": "field_edits",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 1073,
                      "promiser": "(?!#)\\S+\\s+$(mount)\\s.+",
                      "attributes": [
                        {
                          "line": 1074,
                          "lval": "edit_field",
                          "rval": {
                            "type": "functionCall",
                            "name": "fstab_options",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(option)"
                              },
                              {
                                "type": "string",
                                "value": "$(method)"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1941,
          "namespace": "default",
          "name": "file_mustache",
          "bundleType": "agent",
          "arguments": [
            "mustache_file",
            "json_file",
            "target_file"
          ],
          "promiseTypes": [
            {
              "line": 1954,
              "name": "files",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 1955,
                      "promiser": "$(target_file)",
                      "attributes": [
                        {
                          "line": 1956,
                          "lval": "create",
                          "rval": {
                            "type": "string",
                            "value": "true"
                          }
                        },
                        {
                          "line": 1957,
                          "lval": "edit_template",
                          "rval": {
                            "type": "string",
                            "value": "$(mustache_file)"
                          }
                        },
                        {
                          "line": 1958,
                          "lval": "template_data",
                          "rval": {
                            "type": "functionCall",
                            "name": "readjson",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(json_file)"
                              },
                              {
                                "type": "string",
                                "value": "100k"
                              }
                            ]
                          }
                        },
                        {
                          "line": 1959,
                          "lval": "template_method",
                          "rval": {
                            "type": "string",
                            "value": "mustache"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1962,
          "namespace": "default",
          "name": "file_mustache_jsonstring",
          "bundleType": "agent",
          "arguments": [
            "mustache_file",
            "json_string",
            "target_file"
          ],
          "promiseTypes": [
            {
              "line": 1975,
              "name": "files",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 1976,
                      "promiser": "$(target_file)",
                      "attributes": [
                        {
                          "line": 1977,
                          "lval": "create",
                          "rval": {
                            "type": "string",
                            "value": "true"
                          }
                        },
                        {
                          "line": 1978,
                          "lval": "edit_template",
                          "rval": {
                            "type": "string",
                            "value": "$(mustache_file)"
                          }
                        },
                        {
                          "line": 1979,
                          "lval": "template_data",
                          "rval": {
                            "type": "functionCall",
                            "name": "parsejson",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(json_string)"
                              }
                            ]
                          }
                        },
                        {
                          "line": 1980,
                          "lval": "template_method",
                          "rval": {
                            "type": "string",
                            "value": "mustache"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1983,
          "namespace": "default",
          "name": "file_tidy",
          "bundleType": "agent",
          "arguments": [
            "file"
          ],
          "promiseTypes": [
            {
              "line": 1994,
              "name": "files",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 1995,
                      "promiser": "$(file)",
                      "attributes": [
                        {
                          "line": 1995,
                          "lval": "delete",
                          "rval": {
                            "type": "symbol",
                            "value": "tidy"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 1997,
              "name": "reports",
              "contexts": [
                {
                  "name": "inform_mode|EXTRA",
                  "promises": [
                    {
                      "line": 1999,
                      "promiser": "$(this.bundle): deleting $(file) with delete => tidy",
                      "attributes": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 2002,
          "namespace": "default",
          "name": "dir_sync",
          "bundleType": "agent",
          "arguments": [
            "from",
            "to"
          ],
          "promiseTypes": [
            {
              "line": 2014,
              "name": "files",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 2015,
                      "promiser": "$(to)/.",
                      "attributes": [
                        {
                          "line": 2016,
                          "lval": "create",
                          "rval": {
                            "type": "string",
                            "value": "true"
                          }
                        },
                        {
                          "line": 2017,
                          "lval": "depth_search",
                          "rval": {
                            "type": "functionCall",
                            "name": "recurse",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "inf"
                              }
                            ]
                          }
                        },
                        {
                          "line": 2018,
                          "lval": "copy_from",
                          "rval": {
                            "type": "functionCall",
                            "name": "copyfrom_sync",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(from)"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 2020,
              "name": "reports",
              "contexts": [
                {
                  "name": "inform_mode|EXTRA",
                  "promises": [
                    {
                      "line": 2022,
                      "promiser": "$(this.bundle): copying directory $(from) to $(to)",
                      "attributes": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 2025,
          "namespace": "default",
          "name": "file_copy",
          "bundleType": "agent",
          "arguments": [
            "from",
            "to"
          ],
          "promiseTypes": [
            {
              "line": 2037,
              "name": "files",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 2038,
                      "promiser": "$(to)",
                      "attributes": [
                        {
                          "line": 2039,
                          "lval": "create",
                          "rval": {
                            "type": "string",
                            "value": "true"
                          }
                        },
                        {
                          "line": 2040,
                          "lval": "copy_from",
                          "rval": {
                            "type": "functionCall",
                            "name": "copyfrom_sync",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(from)"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 2042,
              "name": "reports",
              "contexts": [
                {
                  "name": "inform_mode|EXTRA",
                  "promises": [
                    {
                      "line": 2044,
                      "promiser": "$(this.bundle): copying file $(from) to $(to)",
                      "attributes": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 2058,
          "namespace": "default",
          "name": "file_make",
          "bundleType": "agent",
          "arguments": [
            "file",
            "str"
          ],
          "promiseTypes": [
            {
              "line": 2071,
              "name": "files",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 2072,
                      "promiser": "$(file)",
                      "attributes": [
                        {
                          "line": 2073,
                          "lval": "create",
                          "rval": {
                            "type": "string",
                            "value": "true"
                          }
                        },
                        {
                          "line": 2074,
                          "lval": "edit_line",
                          "rval": {
                            "type": "functionCall",
                            "name": "insert_lines",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(str)"
                              }
                            ]
                          }
                        },
                        {
                          "line": 2075,
                          "lval": "edit_defaults",
                          "rval": {
                            "type": "symbol",
                            "value": "empty"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 2077,
              "name": "reports",
              "contexts": [
                {
                  "name": "inform_mode|EXTRA",
                  "promises": [
                    {
                      "line": 2079,
                      "promiser": "$(this.bundle): creating $(file) with contents '$(str)'",
                      "attributes": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 2082,
          "namespace": "default",
          "name": "file_empty",
          "bundleType": "agent",
          "arguments": [
            "file"
          ],
          "promiseTypes": [
            {
              "line": 2093,
              "name": "files",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 2094,
                      "promiser": "$(file)",
                      "attributes": [
                        {
                          "line": 2095,
                          "lval": "create",
                          "rval": {
                            "type": "string",
                            "value": "true"
                          }
                        },
                        {
                          "line": 2096,
                          "lval": "edit_defaults",
                          "rval": {
                            "type": "symbol",
                            "value": "empty"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 2098,
              "name": "reports",
              "contexts": [
                {
                  "name": "inform_mode|EXTRA",
                  "promises": [
                    {
                      "line": 2100,
                      "promiser": "$(this.bundle): creating empty $(file) with 0 size",
                      "attributes": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 2103,
          "namespace": "default",
          "name": "file_hardlink",
          "bundleType": "agent",
          "arguments": [
            "target",
            "link"
          ],
          "promiseTypes": [
            {
              "line": 2115,
              "name": "files",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 2116,
                      "promiser": "$(link)",
                      "attributes": [
                        {
                          "line": 2117,
                          "lval": "move_obstructions",
                          "rval": {
                            "type": "string",
                            "value": "true"
                          }
                        },
                        {
                          "line": 2118,
                          "lval": "link_from",
                          "rval": {
                            "type": "functionCall",
                            "name": "linkfrom",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(target)"
                              },
                              {
                                "type": "string",
                                "value": "hardlink"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 2120,
              "name": "reports",
              "contexts": [
                {
                  "name": "inform_mode|EXTRA",
                  "promises": [
                    {
                      "line": 2122,
                      "promiser": "$(this.bundle): $(link) will be a hard link to $(target)",
                      "attributes": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 2125,
          "namespace": "default",
          "name": "file_link",
          "bundleType": "agent",
          "arguments": [
            "target",
            "link"
          ],
          "promiseTypes": [
            {
              "line": 2137,
              "name": "files",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 2138,
                      "promiser": "$(link)",
                      "attributes": [
                        {
                          "line": 2139,
                          "lval": "move_obstructions",
                          "rval": {
                            "type": "string",
                            "value": "true"
                          }
                        },
                        {
                          "line": 2140,
                          "lval": "link_from",
                          "rval": {
                            "type": "functionCall",
                            "name": "linkfrom",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(target)"
                              },
                              {
                                "type": "string",
                                "value": "symlink"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 2142,
              "name": "reports",
              "contexts": [
                {
                  "name": "inform_mode|EXTRA",
                  "promises": [
                    {
                      "line": 2144,
                      "promiser": "$(this.bundle): $(link) will be a symlink to $(target)",
                      "attributes": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "bodies": [
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 57,
          "namespace": "default",
          "name": "control",
          "bodyType": "file",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 60,
                  "lval": "inputs",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "@(files_common.inputs)"
                      }
                    ]
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1081,
          "namespace": "default",
          "name": "fstab_options",
          "bodyType": "edit_field",
          "arguments": [
            "newval",
            "method"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1099,
                  "lval": "field_separator",
                  "rval": {
                    "type": "string",
                    "value": "\\s+"
                  }
                },
                {
                  "line": 1100,
                  "lval": "select_field",
                  "rval": {
                    "type": "string",
                    "value": "4"
                  }
                },
                {
                  "line": 1101,
                  "lval": "value_separator",
                  "rval": {
                    "type": "string",
                    "value": ","
                  }
                },
                {
                  "line": 1102,
                  "lval": "field_value",
                  "rval": {
                    "type": "string",
                    "value": "$(newval)"
                  }
                },
                {
                  "line": 1103,
                  "lval": "field_operation",
                  "rval": {
                    "type": "string",
                    "value": "$(method)"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1106,
          "namespace": "default",
          "name": "quoted_var",
          "bodyType": "edit_field",
          "arguments": [
            "newval",
            "method"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1111,
                  "lval": "field_separator",
                  "rval": {
                    "type": "string",
                    "value": "\\\""
                  }
                },
                {
                  "line": 1112,
                  "lval": "select_field",
                  "rval": {
                    "type": "string",
                    "value": "2"
                  }
                },
                {
                  "line": 1113,
                  "lval": "value_separator",
                  "rval": {
                    "type": "string",
                    "value": " "
                  }
                },
                {
                  "line": 1114,
                  "lval": "field_value",
                  "rval": {
                    "type": "string",
                    "value": "$(newval)"
                  }
                },
                {
                  "line": 1115,
                  "lval": "field_operation",
                  "rval": {
                    "type": "string",
                    "value": "$(method)"
                  }
                },
                {
                  "line": 1116,
                  "lval": "extend_fields",
                  "rval": {
                    "type": "string",
                    "value": "false"
                  }
                },
                {
                  "line": 1117,
                  "lval": "allow_blank_fields",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1122,
          "namespace": "default",
          "name": "col",
          "bodyType": "edit_field",
          "arguments": [
            "split",
            "col",
            "newval",
            "method"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1129,
                  "lval": "field_separator",
                  "rval": {
                    "type": "string",
                    "value": "$(split)"
                  }
                },
                {
                  "line": 1130,
                  "lval": "select_field",
                  "rval": {
                    "type": "string",
                    "value": "$(col)"
                  }
                },
                {
                  "line": 1131,
                  "lval": "value_separator",
                  "rval": {
                    "type": "string",
                    "value": ","
                  }
                },
                {
                  "line": 1132,
                  "lval": "field_value",
                  "rval": {
                    "type": "string",
                    "value": "$(newval)"
                  }
                },
                {
                  "line": 1133,
                  "lval": "field_operation",
                  "rval": {
                    "type": "string",
                    "value": "$(method)"
                  }
                },
                {
                  "line": 1134,
                  "lval": "extend_fields",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                },
                {
                  "line": 1135,
                  "lval": "allow_blank_fields",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1140,
          "namespace": "default",
          "name": "line",
          "bodyType": "edit_field",
          "arguments": [
            "split",
            "col",
            "newval",
            "method"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1147,
                  "lval": "field_separator",
                  "rval": {
                    "type": "string",
                    "value": "$(split)"
                  }
                },
                {
                  "line": 1148,
                  "lval": "select_field",
                  "rval": {
                    "type": "string",
                    "value": "$(col)"
                  }
                },
                {
                  "line": 1149,
                  "lval": "value_separator",
                  "rval": {
                    "type": "string",
                    "value": " "
                  }
                },
                {
                  "line": 1150,
                  "lval": "field_value",
                  "rval": {
                    "type": "string",
                    "value": "$(newval)"
                  }
                },
                {
                  "line": 1151,
                  "lval": "field_operation",
                  "rval": {
                    "type": "string",
                    "value": "$(method)"
                  }
                },
                {
                  "line": 1152,
                  "lval": "extend_fields",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                },
                {
                  "line": 1153,
                  "lval": "allow_blank_fields",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1158,
          "namespace": "default",
          "name": "value",
          "bodyType": "replace_with",
          "arguments": [
            "x"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1162,
                  "lval": "replace_value",
                  "rval": {
                    "type": "string",
                    "value": "$(x)"
                  }
                },
                {
                  "line": 1163,
                  "lval": "occurrences",
                  "rval": {
                    "type": "string",
                    "value": "all"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1168,
          "namespace": "default",
          "name": "INI_section",
          "bodyType": "select_region",
          "arguments": [
            "x"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1172,
                  "lval": "select_start",
                  "rval": {
                    "type": "string",
                    "value": "\\[$(x)\\]\\s*"
                  }
                },
                {
                  "line": 1173,
                  "lval": "select_end",
                  "rval": {
                    "type": "string",
                    "value": "\\[.*\\]\\s*"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1180,
          "namespace": "default",
          "name": "std_defs",
          "bodyType": "edit_defaults",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1184,
                  "lval": "empty_file_before_editing",
                  "rval": {
                    "type": "string",
                    "value": "false"
                  }
                },
                {
                  "line": 1185,
                  "lval": "edit_backup",
                  "rval": {
                    "type": "string",
                    "value": "false"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1191,
          "namespace": "default",
          "name": "empty",
          "bodyType": "edit_defaults",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1196,
                  "lval": "empty_file_before_editing",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                },
                {
                  "line": 1197,
                  "lval": "edit_backup",
                  "rval": {
                    "type": "string",
                    "value": "false"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1203,
          "namespace": "default",
          "name": "no_backup",
          "bodyType": "edit_defaults",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1206,
                  "lval": "edit_backup",
                  "rval": {
                    "type": "string",
                    "value": "false"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1211,
          "namespace": "default",
          "name": "backup_timestamp",
          "bodyType": "edit_defaults",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1214,
                  "lval": "empty_file_before_editing",
                  "rval": {
                    "type": "string",
                    "value": "false"
                  }
                },
                {
                  "line": 1215,
                  "lval": "edit_backup",
                  "rval": {
                    "type": "string",
                    "value": "timestamp"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1223,
          "namespace": "default",
          "name": "start",
          "bodyType": "location",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1226,
                  "lval": "before_after",
                  "rval": {
                    "type": "string",
                    "value": "before"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1231,
          "namespace": "default",
          "name": "after",
          "bodyType": "location",
          "arguments": [
            "str"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1235,
                  "lval": "before_after",
                  "rval": {
                    "type": "string",
                    "value": "after"
                  }
                },
                {
                  "line": 1236,
                  "lval": "select_line_matching",
                  "rval": {
                    "type": "string",
                    "value": "$(str)"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1241,
          "namespace": "default",
          "name": "before",
          "bodyType": "location",
          "arguments": [
            "str"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1245,
                  "lval": "before_after",
                  "rval": {
                    "type": "string",
                    "value": "before"
                  }
                },
                {
                  "line": 1246,
                  "lval": "select_line_matching",
                  "rval": {
                    "type": "string",
                    "value": "$(str)"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1255,
          "namespace": "default",
          "name": "comment",
          "bodyType": "replace_with",
          "arguments": [
            "c"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1259,
                  "lval": "replace_value",
                  "rval": {
                    "type": "string",
                    "value": "$(c) $(match.1)"
                  }
                },
                {
                  "line": 1260,
                  "lval": "occurrences",
                  "rval": {
                    "type": "string",
                    "value": "all"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1265,
          "namespace": "default",
          "name": "uncomment",
          "bodyType": "replace_with",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1269,
                  "lval": "replace_value",
                  "rval": {
                    "type": "string",
                    "value": "$(match.1)"
                  }
                },
                {
                  "line": 1270,
                  "lval": "occurrences",
                  "rval": {
                    "type": "string",
                    "value": "all"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1277,
          "namespace": "default",
          "name": "secure_cp",
          "bodyType": "copy_from",
          "arguments": [
            "from",
            "server"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1286,
                  "lval": "source",
                  "rval": {
                    "type": "string",
                    "value": "$(from)"
                  }
                },
                {
                  "line": 1287,
                  "lval": "servers",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "$(server)"
                      }
                    ]
                  }
                },
                {
                  "line": 1288,
                  "lval": "compare",
                  "rval": {
                    "type": "string",
                    "value": "digest"
                  }
                },
                {
                  "line": 1289,
                  "lval": "encrypt",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                },
                {
                  "line": 1290,
                  "lval": "verify",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1295,
          "namespace": "default",
          "name": "remote_cp",
          "bodyType": "copy_from",
          "arguments": [
            "from",
            "server"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1301,
                  "lval": "servers",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "$(server)"
                      }
                    ]
                  }
                },
                {
                  "line": 1302,
                  "lval": "source",
                  "rval": {
                    "type": "string",
                    "value": "$(from)"
                  }
                },
                {
                  "line": 1303,
                  "lval": "compare",
                  "rval": {
                    "type": "string",
                    "value": "mtime"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1308,
          "namespace": "default",
          "name": "remote_dcp",
          "bodyType": "copy_from",
          "arguments": [
            "from",
            "server"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1314,
                  "lval": "servers",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "$(server)"
                      }
                    ]
                  }
                },
                {
                  "line": 1315,
                  "lval": "source",
                  "rval": {
                    "type": "string",
                    "value": "$(from)"
                  }
                },
                {
                  "line": 1316,
                  "lval": "compare",
                  "rval": {
                    "type": "string",
                    "value": "digest"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1321,
          "namespace": "default",
          "name": "local_cp",
          "bodyType": "copy_from",
          "arguments": [
            "from"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1326,
                  "lval": "source",
                  "rval": {
                    "type": "string",
                    "value": "$(from)"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1331,
          "namespace": "default",
          "name": "local_dcp",
          "bodyType": "copy_from",
          "arguments": [
            "from"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1336,
                  "lval": "source",
                  "rval": {
                    "type": "string",
                    "value": "$(from)"
                  }
                },
                {
                  "line": 1337,
                  "lval": "compare",
                  "rval": {
                    "type": "string",
                    "value": "digest"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1342,
          "namespace": "default",
          "name": "perms_cp",
          "bodyType": "copy_from",
          "arguments": [
            "from"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1347,
                  "lval": "source",
                  "rval": {
                    "type": "string",
                    "value": "$(from)"
                  }
                },
                {
                  "line": 1348,
                  "lval": "preserve",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1351,
          "namespace": "default",
          "name": "backup_local_cp",
          "bodyType": "copy_from",
          "arguments": [
            "from"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1356,
                  "lval": "source",
                  "rval": {
                    "type": "string",
                    "value": "$(from)"
                  }
                },
                {
                  "line": 1357,
                  "lval": "copy_backup",
                  "rval": {
                    "type": "string",
                    "value": "timestamp"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1362,
          "namespace": "default",
          "name": "seed_cp",
          "bodyType": "copy_from",
          "arguments": [
            "from"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1367,
                  "lval": "source",
                  "rval": {
                    "type": "string",
                    "value": "$(from)"
                  }
                },
                {
                  "line": 1368,
                  "lval": "compare",
                  "rval": {
                    "type": "string",
                    "value": "exists"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1373,
          "namespace": "default",
          "name": "sync_cp",
          "bodyType": "copy_from",
          "arguments": [
            "from",
            "server"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1379,
                  "lval": "servers",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "$(server)"
                      }
                    ]
                  }
                },
                {
                  "line": 1380,
                  "lval": "source",
                  "rval": {
                    "type": "string",
                    "value": "$(from)"
                  }
                },
                {
                  "line": 1381,
                  "lval": "purge",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                },
                {
                  "line": 1382,
                  "lval": "preserve",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                },
                {
                  "line": 1383,
                  "lval": "type_check",
                  "rval": {
                    "type": "string",
                    "value": "false"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1388,
          "namespace": "default",
          "name": "no_backup_cp",
          "bodyType": "copy_from",
          "arguments": [
            "from"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1393,
                  "lval": "source",
                  "rval": {
                    "type": "string",
                    "value": "$(from)"
                  }
                },
                {
                  "line": 1394,
                  "lval": "copy_backup",
                  "rval": {
                    "type": "string",
                    "value": "false"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1399,
          "namespace": "default",
          "name": "no_backup_dcp",
          "bodyType": "copy_from",
          "arguments": [
            "from"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1405,
                  "lval": "source",
                  "rval": {
                    "type": "string",
                    "value": "$(from)"
                  }
                },
                {
                  "line": 1406,
                  "lval": "copy_backup",
                  "rval": {
                    "type": "string",
                    "value": "false"
                  }
                },
                {
                  "line": 1407,
                  "lval": "compare",
                  "rval": {
                    "type": "string",
                    "value": "digest"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1412,
          "namespace": "default",
          "name": "no_backup_rcp",
          "bodyType": "copy_from",
          "arguments": [
            "from",
            "server"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1419,
                  "lval": "servers",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "$(server)"
                      }
                    ]
                  }
                },
                {
                  "line": 1420,
                  "lval": "source",
                  "rval": {
                    "type": "string",
                    "value": "$(from)"
                  }
                },
                {
                  "line": 1421,
                  "lval": "compare",
                  "rval": {
                    "type": "string",
                    "value": "mtime"
                  }
                },
                {
                  "line": 1422,
                  "lval": "copy_backup",
                  "rval": {
                    "type": "string",
                    "value": "false"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1429,
          "namespace": "default",
          "name": "ln_s",
          "bodyType": "link_from",
          "arguments": [
            "x"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1434,
                  "lval": "link_type",
                  "rval": {
                    "type": "string",
                    "value": "symlink"
                  }
                },
                {
                  "line": 1435,
                  "lval": "source",
                  "rval": {
                    "type": "string",
                    "value": "$(x)"
                  }
                },
                {
                  "line": 1436,
                  "lval": "when_no_source",
                  "rval": {
                    "type": "string",
                    "value": "force"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1441,
          "namespace": "default",
          "name": "linkchildren",
          "bodyType": "link_from",
          "arguments": [
            "tofile"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1449,
                  "lval": "source",
                  "rval": {
                    "type": "string",
                    "value": "$(tofile)"
                  }
                },
                {
                  "line": 1450,
                  "lval": "link_type",
                  "rval": {
                    "type": "string",
                    "value": "symlink"
                  }
                },
                {
                  "line": 1451,
                  "lval": "when_no_source",
                  "rval": {
                    "type": "string",
                    "value": "force"
                  }
                },
                {
                  "line": 1452,
                  "lval": "link_children",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                },
                {
                  "line": 1453,
                  "lval": "when_linking_children",
                  "rval": {
                    "type": "string",
                    "value": "if_no_such_file"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1456,
          "namespace": "default",
          "name": "linkfrom",
          "bodyType": "link_from",
          "arguments": [
            "source",
            "type"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1461,
                  "lval": "source",
                  "rval": {
                    "type": "string",
                    "value": "$(source)"
                  }
                },
                {
                  "line": 1462,
                  "lval": "link_type",
                  "rval": {
                    "type": "string",
                    "value": "$(type)"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1469,
          "namespace": "default",
          "name": "m",
          "bodyType": "perms",
          "arguments": [
            "mode"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1473,
                  "lval": "mode",
                  "rval": {
                    "type": "string",
                    "value": "$(mode)"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1478,
          "namespace": "default",
          "name": "mo",
          "bodyType": "perms",
          "arguments": [
            "mode",
            "user"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1483,
                  "lval": "owners",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "$(user)"
                      }
                    ]
                  }
                },
                {
                  "line": 1484,
                  "lval": "mode",
                  "rval": {
                    "type": "string",
                    "value": "$(mode)"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1489,
          "namespace": "default",
          "name": "mog",
          "bodyType": "perms",
          "arguments": [
            "mode",
            "user",
            "group"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1495,
                  "lval": "owners",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "$(user)"
                      }
                    ]
                  }
                },
                {
                  "line": 1496,
                  "lval": "groups",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "$(group)"
                      }
                    ]
                  }
                },
                {
                  "line": 1497,
                  "lval": "mode",
                  "rval": {
                    "type": "string",
                    "value": "$(mode)"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1502,
          "namespace": "default",
          "name": "og",
          "bodyType": "perms",
          "arguments": [
            "u",
            "g"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1507,
                  "lval": "owners",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "$(u)"
                      }
                    ]
                  }
                },
                {
                  "line": 1508,
                  "lval": "groups",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "$(g)"
                      }
                    ]
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1513,
          "namespace": "default",
          "name": "owner",
          "bodyType": "perms",
          "arguments": [
            "user"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1517,
                  "lval": "owners",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "$(user)"
                      }
                    ]
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1520,
          "namespace": "default",
          "name": "system_owned",
          "bodyType": "perms",
          "arguments": [
            "mode"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1531,
                  "lval": "mode",
                  "rval": {
                    "type": "string",
                    "value": "$(mode)"
                  }
                },
                {
                  "line": 1532,
                  "lval": "owners",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "root"
                      }
                    ]
                  }
                }
              ]
            },
            {
              "name": "freebsd|openbsd|netbsd|darwin",
              "attributes": [
                {
                  "line": 1535,
                  "lval": "groups",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "wheel"
                      }
                    ]
                  }
                }
              ]
            },
            {
              "name": "linux",
              "attributes": [
                {
                  "line": 1538,
                  "lval": "groups",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "root"
                      }
                    ]
                  }
                }
              ]
            },
            {
              "name": "solaris",
              "attributes": [
                {
                  "line": 1541,
                  "lval": "groups",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "sys"
                      }
                    ]
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1548,
          "namespace": "default",
          "name": "access_generic",
          "bodyType": "acl",
          "arguments": [
            "acl"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1556,
                  "lval": "acl_method",
                  "rval": {
                    "type": "string",
                    "value": "overwrite"
                  }
                },
                {
                  "line": 1557,
                  "lval": "aces",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "@(acl)"
                      }
                    ]
                  }
                }
              ]
            },
            {
              "name": "windows",
              "attributes": [
                {
                  "line": 1560,
                  "lval": "acl_type",
                  "rval": {
                    "type": "string",
                    "value": "ntfs"
                  }
                }
              ]
            },
            {
              "name": "!windows",
              "attributes": [
                {
                  "line": 1563,
                  "lval": "acl_type",
                  "rval": {
                    "type": "string",
                    "value": "posix"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1568,
          "namespace": "default",
          "name": "ntfs",
          "bodyType": "acl",
          "arguments": [
            "acl"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1576,
                  "lval": "acl_type",
                  "rval": {
                    "type": "string",
                    "value": "ntfs"
                  }
                },
                {
                  "line": 1577,
                  "lval": "acl_method",
                  "rval": {
                    "type": "string",
                    "value": "overwrite"
                  }
                },
                {
                  "line": 1578,
                  "lval": "aces",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "@(acl)"
                      }
                    ]
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1583,
          "namespace": "default",
          "name": "strict",
          "bodyType": "acl",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1590,
                  "lval": "acl_method",
                  "rval": {
                    "type": "string",
                    "value": "overwrite"
                  }
                }
              ]
            },
            {
              "name": "windows",
              "attributes": [
                {
                  "line": 1593,
                  "lval": "aces",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "user:Administrator:rwx"
                      }
                    ]
                  }
                }
              ]
            },
            {
              "name": "!windows",
              "attributes": [
                {
                  "line": 1595,
                  "lval": "aces",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "user:root:rwx"
                      }
                    ]
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1602,
          "namespace": "default",
          "name": "recurse",
          "bodyType": "depth_search",
          "arguments": [
            "d"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1608,
                  "lval": "depth",
                  "rval": {
                    "type": "string",
                    "value": "$(d)"
                  }
                },
                {
                  "line": 1609,
                  "lval": "xdev",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1614,
          "namespace": "default",
          "name": "recurse_ignore",
          "bodyType": "depth_search",
          "arguments": [
            "d",
            "list"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1621,
                  "lval": "depth",
                  "rval": {
                    "type": "string",
                    "value": "$(d)"
                  }
                },
                {
                  "line": 1622,
                  "lval": "exclude_dirs",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "@(list)"
                      }
                    ]
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1627,
          "namespace": "default",
          "name": "include_base",
          "bodyType": "depth_search",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1631,
                  "lval": "include_basedir",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1634,
          "namespace": "default",
          "name": "recurse_with_base",
          "bodyType": "depth_search",
          "arguments": [
            "d"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1641,
                  "lval": "depth",
                  "rval": {
                    "type": "string",
                    "value": "$(d)"
                  }
                },
                {
                  "line": 1642,
                  "lval": "xdev",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                },
                {
                  "line": 1643,
                  "lval": "include_basedir",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1650,
          "namespace": "default",
          "name": "tidy",
          "bodyType": "delete",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1654,
                  "lval": "dirlinks",
                  "rval": {
                    "type": "string",
                    "value": "delete"
                  }
                },
                {
                  "line": 1655,
                  "lval": "rmdirs",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1662,
          "namespace": "default",
          "name": "disable",
          "bodyType": "rename",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1665,
                  "lval": "disable",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1670,
          "namespace": "default",
          "name": "rotate",
          "bodyType": "rename",
          "arguments": [
            "level"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1674,
                  "lval": "rotate",
                  "rval": {
                    "type": "string",
                    "value": "$(level)"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1679,
          "namespace": "default",
          "name": "to",
          "bodyType": "rename",
          "arguments": [
            "file"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1683,
                  "lval": "newname",
                  "rval": {
                    "type": "string",
                    "value": "$(file)"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1690,
          "namespace": "default",
          "name": "name_age",
          "bodyType": "file_select",
          "arguments": [
            "name",
            "days"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1695,
                  "lval": "leaf_name",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "$(name)"
                      }
                    ]
                  }
                },
                {
                  "line": 1696,
                  "lval": "mtime",
                  "rval": {
                    "type": "functionCall",
                    "name": "irange",
                    "arguments": [
                      {
                        "type": "string",
                        "value": "0"
                      },
                      {
                        "type": "functionCall",
                        "name": "ago",
                        "arguments": [
                          {
                            "type": "string",
                            "value": "0"
                          },
                          {
                            "type": "string",
                            "value": "0"
                          },
                          {
                            "type": "string",
                            "value": "$(days)"
                          },
                          {
                            "type": "string",
                            "value": "0"
                          },
                          {
                            "type": "string",
                            "value": "0"
                          },
                          {
                            "type": "string",
                            "value": "0"
                          }
                        ]
                      }
                    ]
                  }
                },
                {
                  "line": 1697,
                  "lval": "file_result",
                  "rval": {
                    "type": "string",
                    "value": "mtime.leaf_name"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1702,
          "namespace": "default",
          "name": "days_old",
          "bodyType": "file_select",
          "arguments": [
            "days"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1706,
                  "lval": "mtime",
                  "rval": {
                    "type": "functionCall",
                    "name": "irange",
                    "arguments": [
                      {
                        "type": "string",
                        "value": "0"
                      },
                      {
                        "type": "functionCall",
                        "name": "ago",
                        "arguments": [
                          {
                            "type": "string",
                            "value": "0"
                          },
                          {
                            "type": "string",
                            "value": "0"
                          },
                          {
                            "type": "string",
                            "value": "$(days)"
                          },
                          {
                            "type": "string",
                            "value": "0"
                          },
                          {
                            "type": "string",
                            "value": "0"
                          },
                          {
                            "type": "string",
                            "value": "0"
                          }
                        ]
                      }
                    ]
                  }
                },
                {
                  "line": 1707,
                  "lval": "file_result",
                  "rval": {
                    "type": "string",
                    "value": "mtime"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1712,
          "namespace": "default",
          "name": "size_range",
          "bodyType": "file_select",
          "arguments": [
            "from",
            "to"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1717,
                  "lval": "search_size",
                  "rval": {
                    "type": "functionCall",
                    "name": "irange",
                    "arguments": [
                      {
                        "type": "string",
                        "value": "$(from)"
                      },
                      {
                        "type": "string",
                        "value": "$(to)"
                      }
                    ]
                  }
                },
                {
                  "line": 1718,
                  "lval": "file_result",
                  "rval": {
                    "type": "string",
                    "value": "size"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1723,
          "namespace": "default",
          "name": "bigger_than",
          "bodyType": "file_select",
          "arguments": [
            "size"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1727,
                  "lval": "search_size",
                  "rval": {
                    "type": "functionCall",
                    "name": "irange",
                    "arguments": [
                      {
                        "type": "string",
                        "value": "0"
                      },
                      {
                        "type": "string",
                        "value": "$(size)"
                      }
                    ]
                  }
                },
                {
                  "line": 1728,
                  "lval": "file_result",
                  "rval": {
                    "type": "string",
                    "value": "!size"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1733,
          "namespace": "default",
          "name": "exclude",
          "bodyType": "file_select",
          "arguments": [
            "name"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1737,
                  "lval": "leaf_name",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "$(name)"
                      }
                    ]
                  }
                },
                {
                  "line": 1738,
                  "lval": "file_result",
                  "rval": {
                    "type": "string",
                    "value": "!leaf_name"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1743,
          "namespace": "default",
          "name": "plain",
          "bodyType": "file_select",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1746,
                  "lval": "file_types",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "plain"
                      }
                    ]
                  }
                },
                {
                  "line": 1747,
                  "lval": "file_result",
                  "rval": {
                    "type": "string",
                    "value": "file_types"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1750,
          "namespace": "default",
          "name": "dirs",
          "bodyType": "file_select",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1753,
                  "lval": "file_types",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "dir"
                      }
                    ]
                  }
                },
                {
                  "line": 1754,
                  "lval": "file_result",
                  "rval": {
                    "type": "string",
                    "value": "file_types"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1759,
          "namespace": "default",
          "name": "by_name",
          "bodyType": "file_select",
          "arguments": [
            "names"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1763,
                  "lval": "leaf_name",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "@(names)"
                      }
                    ]
                  }
                },
                {
                  "line": 1764,
                  "lval": "file_result",
                  "rval": {
                    "type": "string",
                    "value": "leaf_name"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1769,
          "namespace": "default",
          "name": "ex_list",
          "bodyType": "file_select",
          "arguments": [
            "names"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1773,
                  "lval": "leaf_name",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "@(names)"
                      }
                    ]
                  }
                },
                {
                  "line": 1774,
                  "lval": "file_result",
                  "rval": {
                    "type": "string",
                    "value": "!leaf_name"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1779,
          "namespace": "default",
          "name": "all",
          "bodyType": "file_select",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1782,
                  "lval": "leaf_name",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": ".*"
                      }
                    ]
                  }
                },
                {
                  "line": 1783,
                  "lval": "file_result",
                  "rval": {
                    "type": "string",
                    "value": "leaf_name"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1788,
          "namespace": "default",
          "name": "older_than",
          "bodyType": "file_select",
          "arguments": [
            "years",
            "months",
            "days",
            "hours",
            "minutes",
            "seconds"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1800,
                  "lval": "mtime",
                  "rval": {
                    "type": "functionCall",
                    "name": "irange",
                    "arguments": [
                      {
                        "type": "string",
                        "value": "0"
                      },
                      {
                        "type": "functionCall",
                        "name": "ago",
                        "arguments": [
                          {
                            "type": "string",
                            "value": "$(years)"
                          },
                          {
                            "type": "string",
                            "value": "$(months)"
                          },
                          {
                            "type": "string",
                            "value": "$(days)"
                          },
                          {
                            "type": "string",
                            "value": "$(hours)"
                          },
                          {
                            "type": "string",
                            "value": "$(minutes)"
                          },
                          {
                            "type": "string",
                            "value": "$(seconds)"
                          }
                        ]
                      }
                    ]
                  }
                },
                {
                  "line": 1801,
                  "lval": "file_result",
                  "rval": {
                    "type": "string",
                    "value": "mtime"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1806,
          "namespace": "default",
          "name": "filetype_older_than",
          "bodyType": "file_select",
          "arguments": [
            "filetype",
            "days"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1815,
                  "lval": "file_types",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "$(filetype)"
                      }
                    ]
                  }
                },
                {
                  "line": 1816,
                  "lval": "mtime",
                  "rval": {
                    "type": "functionCall",
                    "name": "irange",
                    "arguments": [
                      {
                        "type": "string",
                        "value": "0"
                      },
                      {
                        "type": "functionCall",
                        "name": "ago",
                        "arguments": [
                          {
                            "type": "string",
                            "value": "0"
                          },
                          {
                            "type": "string",
                            "value": "0"
                          },
                          {
                            "type": "string",
                            "value": "$(days)"
                          },
                          {
                            "type": "string",
                            "value": "0"
                          },
                          {
                            "type": "string",
                            "value": "0"
                          },
                          {
                            "type": "string",
                            "value": "0"
                          }
                        ]
                      }
                    ]
                  }
                },
                {
                  "line": 1817,
                  "lval": "file_result",
                  "rval": {
                    "type": "string",
                    "value": "file_types.mtime"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1822,
          "namespace": "default",
          "name": "filetypes_older_than",
          "bodyType": "file_select",
          "arguments": [
            "filetypes",
            "days"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1832,
                  "lval": "file_types",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "@(filetypes)"
                      }
                    ]
                  }
                },
                {
                  "line": 1833,
                  "lval": "mtime",
                  "rval": {
                    "type": "functionCall",
                    "name": "irange",
                    "arguments": [
                      {
                        "type": "string",
                        "value": "0"
                      },
                      {
                        "type": "functionCall",
                        "name": "ago",
                        "arguments": [
                          {
                            "type": "string",
                            "value": "0"
                          },
                          {
                            "type": "string",
                            "value": "0"
                          },
                          {
                            "type": "string",
                            "value": "$(days)"
                          },
                          {
                            "type": "string",
                            "value": "0"
                          },
                          {
                            "type": "string",
                            "value": "0"
                          },
                          {
                            "type": "string",
                            "value": "0"
                          }
                        ]
                      }
                    ]
                  }
                },
                {
                  "line": 1834,
                  "lval": "file_result",
                  "rval": {
                    "type": "string",
                    "value": "file_types.mtime"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1841,
          "namespace": "default",
          "name": "detect_all_change",
          "bodyType": "changes",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1847,
                  "lval": "hash",
                  "rval": {
                    "type": "string",
                    "value": "best"
                  }
                },
                {
                  "line": 1848,
                  "lval": "report_changes",
                  "rval": {
                    "type": "string",
                    "value": "all"
                  }
                },
                {
                  "line": 1849,
                  "lval": "update_hashes",
                  "rval": {
                    "type": "string",
                    "value": "yes"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1854,
          "namespace": "default",
          "name": "detect_all_change_using",
          "bodyType": "changes",
          "arguments": [
            "hash"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1862,
                  "lval": "hash",
                  "rval": {
                    "type": "string",
                    "value": "$(hash)"
                  }
                },
                {
                  "line": 1863,
                  "lval": "report_changes",
                  "rval": {
                    "type": "string",
                    "value": "all"
                  }
                },
                {
                  "line": 1864,
                  "lval": "update_hashes",
                  "rval": {
                    "type": "string",
                    "value": "yes"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1869,
          "namespace": "default",
          "name": "detect_content",
          "bodyType": "changes",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1874,
                  "lval": "hash",
                  "rval": {
                    "type": "string",
                    "value": "md5"
                  }
                },
                {
                  "line": 1875,
                  "lval": "report_changes",
                  "rval": {
                    "type": "string",
                    "value": "content"
                  }
                },
                {
                  "line": 1876,
                  "lval": "update_hashes",
                  "rval": {
                    "type": "string",
                    "value": "yes"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1881,
          "namespace": "default",
          "name": "detect_content_using",
          "bodyType": "changes",
          "arguments": [
            "hash"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1888,
                  "lval": "hash",
                  "rval": {
                    "type": "string",
                    "value": "$(hash)"
                  }
                },
                {
                  "line": 1889,
                  "lval": "report_changes",
                  "rval": {
                    "type": "string",
                    "value": "content"
                  }
                },
                {
                  "line": 1890,
                  "lval": "update_hashes",
                  "rval": {
                    "type": "string",
                    "value": "yes"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1895,
          "namespace": "default",
          "name": "noupdate",
          "bodyType": "changes",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1898,
                  "lval": "hash",
                  "rval": {
                    "type": "string",
                    "value": "sha256"
                  }
                },
                {
                  "line": 1899,
                  "lval": "report_changes",
                  "rval": {
                    "type": "string",
                    "value": "content"
                  }
                },
                {
                  "line": 1900,
                  "lval": "update_hashes",
                  "rval": {
                    "type": "string",
                    "value": "no"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1905,
          "namespace": "default",
          "name": "diff",
          "bodyType": "changes",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1909,
                  "lval": "hash",
                  "rval": {
                    "type": "string",
                    "value": "sha256"
                  }
                },
                {
                  "line": 1910,
                  "lval": "report_changes",
                  "rval": {
                    "type": "string",
                    "value": "content"
                  }
                },
                {
                  "line": 1911,
                  "lval": "report_diffs",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                },
                {
                  "line": 1912,
                  "lval": "update_hashes",
                  "rval": {
                    "type": "string",
                    "value": "yes"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1917,
          "namespace": "default",
          "name": "all_changes",
          "bodyType": "changes",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1921,
                  "lval": "hash",
                  "rval": {
                    "type": "string",
                    "value": "sha256"
                  }
                },
                {
                  "line": 1922,
                  "lval": "report_changes",
                  "rval": {
                    "type": "string",
                    "value": "all"
                  }
                },
                {
                  "line": 1923,
                  "lval": "report_diffs",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                },
                {
                  "line": 1924,
                  "lval": "update_hashes",
                  "rval": {
                    "type": "string",
                    "value": "yes"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1929,
          "namespace": "default",
          "name": "diff_noupdate",
          "bodyType": "changes",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1933,
                  "lval": "hash",
                  "rval": {
                    "type": "string",
                    "value": "sha256"
                  }
                },
                {
                  "line": 1934,
                  "lval": "report_changes",
                  "rval": {
                    "type": "string",
                    "value": "content"
                  }
                },
                {
                  "line": 1935,
                  "lval": "report_diffs",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                },
                {
                  "line": 1936,
                  "lval": "update_hashes",
                  "rval": {
                    "type": "string",
                    "value": "no"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 2047,
          "namespace": "default",
          "name": "copyfrom_sync",
          "bodyType": "copy_from",
          "arguments": [
            "f"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 2051,
                  "lval": "source",
                  "rval": {
                    "type": "string",
                    "value": "$(f)"
                  }
                },
                {
                  "line": 2052,
                  "lval": "purge",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                },
                {
                  "line": 2053,
                  "lval": "preserve",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                },
                {
                  "line": 2054,
                  "lval": "type_check",
                  "rval": {
                    "type": "string",
                    "value": "false"
                  }
                },
                {
                  "line": 2055,
                  "lval": "compare",
                  "rval": {
                    "type": "string",
                    "value": "digest"
                  }
                }
              ]
            }
          ]
        }
      ]
    }