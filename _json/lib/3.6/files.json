2013-08-14T16:38:23+0200    error: Couldn't find a private key at '/home/jenkins/.cfagent/ppkeys/localhost.priv', use cf-key to get one. (fopen: No such file or directory)
2013-08-14T16:38:23+0200  warning: No public/private key pair is loaded, trying to reload
2013-08-14T16:38:23+0200    error: Couldn't find a private key at '/home/jenkins/.cfagent/ppkeys/localhost.priv', use cf-key to get one. (fopen: No such file or directory)
2013-08-14T16:38:23+0200    error: No public/private key pair found
2013-08-14T16:38:23+0200    error: Apparent body "warn_only()" was undeclared, but used in a promise near line 152 of ../core/masterfiles/lib/3.6/files.cf (possible unquoted literal value)
2013-08-14T16:38:23+0200    error: No such FnCall "if_ok()" in promise @ ../core/masterfiles/lib/3.6/files.cf near line 327
2013-08-14T16:38:23+0200    error: No such FnCall "if_ok()" in promise @ ../core/masterfiles/lib/3.6/files.cf near line 402
2013-08-14T16:38:23+0200    error: No such FnCall "if_ok()" in promise @ ../core/masterfiles/lib/3.6/files.cf near line 447
2013-08-14T16:38:23+0200    error: No such FnCall "if_ok()" in promise @ ../core/masterfiles/lib/3.6/files.cf near line 487
2013-08-14T16:38:23+0200    error: No such FnCall "always()" in promise @ ../core/masterfiles/lib/3.6/files.cf near line 519
2013-08-14T16:38:23+0200    error: No such FnCall "always()" in promise @ ../core/masterfiles/lib/3.6/files.cf near line 550
2013-08-14T16:38:23+0200    error: No such FnCall "always()" in promise @ ../core/masterfiles/lib/3.6/files.cf near line 731
{
      "bundles": [
        {
          "sourcePath": "../core/masterfiles/lib/3.6/files.cf",
          "line": 54,
          "namespace": "default",
          "name": "insert_lines",
          "bundleType": "edit_line",
          "arguments": [
            "lines"
          ],
          "promiseTypes": [
            {
              "line": 56,
              "name": "insert_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 58,
                      "promiser": "$(lines)",
                      "attributes": [
                        {
                          "line": 59,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Append lines if they don\\'t exist"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../core/masterfiles/lib/3.6/files.cf",
          "line": 64,
          "namespace": "default",
          "name": "insert_file",
          "bundleType": "edit_line",
          "arguments": [
            "templatefile"
          ],
          "promiseTypes": [
            {
              "line": 66,
              "name": "insert_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 68,
                      "promiser": "$(templatefile)",
                      "attributes": [
                        {
                          "line": 69,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Insert the template file into the file being edited"
                          }
                        },
                        {
                          "line": 70,
                          "lval": "insert_type",
                          "rval": {
                            "type": "string",
                            "value": "file"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../core/masterfiles/lib/3.6/files.cf",
          "line": 75,
          "namespace": "default",
          "name": "comment_lines_matching",
          "bundleType": "edit_line",
          "arguments": [
            "regex",
            "comment"
          ],
          "promiseTypes": [
            {
              "line": 80,
              "name": "replace_patterns",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 82,
                      "promiser": "^($(regex))$",
                      "attributes": [
                        {
                          "line": 84,
                          "lval": "replace_with",
                          "rval": {
                            "type": "functionCall",
                            "name": "comment",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(comment)"
                              }
                            ]
                          }
                        },
                        {
                          "line": 85,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Search and replace string"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../core/masterfiles/lib/3.6/files.cf",
          "line": 90,
          "namespace": "default",
          "name": "uncomment_lines_matching",
          "bundleType": "edit_line",
          "arguments": [
            "regex",
            "comment"
          ],
          "promiseTypes": [
            {
              "line": 96,
              "name": "replace_patterns",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 98,
                      "promiser": "^$(comment)\\s?($(regex))$",
                      "attributes": [
                        {
                          "line": 100,
                          "lval": "replace_with",
                          "rval": {
                            "type": "symbol",
                            "value": "uncomment"
                          }
                        },
                        {
                          "line": 101,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Uncomment lines matching a regular expression"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../core/masterfiles/lib/3.6/files.cf",
          "line": 106,
          "namespace": "default",
          "name": "comment_lines_containing",
          "bundleType": "edit_line",
          "arguments": [
            "regex",
            "comment"
          ],
          "promiseTypes": [
            {
              "line": 111,
              "name": "replace_patterns",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 113,
                      "promiser": "^((?!$(comment)).*$(regex).*)$",
                      "attributes": [
                        {
                          "line": 115,
                          "lval": "replace_with",
                          "rval": {
                            "type": "functionCall",
                            "name": "comment",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(comment)"
                              }
                            ]
                          }
                        },
                        {
                          "line": 116,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Comment out lines in a file"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../core/masterfiles/lib/3.6/files.cf",
          "line": 121,
          "namespace": "default",
          "name": "uncomment_lines_containing",
          "bundleType": "edit_line",
          "arguments": [
            "regex",
            "comment"
          ],
          "promiseTypes": [
            {
              "line": 127,
              "name": "replace_patterns",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 129,
                      "promiser": "^$(comment)\\s?(.*$(regex).*)$",
                      "attributes": [
                        {
                          "line": 131,
                          "lval": "replace_with",
                          "rval": {
                            "type": "symbol",
                            "value": "uncomment"
                          }
                        },
                        {
                          "line": 132,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Uncomment a line containing a fragment"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../core/masterfiles/lib/3.6/files.cf",
          "line": 137,
          "namespace": "default",
          "name": "delete_lines_matching",
          "bundleType": "edit_line",
          "arguments": [
            "regex"
          ],
          "promiseTypes": [
            {
              "line": 139,
              "name": "delete_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 141,
                      "promiser": "$(regex)",
                      "attributes": [
                        {
                          "line": 143,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Delete lines matching regular expressions"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../core/masterfiles/lib/3.6/files.cf",
          "line": 148,
          "namespace": "default",
          "name": "warn_lines_matching",
          "bundleType": "edit_line",
          "arguments": [
            "regex"
          ],
          "promiseTypes": [
            {
              "line": 150,
              "name": "delete_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 152,
                      "promiser": "$(regex)",
                      "attributes": [
                        {
                          "line": 154,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Warn about lines in a file"
                          }
                        },
                        {
                          "line": 155,
                          "lval": "action",
                          "rval": {
                            "type": "symbol",
                            "value": "warn_only"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../core/masterfiles/lib/3.6/files.cf",
          "line": 160,
          "namespace": "default",
          "name": "append_if_no_line",
          "bundleType": "edit_line",
          "arguments": [
            "str"
          ],
          "promiseTypes": [
            {
              "line": 162,
              "name": "insert_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 164,
                      "promiser": "$(str)",
                      "attributes": [
                        {
                          "line": 166,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Append a line to the file if it doesn\\'t already exist"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../core/masterfiles/lib/3.6/files.cf",
          "line": 171,
          "namespace": "default",
          "name": "append_if_no_lines",
          "bundleType": "edit_line",
          "arguments": [
            "list"
          ],
          "promiseTypes": [
            {
              "line": 173,
              "name": "insert_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 175,
                      "promiser": "$(list)",
                      "attributes": [
                        {
                          "line": 177,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Append lines to the file if they don\\'t already exist"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../core/masterfiles/lib/3.6/files.cf",
          "line": 182,
          "namespace": "default",
          "name": "replace_line_end",
          "bundleType": "edit_line",
          "arguments": [
            "start",
            "end"
          ],
          "promiseTypes": [
            {
              "line": 191,
              "name": "field_edits",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 193,
                      "promiser": "\\s*$(start)\\s.*",
                      "attributes": [
                        {
                          "line": 194,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Replace lines with $(this.start) and $(this.end)"
                          }
                        },
                        {
                          "line": 195,
                          "lval": "edit_field",
                          "rval": {
                            "type": "functionCall",
                            "name": "line",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "(^|\\s)$(start)\\s*"
                              },
                              {
                                "type": "string",
                                "value": "2"
                              },
                              {
                                "type": "string",
                                "value": "$(end)"
                              },
                              {
                                "type": "string",
                                "value": "set"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../core/masterfiles/lib/3.6/files.cf",
          "line": 200,
          "namespace": "default",
          "name": "append_to_line_end",
          "bundleType": "edit_line",
          "arguments": [
            "start",
            "end"
          ],
          "promiseTypes": [
            {
              "line": 212,
              "name": "field_edits",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 214,
                      "promiser": "\\s*$(start)\\s.*",
                      "attributes": [
                        {
                          "line": 215,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Append lines with $(this.start) and $(this.end)"
                          }
                        },
                        {
                          "line": 216,
                          "lval": "edit_field",
                          "rval": {
                            "type": "functionCall",
                            "name": "line",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "(^|\\s)$(start)\\s*"
                              },
                              {
                                "type": "string",
                                "value": "2"
                              },
                              {
                                "type": "string",
                                "value": "$(end)"
                              },
                              {
                                "type": "string",
                                "value": "append"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../core/masterfiles/lib/3.6/files.cf",
          "line": 221,
          "namespace": "default",
          "name": "regex_replace",
          "bundleType": "edit_line",
          "arguments": [
            "find",
            "replace"
          ],
          "promiseTypes": [
            {
              "line": 225,
              "name": "replace_patterns",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 227,
                      "promiser": "$(find)",
                      "attributes": [
                        {
                          "line": 228,
                          "lval": "replace_with",
                          "rval": {
                            "type": "functionCall",
                            "name": "value",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(replace)"
                              }
                            ]
                          }
                        },
                        {
                          "line": 229,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Search and replace string"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../core/masterfiles/lib/3.6/files.cf",
          "line": 234,
          "namespace": "default",
          "name": "resolvconf",
          "bundleType": "edit_line",
          "arguments": [
            "search",
            "list"
          ],
          "promiseTypes": [
            {
              "line": 240,
              "name": "delete_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 242,
                      "promiser": "search.*",
                      "attributes": [
                        {
                          "line": 242,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Reset search lines from resolver"
                          }
                        }
                      ]
                    },
                    {
                      "line": 243,
                      "promiser": "nameserver.*",
                      "attributes": [
                        {
                          "line": 243,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Reset nameservers in resolver"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 245,
              "name": "insert_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 247,
                      "promiser": "search $(search)",
                      "attributes": [
                        {
                          "line": 247,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Add search domains to resolver"
                          }
                        }
                      ]
                    },
                    {
                      "line": 248,
                      "promiser": "nameserver $(list)",
                      "attributes": [
                        {
                          "line": 248,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Add name servers to resolver"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../core/masterfiles/lib/3.6/files.cf",
          "line": 253,
          "namespace": "default",
          "name": "resolvconf_o",
          "bundleType": "edit_line",
          "arguments": [
            "search",
            "list",
            "options"
          ],
          "promiseTypes": [
            {
              "line": 260,
              "name": "delete_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 262,
                      "promiser": "search.*",
                      "attributes": [
                        {
                          "line": 262,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Reset search lines from resolver"
                          }
                        }
                      ]
                    },
                    {
                      "line": 263,
                      "promiser": "nameserver.*",
                      "attributes": [
                        {
                          "line": 263,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Reset nameservers in resolver"
                          }
                        }
                      ]
                    },
                    {
                      "line": 264,
                      "promiser": "options.*",
                      "attributes": [
                        {
                          "line": 264,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Reset options in resolver"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 266,
              "name": "insert_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 268,
                      "promiser": "search $(search)",
                      "attributes": [
                        {
                          "line": 268,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Add search domains to resolver"
                          }
                        }
                      ]
                    },
                    {
                      "line": 269,
                      "promiser": "nameserver $(list)",
                      "attributes": [
                        {
                          "line": 269,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Add name servers to resolver"
                          }
                        }
                      ]
                    },
                    {
                      "line": 270,
                      "promiser": "options $(options)",
                      "attributes": [
                        {
                          "line": 270,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Add options to resolver"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../core/masterfiles/lib/3.6/files.cf",
          "line": 275,
          "namespace": "default",
          "name": "manage_variable_values_ini",
          "bundleType": "edit_line",
          "arguments": [
            "tab",
            "sectionName"
          ],
          "promiseTypes": [
            {
              "line": 308,
              "name": "vars",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 309,
                      "promiser": "index",
                      "attributes": [
                        {
                          "line": 309,
                          "lval": "slist",
                          "rval": {
                            "type": "functionCall",
                            "name": "getindices",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(tab)[$(sectionName)]"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 312,
                      "promiser": "cindex[$(index)]",
                      "attributes": [
                        {
                          "line": 312,
                          "lval": "string",
                          "rval": {
                            "type": "functionCall",
                            "name": "canonify",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(index)"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 314,
              "name": "classes",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 315,
                      "promiser": "edit_$(cindex[$(index)])",
                      "attributes": [
                        {
                          "line": 315,
                          "lval": "not",
                          "rval": {
                            "type": "functionCall",
                            "name": "strcmp",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$($(tab)[$(sectionName)][$(index)])"
                              },
                              {
                                "type": "string",
                                "value": "dontchange"
                              }
                            ]
                          }
                        },
                        {
                          "line": 316,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Create conditions to make changes"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 318,
              "name": "field_edits",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 321,
                      "promiser": "#+\\s*$(index)\\s*=.*",
                      "attributes": [
                        {
                          "line": 322,
                          "lval": "select_region",
                          "rval": {
                            "type": "functionCall",
                            "name": "INI_section",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(sectionName)"
                              }
                            ]
                          }
                        },
                        {
                          "line": 323,
                          "lval": "edit_field",
                          "rval": {
                            "type": "functionCall",
                            "name": "col",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "="
                              },
                              {
                                "type": "string",
                                "value": "1"
                              },
                              {
                                "type": "string",
                                "value": "$(index)"
                              },
                              {
                                "type": "string",
                                "value": "set"
                              }
                            ]
                          }
                        },
                        {
                          "line": 324,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "string",
                            "value": "edit_$(cindex[$(index)])"
                          }
                        }
                      ]
                    },
                    {
                      "line": 327,
                      "promiser": "$(index)\\s*=.*",
                      "attributes": [
                        {
                          "line": 328,
                          "lval": "edit_field",
                          "rval": {
                            "type": "functionCall",
                            "name": "col",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "="
                              },
                              {
                                "type": "string",
                                "value": "2"
                              },
                              {
                                "type": "string",
                                "value": "$($(tab)[$(sectionName)][$(index)])"
                              },
                              {
                                "type": "string",
                                "value": "set"
                              }
                            ]
                          }
                        },
                        {
                          "line": 329,
                          "lval": "select_region",
                          "rval": {
                            "type": "functionCall",
                            "name": "INI_section",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(sectionName)"
                              }
                            ]
                          }
                        },
                        {
                          "line": 330,
                          "lval": "classes",
                          "rval": {
                            "type": "functionCall",
                            "name": "if_ok",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "manage_variable_values_ini_not_$(cindex[$(index)])"
                              }
                            ]
                          }
                        },
                        {
                          "line": 331,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "string",
                            "value": "edit_$(cindex[$(index)])"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 333,
              "name": "delete_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 334,
                      "promiser": ".*",
                      "attributes": [
                        {
                          "line": 335,
                          "lval": "select_region",
                          "rval": {
                            "type": "functionCall",
                            "name": "INI_section",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(sectionName)"
                              }
                            ]
                          }
                        },
                        {
                          "line": 336,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Remove all entries in the region so there are no extra entries"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 338,
              "name": "insert_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 339,
                      "promiser": "[$(sectionName)]",
                      "attributes": [
                        {
                          "line": 340,
                          "lval": "location",
                          "rval": {
                            "type": "symbol",
                            "value": "start"
                          }
                        },
                        {
                          "line": 341,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Insert lines"
                          }
                        }
                      ]
                    },
                    {
                      "line": 343,
                      "promiser": "$(index)=$($(tab)[$(sectionName)][$(index)])",
                      "attributes": [
                        {
                          "line": 344,
                          "lval": "select_region",
                          "rval": {
                            "type": "functionCall",
                            "name": "INI_section",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(sectionName)"
                              }
                            ]
                          }
                        },
                        {
                          "line": 345,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "string",
                            "value": "!manage_variable_values_ini_not_$(cindex[$(index)]).edit_$(cindex[$(index)])"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../core/masterfiles/lib/3.6/files.cf",
          "line": 351,
          "namespace": "default",
          "name": "set_variable_values_ini",
          "bundleType": "edit_line",
          "arguments": [
            "tab",
            "sectionName"
          ],
          "promiseTypes": [
            {
              "line": 383,
              "name": "vars",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 384,
                      "promiser": "index",
                      "attributes": [
                        {
                          "line": 384,
                          "lval": "slist",
                          "rval": {
                            "type": "functionCall",
                            "name": "getindices",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(tab)[$(sectionName)]"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 387,
                      "promiser": "cindex[$(index)]",
                      "attributes": [
                        {
                          "line": 387,
                          "lval": "string",
                          "rval": {
                            "type": "functionCall",
                            "name": "canonify",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(index)"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 389,
              "name": "classes",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 390,
                      "promiser": "edit_$(cindex[$(index)])",
                      "attributes": [
                        {
                          "line": 390,
                          "lval": "not",
                          "rval": {
                            "type": "functionCall",
                            "name": "strcmp",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$($(tab)[$(sectionName)][$(index)])"
                              },
                              {
                                "type": "string",
                                "value": "dontchange"
                              }
                            ]
                          }
                        },
                        {
                          "line": 391,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Create conditions to make changes"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 393,
              "name": "field_edits",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 396,
                      "promiser": "#+\\s*$(index)\\s*=.*",
                      "attributes": [
                        {
                          "line": 397,
                          "lval": "select_region",
                          "rval": {
                            "type": "functionCall",
                            "name": "INI_section",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(sectionName)"
                              }
                            ]
                          }
                        },
                        {
                          "line": 398,
                          "lval": "edit_field",
                          "rval": {
                            "type": "functionCall",
                            "name": "col",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "="
                              },
                              {
                                "type": "string",
                                "value": "1"
                              },
                              {
                                "type": "string",
                                "value": "$(index)"
                              },
                              {
                                "type": "string",
                                "value": "set"
                              }
                            ]
                          }
                        },
                        {
                          "line": 399,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "string",
                            "value": "edit_$(cindex[$(index)])"
                          }
                        }
                      ]
                    },
                    {
                      "line": 402,
                      "promiser": "$(index)\\s*=.*",
                      "attributes": [
                        {
                          "line": 403,
                          "lval": "edit_field",
                          "rval": {
                            "type": "functionCall",
                            "name": "col",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "="
                              },
                              {
                                "type": "string",
                                "value": "2"
                              },
                              {
                                "type": "string",
                                "value": "$($(tab)[$(sectionName)][$(index)])"
                              },
                              {
                                "type": "string",
                                "value": "set"
                              }
                            ]
                          }
                        },
                        {
                          "line": 404,
                          "lval": "select_region",
                          "rval": {
                            "type": "functionCall",
                            "name": "INI_section",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(sectionName)"
                              }
                            ]
                          }
                        },
                        {
                          "line": 405,
                          "lval": "classes",
                          "rval": {
                            "type": "functionCall",
                            "name": "if_ok",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "set_variable_values_ini_not_$(cindex[$(index)])"
                              }
                            ]
                          }
                        },
                        {
                          "line": 406,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "string",
                            "value": "edit_$(cindex[$(index)])"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 408,
              "name": "insert_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 409,
                      "promiser": "[$(sectionName)]",
                      "attributes": [
                        {
                          "line": 410,
                          "lval": "location",
                          "rval": {
                            "type": "symbol",
                            "value": "start"
                          }
                        },
                        {
                          "line": 411,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Insert lines"
                          }
                        }
                      ]
                    },
                    {
                      "line": 413,
                      "promiser": "$(index)=$($(tab)[$(sectionName)][$(index)])",
                      "attributes": [
                        {
                          "line": 414,
                          "lval": "select_region",
                          "rval": {
                            "type": "functionCall",
                            "name": "INI_section",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(sectionName)"
                              }
                            ]
                          }
                        },
                        {
                          "line": 415,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "string",
                            "value": "!set_variable_values_ini_not_$(cindex[$(index)]).edit_$(cindex[$(index)])"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../core/masterfiles/lib/3.6/files.cf",
          "line": 419,
          "namespace": "default",
          "name": "set_quoted_values",
          "bundleType": "edit_line",
          "arguments": [
            "v"
          ],
          "promiseTypes": [
            {
              "line": 435,
              "name": "vars",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 436,
                      "promiser": "index",
                      "attributes": [
                        {
                          "line": 436,
                          "lval": "slist",
                          "rval": {
                            "type": "functionCall",
                            "name": "getindices",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(v)"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 439,
                      "promiser": "cindex[$(index)]",
                      "attributes": [
                        {
                          "line": 439,
                          "lval": "string",
                          "rval": {
                            "type": "functionCall",
                            "name": "canonify",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(index)"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 441,
              "name": "field_edits",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 443,
                      "promiser": "#+\\s*$(index)\\s*=.*",
                      "attributes": [
                        {
                          "line": 444,
                          "lval": "edit_field",
                          "rval": {
                            "type": "functionCall",
                            "name": "col",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "="
                              },
                              {
                                "type": "string",
                                "value": "1"
                              },
                              {
                                "type": "string",
                                "value": "$(index)"
                              },
                              {
                                "type": "string",
                                "value": "set"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 447,
                      "promiser": "\\s*$(index)\\s*=.*",
                      "attributes": [
                        {
                          "line": 448,
                          "lval": "edit_field",
                          "rval": {
                            "type": "functionCall",
                            "name": "col",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "="
                              },
                              {
                                "type": "string",
                                "value": "2"
                              },
                              {
                                "type": "string",
                                "value": "\\\"$($(v)[$(index)])\\\""
                              },
                              {
                                "type": "string",
                                "value": "set"
                              }
                            ]
                          }
                        },
                        {
                          "line": 449,
                          "lval": "classes",
                          "rval": {
                            "type": "functionCall",
                            "name": "if_ok",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(cindex[$(index)])_in_file"
                              }
                            ]
                          }
                        },
                        {
                          "line": 450,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Match a line starting like key = something"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 452,
              "name": "insert_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 453,
                      "promiser": "$(index)=\"$($(v)[$(index)])\"",
                      "attributes": [
                        {
                          "line": 454,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Insert a variable definition"
                          }
                        },
                        {
                          "line": 455,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "string",
                            "value": "!$(cindex[$(index)])_in_file"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../core/masterfiles/lib/3.6/files.cf",
          "line": 460,
          "namespace": "default",
          "name": "set_variable_values",
          "bundleType": "edit_line",
          "arguments": [
            "v"
          ],
          "promiseTypes": [
            {
              "line": 474,
              "name": "vars",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 476,
                      "promiser": "index",
                      "attributes": [
                        {
                          "line": 476,
                          "lval": "slist",
                          "rval": {
                            "type": "functionCall",
                            "name": "getindices",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(v)"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 480,
                      "promiser": "cindex[$(index)]",
                      "attributes": [
                        {
                          "line": 480,
                          "lval": "string",
                          "rval": {
                            "type": "functionCall",
                            "name": "canonify",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(index)"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 481,
                      "promiser": "cv",
                      "attributes": [
                        {
                          "line": 481,
                          "lval": "string",
                          "rval": {
                            "type": "functionCall",
                            "name": "canonify",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(v)"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 483,
              "name": "field_edits",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 487,
                      "promiser": "\\s*$(index)\\s*=.*",
                      "attributes": [
                        {
                          "line": 489,
                          "lval": "edit_field",
                          "rval": {
                            "type": "functionCall",
                            "name": "col",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "="
                              },
                              {
                                "type": "string",
                                "value": "2"
                              },
                              {
                                "type": "string",
                                "value": "$($(v)[$(index)])"
                              },
                              {
                                "type": "string",
                                "value": "set"
                              }
                            ]
                          }
                        },
                        {
                          "line": 490,
                          "lval": "classes",
                          "rval": {
                            "type": "functionCall",
                            "name": "if_ok",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(cv)_$(cindex[$(index)])_in_file"
                              }
                            ]
                          }
                        },
                        {
                          "line": 491,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Match a line starting like key = something"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 493,
              "name": "insert_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 495,
                      "promiser": "$(index)=$($(v)[$(index)])",
                      "attributes": [
                        {
                          "line": 497,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Insert a variable definition"
                          }
                        },
                        {
                          "line": 498,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "string",
                            "value": "!$(cv)_$(cindex[$(index)])_in_file"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../core/masterfiles/lib/3.6/files.cf",
          "line": 501,
          "namespace": "default",
          "name": "set_config_values",
          "bundleType": "edit_line",
          "arguments": [
            "v"
          ],
          "promiseTypes": [
            {
              "line": 510,
              "name": "vars",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 511,
                      "promiser": "index",
                      "attributes": [
                        {
                          "line": 511,
                          "lval": "slist",
                          "rval": {
                            "type": "functionCall",
                            "name": "getindices",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(v)"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 514,
                      "promiser": "cindex[$(index)]",
                      "attributes": [
                        {
                          "line": 514,
                          "lval": "string",
                          "rval": {
                            "type": "functionCall",
                            "name": "canonify",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(index)"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 516,
              "name": "replace_patterns",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 519,
                      "promiser": "^\\s*($(index)\\s+(?!$($(v)[$(index)])$).*|# ?$(index)\\s+.*)$",
                      "attributes": [
                        {
                          "line": 520,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Correct the value"
                          }
                        },
                        {
                          "line": 521,
                          "lval": "replace_with",
                          "rval": {
                            "type": "functionCall",
                            "name": "value",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(index) $($(v)[$(index)])"
                              }
                            ]
                          }
                        },
                        {
                          "line": 522,
                          "lval": "classes",
                          "rval": {
                            "type": "functionCall",
                            "name": "always",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "replace_attempted_$(cindex[$(index)])"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 524,
              "name": "insert_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 525,
                      "promiser": "$(index) $($(v)[$(index)])",
                      "attributes": [
                        {
                          "line": 526,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "string",
                            "value": "replace_attempted_$(cindex[$(index)])"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../core/masterfiles/lib/3.6/files.cf",
          "line": 530,
          "namespace": "default",
          "name": "set_config_values_matching",
          "bundleType": "edit_line",
          "arguments": [
            "v",
            "pat"
          ],
          "promiseTypes": [
            {
              "line": 540,
              "name": "vars",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 541,
                      "promiser": "allparams",
                      "attributes": [
                        {
                          "line": 541,
                          "lval": "slist",
                          "rval": {
                            "type": "functionCall",
                            "name": "getindices",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(v)"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 542,
                      "promiser": "index",
                      "attributes": [
                        {
                          "line": 542,
                          "lval": "slist",
                          "rval": {
                            "type": "functionCall",
                            "name": "grep",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(pat)"
                              },
                              {
                                "type": "string",
                                "value": "allparams"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 545,
                      "promiser": "cindex[$(index)]",
                      "attributes": [
                        {
                          "line": 545,
                          "lval": "string",
                          "rval": {
                            "type": "functionCall",
                            "name": "canonify",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(index)"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 547,
              "name": "replace_patterns",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 550,
                      "promiser": "^\\s*($(index)\\s+(?!$($(v)[$(index)])).*|# ?$(index)\\s+.*)$",
                      "attributes": [
                        {
                          "line": 551,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Correct the value"
                          }
                        },
                        {
                          "line": 552,
                          "lval": "replace_with",
                          "rval": {
                            "type": "functionCall",
                            "name": "value",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(index) $($(v)[$(index)])"
                              }
                            ]
                          }
                        },
                        {
                          "line": 553,
                          "lval": "classes",
                          "rval": {
                            "type": "functionCall",
                            "name": "always",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "replace_attempted_$(cindex[$(index)])"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 555,
              "name": "insert_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 556,
                      "promiser": "$(index) $($(v)[$(index)])",
                      "attributes": [
                        {
                          "line": 557,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "string",
                            "value": "replace_attempted_$(cindex[$(index)])"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../core/masterfiles/lib/3.6/files.cf",
          "line": 563,
          "namespace": "default",
          "name": "maintain_key_values",
          "bundleType": "edit_line",
          "arguments": [
            "v",
            "sep"
          ],
          "promiseTypes": [
            {
              "line": 569,
              "name": "vars",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 570,
                      "promiser": "index",
                      "attributes": [
                        {
                          "line": 570,
                          "lval": "slist",
                          "rval": {
                            "type": "functionCall",
                            "name": "getindices",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(v)"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 572,
                      "promiser": "cindex[$(index)]",
                      "attributes": [
                        {
                          "line": 572,
                          "lval": "string",
                          "rval": {
                            "type": "functionCall",
                            "name": "canonify",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(index)"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 574,
                      "promiser": "keypat[$(index)]",
                      "attributes": [
                        {
                          "line": 574,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": "\\s*$(index)\\s*$(sep)\\s*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 577,
                      "promiser": "ve[$(index)]",
                      "attributes": [
                        {
                          "line": 577,
                          "lval": "string",
                          "rval": {
                            "type": "functionCall",
                            "name": "escape",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$($(v)[$(index)])"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 579,
              "name": "classes",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 580,
                      "promiser": "$(cindex[$(index)])_key_in_file",
                      "attributes": [
                        {
                          "line": 581,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Dynamic Class created if patterns matching"
                          }
                        },
                        {
                          "line": 582,
                          "lval": "expression",
                          "rval": {
                            "type": "functionCall",
                            "name": "regline",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "^$(keypat[$(index)]).*"
                              },
                              {
                                "type": "string",
                                "value": "$(edit.filename)"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 584,
              "name": "replace_patterns",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 587,
                      "promiser": "^($(keypat[$(index)]))(?!$(ve[$(index)])$).*",
                      "attributes": [
                        {
                          "line": 588,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Replace definition of $(index)"
                          }
                        },
                        {
                          "line": 589,
                          "lval": "replace_with",
                          "rval": {
                            "type": "functionCall",
                            "name": "value",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(match.1)$($(v)[$(index)])"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 591,
              "name": "insert_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 592,
                      "promiser": "$(index)$(sep)$($(v)[$(index)])",
                      "attributes": [
                        {
                          "line": 593,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Insert definition of $(index)"
                          }
                        },
                        {
                          "line": 594,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "string",
                            "value": "!$(cindex[$(index)])_key_in_file"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../core/masterfiles/lib/3.6/files.cf",
          "line": 599,
          "namespace": "default",
          "name": "append_users_starting",
          "bundleType": "edit_line",
          "arguments": [
            "v"
          ],
          "promiseTypes": [
            {
              "line": 605,
              "name": "vars",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 607,
                      "promiser": "index",
                      "attributes": [
                        {
                          "line": 607,
                          "lval": "slist",
                          "rval": {
                            "type": "functionCall",
                            "name": "getindices",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(v)"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 609,
              "name": "classes",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 611,
                      "promiser": "add_$(index)",
                      "attributes": [
                        {
                          "line": 611,
                          "lval": "not",
                          "rval": {
                            "type": "functionCall",
                            "name": "userexists",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(index)"
                              }
                            ]
                          }
                        },
                        {
                          "line": 612,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Class created if user does not exist"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 614,
              "name": "insert_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 616,
                      "promiser": "$($(v)[$(index)])",
                      "attributes": [
                        {
                          "line": 618,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Append users into a password file format"
                          }
                        },
                        {
                          "line": 619,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "string",
                            "value": "add_$(index)"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../core/masterfiles/lib/3.6/files.cf",
          "line": 624,
          "namespace": "default",
          "name": "append_groups_starting",
          "bundleType": "edit_line",
          "arguments": [
            "v"
          ],
          "promiseTypes": [
            {
              "line": 630,
              "name": "vars",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 632,
                      "promiser": "index",
                      "attributes": [
                        {
                          "line": 632,
                          "lval": "slist",
                          "rval": {
                            "type": "functionCall",
                            "name": "getindices",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(v)"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 634,
              "name": "classes",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 636,
                      "promiser": "add_$(index)",
                      "attributes": [
                        {
                          "line": 636,
                          "lval": "not",
                          "rval": {
                            "type": "functionCall",
                            "name": "groupexists",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(index)"
                              }
                            ]
                          }
                        },
                        {
                          "line": 637,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Class created if group does not exist"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 639,
              "name": "insert_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 641,
                      "promiser": "$($(v)[$(index)])",
                      "attributes": [
                        {
                          "line": 643,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Append users into a group file format"
                          }
                        },
                        {
                          "line": 644,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "string",
                            "value": "add_$(index)"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../core/masterfiles/lib/3.6/files.cf",
          "line": 650,
          "namespace": "default",
          "name": "set_colon_field",
          "bundleType": "edit_line",
          "arguments": [
            "key",
            "field",
            "val"
          ],
          "promiseTypes": [
            {
              "line": 656,
              "name": "field_edits",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 658,
                      "promiser": "$(key):.*",
                      "attributes": [
                        {
                          "line": 660,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Edit a colon-separated file, using the first field as a key"
                          }
                        },
                        {
                          "line": 661,
                          "lval": "edit_field",
                          "rval": {
                            "type": "functionCall",
                            "name": "col",
                            "arguments": [
                              {
                                "type": "string",
                                "value": ":"
                              },
                              {
                                "type": "string",
                                "value": "$(field)"
                              },
                              {
                                "type": "string",
                                "value": "$(val)"
                              },
                              {
                                "type": "string",
                                "value": "set"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../core/masterfiles/lib/3.6/files.cf",
          "line": 666,
          "namespace": "default",
          "name": "set_user_field",
          "bundleType": "edit_line",
          "arguments": [
            "user",
            "field",
            "val"
          ],
          "promiseTypes": [
            {
              "line": 672,
              "name": "field_edits",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 674,
                      "promiser": "$(user):.*",
                      "attributes": [
                        {
                          "line": 676,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Edit a user attribute in the password file"
                          }
                        },
                        {
                          "line": 677,
                          "lval": "edit_field",
                          "rval": {
                            "type": "functionCall",
                            "name": "col",
                            "arguments": [
                              {
                                "type": "string",
                                "value": ":"
                              },
                              {
                                "type": "string",
                                "value": "$(field)"
                              },
                              {
                                "type": "string",
                                "value": "$(val)"
                              },
                              {
                                "type": "string",
                                "value": "set"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../core/masterfiles/lib/3.6/files.cf",
          "line": 682,
          "namespace": "default",
          "name": "append_user_field",
          "bundleType": "edit_line",
          "arguments": [
            "group",
            "field",
            "allusers"
          ],
          "promiseTypes": [
            {
              "line": 688,
              "name": "vars",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 690,
                      "promiser": "val",
                      "attributes": [
                        {
                          "line": 690,
                          "lval": "slist",
                          "rval": {
                            "type": "list",
                            "value": [
                              {
                                "type": "string",
                                "value": "@(allusers)"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 692,
              "name": "field_edits",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 694,
                      "promiser": "$(group):.*",
                      "attributes": [
                        {
                          "line": 696,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Append users into a password file format"
                          }
                        },
                        {
                          "line": 697,
                          "lval": "edit_field",
                          "rval": {
                            "type": "functionCall",
                            "name": "col",
                            "arguments": [
                              {
                                "type": "string",
                                "value": ":"
                              },
                              {
                                "type": "string",
                                "value": "$(field)"
                              },
                              {
                                "type": "string",
                                "value": "$(val)"
                              },
                              {
                                "type": "string",
                                "value": "alphanum"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../core/masterfiles/lib/3.6/files.cf",
          "line": 702,
          "namespace": "default",
          "name": "expand_template",
          "bundleType": "edit_line",
          "arguments": [
            "templatefile"
          ],
          "promiseTypes": [
            {
              "line": 708,
              "name": "insert_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 710,
                      "promiser": "$(templatefile)",
                      "attributes": [
                        {
                          "line": 712,
                          "lval": "insert_type",
                          "rval": {
                            "type": "string",
                            "value": "file"
                          }
                        },
                        {
                          "line": 713,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Expand variables in the template file"
                          }
                        },
                        {
                          "line": 714,
                          "lval": "expand_scalars",
                          "rval": {
                            "type": "string",
                            "value": "true"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../core/masterfiles/lib/3.6/files.cf",
          "line": 717,
          "namespace": "default",
          "name": "replace_or_add",
          "bundleType": "edit_line",
          "arguments": [
            "pattern",
            "line"
          ],
          "promiseTypes": [
            {
              "line": 726,
              "name": "vars",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 727,
                      "promiser": "cline",
                      "attributes": [
                        {
                          "line": 727,
                          "lval": "string",
                          "rval": {
                            "type": "functionCall",
                            "name": "canonify",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(line)"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 728,
                      "promiser": "eline",
                      "attributes": [
                        {
                          "line": 728,
                          "lval": "string",
                          "rval": {
                            "type": "functionCall",
                            "name": "escape",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(line)"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 730,
              "name": "replace_patterns",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 731,
                      "promiser": "^(?!$(eline)$)$(pattern)$",
                      "attributes": [
                        {
                          "line": 732,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Replace a pattern here"
                          }
                        },
                        {
                          "line": 733,
                          "lval": "replace_with",
                          "rval": {
                            "type": "functionCall",
                            "name": "value",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(line)"
                              }
                            ]
                          }
                        },
                        {
                          "line": 734,
                          "lval": "classes",
                          "rval": {
                            "type": "functionCall",
                            "name": "always",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "replace_done_$(cline)"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 736,
              "name": "insert_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 737,
                      "promiser": "$(line)",
                      "attributes": [
                        {
                          "line": 738,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "string",
                            "value": "replace_done_$(cline)"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "bodies": [
        {
          "sourcePath": "../core/masterfiles/lib/3.6/files.cf",
          "line": 745,
          "namespace": "default",
          "name": "quoted_var",
          "bodyType": "edit_field",
          "arguments": [
            "newval",
            "method"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 747,
                  "lval": "field_separator",
                  "rval": {
                    "type": "string",
                    "value": "\\\""
                  }
                },
                {
                  "line": 748,
                  "lval": "select_field",
                  "rval": {
                    "type": "string",
                    "value": "2"
                  }
                },
                {
                  "line": 749,
                  "lval": "value_separator",
                  "rval": {
                    "type": "string",
                    "value": " "
                  }
                },
                {
                  "line": 750,
                  "lval": "field_value",
                  "rval": {
                    "type": "string",
                    "value": "$(newval)"
                  }
                },
                {
                  "line": 751,
                  "lval": "field_operation",
                  "rval": {
                    "type": "string",
                    "value": "$(method)"
                  }
                },
                {
                  "line": 752,
                  "lval": "extend_fields",
                  "rval": {
                    "type": "string",
                    "value": "false"
                  }
                },
                {
                  "line": 753,
                  "lval": "allow_blank_fields",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../core/masterfiles/lib/3.6/files.cf",
          "line": 758,
          "namespace": "default",
          "name": "col",
          "bodyType": "edit_field",
          "arguments": [
            "split",
            "col",
            "newval",
            "method"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 760,
                  "lval": "field_separator",
                  "rval": {
                    "type": "string",
                    "value": "$(split)"
                  }
                },
                {
                  "line": 761,
                  "lval": "select_field",
                  "rval": {
                    "type": "string",
                    "value": "$(col)"
                  }
                },
                {
                  "line": 762,
                  "lval": "value_separator",
                  "rval": {
                    "type": "string",
                    "value": ","
                  }
                },
                {
                  "line": 763,
                  "lval": "field_value",
                  "rval": {
                    "type": "string",
                    "value": "$(newval)"
                  }
                },
                {
                  "line": 764,
                  "lval": "field_operation",
                  "rval": {
                    "type": "string",
                    "value": "$(method)"
                  }
                },
                {
                  "line": 765,
                  "lval": "extend_fields",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                },
                {
                  "line": 766,
                  "lval": "allow_blank_fields",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../core/masterfiles/lib/3.6/files.cf",
          "line": 771,
          "namespace": "default",
          "name": "line",
          "bodyType": "edit_field",
          "arguments": [
            "split",
            "col",
            "newval",
            "method"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 773,
                  "lval": "field_separator",
                  "rval": {
                    "type": "string",
                    "value": "$(split)"
                  }
                },
                {
                  "line": 774,
                  "lval": "select_field",
                  "rval": {
                    "type": "string",
                    "value": "$(col)"
                  }
                },
                {
                  "line": 775,
                  "lval": "value_separator",
                  "rval": {
                    "type": "string",
                    "value": " "
                  }
                },
                {
                  "line": 776,
                  "lval": "field_value",
                  "rval": {
                    "type": "string",
                    "value": "$(newval)"
                  }
                },
                {
                  "line": 777,
                  "lval": "field_operation",
                  "rval": {
                    "type": "string",
                    "value": "$(method)"
                  }
                },
                {
                  "line": 778,
                  "lval": "extend_fields",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                },
                {
                  "line": 779,
                  "lval": "allow_blank_fields",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../core/masterfiles/lib/3.6/files.cf",
          "line": 784,
          "namespace": "default",
          "name": "value",
          "bodyType": "replace_with",
          "arguments": [
            "x"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 786,
                  "lval": "replace_value",
                  "rval": {
                    "type": "string",
                    "value": "$(x)"
                  }
                },
                {
                  "line": 787,
                  "lval": "occurrences",
                  "rval": {
                    "type": "string",
                    "value": "all"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../core/masterfiles/lib/3.6/files.cf",
          "line": 792,
          "namespace": "default",
          "name": "INI_section",
          "bodyType": "select_region",
          "arguments": [
            "x"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 794,
                  "lval": "select_start",
                  "rval": {
                    "type": "string",
                    "value": "\\[$(x)\\]\\s*"
                  }
                },
                {
                  "line": 795,
                  "lval": "select_end",
                  "rval": {
                    "type": "string",
                    "value": "\\[.*\\]\\s*"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../core/masterfiles/lib/3.6/files.cf",
          "line": 802,
          "namespace": "default",
          "name": "std_defs",
          "bodyType": "edit_defaults",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 804,
                  "lval": "empty_file_before_editing",
                  "rval": {
                    "type": "string",
                    "value": "false"
                  }
                },
                {
                  "line": 805,
                  "lval": "edit_backup",
                  "rval": {
                    "type": "string",
                    "value": "false"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../core/masterfiles/lib/3.6/files.cf",
          "line": 811,
          "namespace": "default",
          "name": "empty",
          "bodyType": "edit_defaults",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 813,
                  "lval": "empty_file_before_editing",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                },
                {
                  "line": 814,
                  "lval": "edit_backup",
                  "rval": {
                    "type": "string",
                    "value": "false"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../core/masterfiles/lib/3.6/files.cf",
          "line": 820,
          "namespace": "default",
          "name": "no_backup",
          "bodyType": "edit_defaults",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 822,
                  "lval": "edit_backup",
                  "rval": {
                    "type": "string",
                    "value": "false"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../core/masterfiles/lib/3.6/files.cf",
          "line": 827,
          "namespace": "default",
          "name": "backup_timestamp",
          "bodyType": "edit_defaults",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 829,
                  "lval": "empty_file_before_editing",
                  "rval": {
                    "type": "string",
                    "value": "false"
                  }
                },
                {
                  "line": 830,
                  "lval": "edit_backup",
                  "rval": {
                    "type": "string",
                    "value": "timestamp"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../core/masterfiles/lib/3.6/files.cf",
          "line": 838,
          "namespace": "default",
          "name": "start",
          "bodyType": "location",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 840,
                  "lval": "before_after",
                  "rval": {
                    "type": "string",
                    "value": "before"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../core/masterfiles/lib/3.6/files.cf",
          "line": 845,
          "namespace": "default",
          "name": "after",
          "bodyType": "location",
          "arguments": [
            "str"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 847,
                  "lval": "before_after",
                  "rval": {
                    "type": "string",
                    "value": "after"
                  }
                },
                {
                  "line": 848,
                  "lval": "select_line_matching",
                  "rval": {
                    "type": "string",
                    "value": "$(str)"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../core/masterfiles/lib/3.6/files.cf",
          "line": 853,
          "namespace": "default",
          "name": "before",
          "bodyType": "location",
          "arguments": [
            "str"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 855,
                  "lval": "before_after",
                  "rval": {
                    "type": "string",
                    "value": "before"
                  }
                },
                {
                  "line": 856,
                  "lval": "select_line_matching",
                  "rval": {
                    "type": "string",
                    "value": "$(str)"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../core/masterfiles/lib/3.6/files.cf",
          "line": 866,
          "namespace": "default",
          "name": "comment",
          "bodyType": "replace_with",
          "arguments": [
            "c"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 868,
                  "lval": "replace_value",
                  "rval": {
                    "type": "string",
                    "value": "$(c) $(match.1)"
                  }
                },
                {
                  "line": 869,
                  "lval": "occurrences",
                  "rval": {
                    "type": "string",
                    "value": "all"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../core/masterfiles/lib/3.6/files.cf",
          "line": 874,
          "namespace": "default",
          "name": "uncomment",
          "bodyType": "replace_with",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 876,
                  "lval": "replace_value",
                  "rval": {
                    "type": "string",
                    "value": "$(match.1)"
                  }
                },
                {
                  "line": 877,
                  "lval": "occurrences",
                  "rval": {
                    "type": "string",
                    "value": "all"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../core/masterfiles/lib/3.6/files.cf",
          "line": 884,
          "namespace": "default",
          "name": "secure_cp",
          "bodyType": "copy_from",
          "arguments": [
            "from",
            "server"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 886,
                  "lval": "source",
                  "rval": {
                    "type": "string",
                    "value": "$(from)"
                  }
                },
                {
                  "line": 887,
                  "lval": "servers",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "$(server)"
                      }
                    ]
                  }
                },
                {
                  "line": 888,
                  "lval": "compare",
                  "rval": {
                    "type": "string",
                    "value": "digest"
                  }
                },
                {
                  "line": 889,
                  "lval": "encrypt",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                },
                {
                  "line": 890,
                  "lval": "verify",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../core/masterfiles/lib/3.6/files.cf",
          "line": 895,
          "namespace": "default",
          "name": "remote_cp",
          "bodyType": "copy_from",
          "arguments": [
            "from",
            "server"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 897,
                  "lval": "servers",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "$(server)"
                      }
                    ]
                  }
                },
                {
                  "line": 898,
                  "lval": "source",
                  "rval": {
                    "type": "string",
                    "value": "$(from)"
                  }
                },
                {
                  "line": 899,
                  "lval": "compare",
                  "rval": {
                    "type": "string",
                    "value": "mtime"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../core/masterfiles/lib/3.6/files.cf",
          "line": 904,
          "namespace": "default",
          "name": "remote_dcp",
          "bodyType": "copy_from",
          "arguments": [
            "from",
            "server"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 906,
                  "lval": "servers",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "$(server)"
                      }
                    ]
                  }
                },
                {
                  "line": 907,
                  "lval": "source",
                  "rval": {
                    "type": "string",
                    "value": "$(from)"
                  }
                },
                {
                  "line": 908,
                  "lval": "compare",
                  "rval": {
                    "type": "string",
                    "value": "digest"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../core/masterfiles/lib/3.6/files.cf",
          "line": 913,
          "namespace": "default",
          "name": "local_cp",
          "bodyType": "copy_from",
          "arguments": [
            "from"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 915,
                  "lval": "source",
                  "rval": {
                    "type": "string",
                    "value": "$(from)"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../core/masterfiles/lib/3.6/files.cf",
          "line": 920,
          "namespace": "default",
          "name": "local_dcp",
          "bodyType": "copy_from",
          "arguments": [
            "from"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 922,
                  "lval": "source",
                  "rval": {
                    "type": "string",
                    "value": "$(from)"
                  }
                },
                {
                  "line": 923,
                  "lval": "compare",
                  "rval": {
                    "type": "string",
                    "value": "digest"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../core/masterfiles/lib/3.6/files.cf",
          "line": 928,
          "namespace": "default",
          "name": "perms_cp",
          "bodyType": "copy_from",
          "arguments": [
            "from"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 930,
                  "lval": "source",
                  "rval": {
                    "type": "string",
                    "value": "$(from)"
                  }
                },
                {
                  "line": 931,
                  "lval": "preserve",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../core/masterfiles/lib/3.6/files.cf",
          "line": 934,
          "namespace": "default",
          "name": "backup_local_cp",
          "bodyType": "copy_from",
          "arguments": [
            "from"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 937,
                  "lval": "source",
                  "rval": {
                    "type": "string",
                    "value": "$(from)"
                  }
                },
                {
                  "line": 938,
                  "lval": "copy_backup",
                  "rval": {
                    "type": "string",
                    "value": "timestamp"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../core/masterfiles/lib/3.6/files.cf",
          "line": 945,
          "namespace": "default",
          "name": "seed_cp",
          "bodyType": "copy_from",
          "arguments": [
            "from"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 947,
                  "lval": "source",
                  "rval": {
                    "type": "string",
                    "value": "$(from)"
                  }
                },
                {
                  "line": 948,
                  "lval": "compare",
                  "rval": {
                    "type": "string",
                    "value": "exists"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../core/masterfiles/lib/3.6/files.cf",
          "line": 953,
          "namespace": "default",
          "name": "sync_cp",
          "bodyType": "copy_from",
          "arguments": [
            "from",
            "server"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 955,
                  "lval": "servers",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "$(server)"
                      }
                    ]
                  }
                },
                {
                  "line": 956,
                  "lval": "source",
                  "rval": {
                    "type": "string",
                    "value": "$(from)"
                  }
                },
                {
                  "line": 957,
                  "lval": "purge",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                },
                {
                  "line": 958,
                  "lval": "preserve",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                },
                {
                  "line": 959,
                  "lval": "type_check",
                  "rval": {
                    "type": "string",
                    "value": "false"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../core/masterfiles/lib/3.6/files.cf",
          "line": 964,
          "namespace": "default",
          "name": "no_backup_cp",
          "bodyType": "copy_from",
          "arguments": [
            "from"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 966,
                  "lval": "source",
                  "rval": {
                    "type": "string",
                    "value": "$(from)"
                  }
                },
                {
                  "line": 967,
                  "lval": "copy_backup",
                  "rval": {
                    "type": "string",
                    "value": "false"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../core/masterfiles/lib/3.6/files.cf",
          "line": 972,
          "namespace": "default",
          "name": "no_backup_dcp",
          "bodyType": "copy_from",
          "arguments": [
            "from"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 974,
                  "lval": "source",
                  "rval": {
                    "type": "string",
                    "value": "$(from)"
                  }
                },
                {
                  "line": 975,
                  "lval": "copy_backup",
                  "rval": {
                    "type": "string",
                    "value": "false"
                  }
                },
                {
                  "line": 976,
                  "lval": "compare",
                  "rval": {
                    "type": "string",
                    "value": "digest"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../core/masterfiles/lib/3.6/files.cf",
          "line": 981,
          "namespace": "default",
          "name": "no_backup_rcp",
          "bodyType": "copy_from",
          "arguments": [
            "from",
            "server"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 983,
                  "lval": "servers",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "$(server)"
                      }
                    ]
                  }
                },
                {
                  "line": 984,
                  "lval": "source",
                  "rval": {
                    "type": "string",
                    "value": "$(from)"
                  }
                },
                {
                  "line": 985,
                  "lval": "compare",
                  "rval": {
                    "type": "string",
                    "value": "mtime"
                  }
                },
                {
                  "line": 986,
                  "lval": "copy_backup",
                  "rval": {
                    "type": "string",
                    "value": "false"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../core/masterfiles/lib/3.6/files.cf",
          "line": 993,
          "namespace": "default",
          "name": "ln_s",
          "bodyType": "link_from",
          "arguments": [
            "x"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 995,
                  "lval": "link_type",
                  "rval": {
                    "type": "string",
                    "value": "symlink"
                  }
                },
                {
                  "line": 996,
                  "lval": "source",
                  "rval": {
                    "type": "string",
                    "value": "$(x)"
                  }
                },
                {
                  "line": 997,
                  "lval": "when_no_source",
                  "rval": {
                    "type": "string",
                    "value": "force"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../core/masterfiles/lib/3.6/files.cf",
          "line": 1002,
          "namespace": "default",
          "name": "linkchildren",
          "bodyType": "link_from",
          "arguments": [
            "tofile"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1004,
                  "lval": "source",
                  "rval": {
                    "type": "string",
                    "value": "$(tofile)"
                  }
                },
                {
                  "line": 1005,
                  "lval": "link_type",
                  "rval": {
                    "type": "string",
                    "value": "symlink"
                  }
                },
                {
                  "line": 1006,
                  "lval": "when_no_source",
                  "rval": {
                    "type": "string",
                    "value": "force"
                  }
                },
                {
                  "line": 1007,
                  "lval": "link_children",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                },
                {
                  "line": 1008,
                  "lval": "when_linking_children",
                  "rval": {
                    "type": "string",
                    "value": "if_no_such_file"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../core/masterfiles/lib/3.6/files.cf",
          "line": 1015,
          "namespace": "default",
          "name": "m",
          "bodyType": "perms",
          "arguments": [
            "mode"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1017,
                  "lval": "mode",
                  "rval": {
                    "type": "string",
                    "value": "$(mode)"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../core/masterfiles/lib/3.6/files.cf",
          "line": 1022,
          "namespace": "default",
          "name": "mo",
          "bodyType": "perms",
          "arguments": [
            "mode",
            "user"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1024,
                  "lval": "owners",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "$(user)"
                      }
                    ]
                  }
                },
                {
                  "line": 1025,
                  "lval": "mode",
                  "rval": {
                    "type": "string",
                    "value": "$(mode)"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../core/masterfiles/lib/3.6/files.cf",
          "line": 1030,
          "namespace": "default",
          "name": "mog",
          "bodyType": "perms",
          "arguments": [
            "mode",
            "user",
            "group"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1032,
                  "lval": "owners",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "$(user)"
                      }
                    ]
                  }
                },
                {
                  "line": 1033,
                  "lval": "groups",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "$(group)"
                      }
                    ]
                  }
                },
                {
                  "line": 1034,
                  "lval": "mode",
                  "rval": {
                    "type": "string",
                    "value": "$(mode)"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../core/masterfiles/lib/3.6/files.cf",
          "line": 1039,
          "namespace": "default",
          "name": "og",
          "bodyType": "perms",
          "arguments": [
            "u",
            "g"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1041,
                  "lval": "owners",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "$(u)"
                      }
                    ]
                  }
                },
                {
                  "line": 1042,
                  "lval": "groups",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "$(g)"
                      }
                    ]
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../core/masterfiles/lib/3.6/files.cf",
          "line": 1047,
          "namespace": "default",
          "name": "owner",
          "bodyType": "perms",
          "arguments": [
            "user"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1049,
                  "lval": "owners",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "$(user)"
                      }
                    ]
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../core/masterfiles/lib/3.6/files.cf",
          "line": 1056,
          "namespace": "default",
          "name": "access_generic",
          "bodyType": "acl",
          "arguments": [
            "acl"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1060,
                  "lval": "acl_method",
                  "rval": {
                    "type": "string",
                    "value": "overwrite"
                  }
                },
                {
                  "line": 1061,
                  "lval": "aces",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "@(acl)"
                      }
                    ]
                  }
                }
              ]
            },
            {
              "name": "windows",
              "attributes": [
                {
                  "line": 1064,
                  "lval": "acl_type",
                  "rval": {
                    "type": "string",
                    "value": "ntfs"
                  }
                }
              ]
            },
            {
              "name": "!windows",
              "attributes": [
                {
                  "line": 1067,
                  "lval": "acl_type",
                  "rval": {
                    "type": "string",
                    "value": "posix"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../core/masterfiles/lib/3.6/files.cf",
          "line": 1072,
          "namespace": "default",
          "name": "ntfs",
          "bodyType": "acl",
          "arguments": [
            "acl"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1074,
                  "lval": "acl_type",
                  "rval": {
                    "type": "string",
                    "value": "ntfs"
                  }
                },
                {
                  "line": 1075,
                  "lval": "acl_method",
                  "rval": {
                    "type": "string",
                    "value": "overwrite"
                  }
                },
                {
                  "line": 1076,
                  "lval": "aces",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "@(acl)"
                      }
                    ]
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../core/masterfiles/lib/3.6/files.cf",
          "line": 1081,
          "namespace": "default",
          "name": "strict",
          "bodyType": "acl",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1085,
                  "lval": "acl_method",
                  "rval": {
                    "type": "string",
                    "value": "overwrite"
                  }
                }
              ]
            },
            {
              "name": "windows",
              "attributes": [
                {
                  "line": 1088,
                  "lval": "aces",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "user:Administrator:rwx"
                      }
                    ]
                  }
                }
              ]
            },
            {
              "name": "!windows",
              "attributes": [
                {
                  "line": 1090,
                  "lval": "aces",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "user:root:rwx"
                      }
                    ]
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../core/masterfiles/lib/3.6/files.cf",
          "line": 1097,
          "namespace": "default",
          "name": "recurse",
          "bodyType": "depth_search",
          "arguments": [
            "d"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1100,
                  "lval": "depth",
                  "rval": {
                    "type": "string",
                    "value": "$(d)"
                  }
                },
                {
                  "line": 1101,
                  "lval": "xdev",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../core/masterfiles/lib/3.6/files.cf",
          "line": 1106,
          "namespace": "default",
          "name": "recurse_ignore",
          "bodyType": "depth_search",
          "arguments": [
            "d",
            "list"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1108,
                  "lval": "depth",
                  "rval": {
                    "type": "string",
                    "value": "$(d)"
                  }
                },
                {
                  "line": 1109,
                  "lval": "exclude_dirs",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "@(list)"
                      }
                    ]
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../core/masterfiles/lib/3.6/files.cf",
          "line": 1114,
          "namespace": "default",
          "name": "include_base",
          "bodyType": "depth_search",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1116,
                  "lval": "include_basedir",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../core/masterfiles/lib/3.6/files.cf",
          "line": 1119,
          "namespace": "default",
          "name": "recurse_with_base",
          "bodyType": "depth_search",
          "arguments": [
            "d"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1121,
                  "lval": "depth",
                  "rval": {
                    "type": "string",
                    "value": "$(d)"
                  }
                },
                {
                  "line": 1122,
                  "lval": "xdev",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                },
                {
                  "line": 1123,
                  "lval": "include_basedir",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../core/masterfiles/lib/3.6/files.cf",
          "line": 1130,
          "namespace": "default",
          "name": "tidy",
          "bodyType": "delete",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1133,
                  "lval": "dirlinks",
                  "rval": {
                    "type": "string",
                    "value": "delete"
                  }
                },
                {
                  "line": 1134,
                  "lval": "rmdirs",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../core/masterfiles/lib/3.6/files.cf",
          "line": 1141,
          "namespace": "default",
          "name": "disable",
          "bodyType": "rename",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1143,
                  "lval": "disable",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../core/masterfiles/lib/3.6/files.cf",
          "line": 1148,
          "namespace": "default",
          "name": "rotate",
          "bodyType": "rename",
          "arguments": [
            "level"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1150,
                  "lval": "rotate",
                  "rval": {
                    "type": "string",
                    "value": "$(level)"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../core/masterfiles/lib/3.6/files.cf",
          "line": 1155,
          "namespace": "default",
          "name": "to",
          "bodyType": "rename",
          "arguments": [
            "file"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1157,
                  "lval": "newname",
                  "rval": {
                    "type": "string",
                    "value": "$(file)"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../core/masterfiles/lib/3.6/files.cf",
          "line": 1164,
          "namespace": "default",
          "name": "name_age",
          "bodyType": "file_select",
          "arguments": [
            "name",
            "days"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1166,
                  "lval": "leaf_name",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "$(name)"
                      }
                    ]
                  }
                },
                {
                  "line": 1167,
                  "lval": "mtime",
                  "rval": {
                    "type": "functionCall",
                    "name": "irange",
                    "arguments": [
                      {
                        "type": "string",
                        "value": "0"
                      },
                      {
                        "type": "functionCall",
                        "name": "ago",
                        "arguments": [
                          {
                            "type": "string",
                            "value": "0"
                          },
                          {
                            "type": "string",
                            "value": "0"
                          },
                          {
                            "type": "string",
                            "value": "$(days)"
                          },
                          {
                            "type": "string",
                            "value": "0"
                          },
                          {
                            "type": "string",
                            "value": "0"
                          },
                          {
                            "type": "string",
                            "value": "0"
                          }
                        ]
                      }
                    ]
                  }
                },
                {
                  "line": 1168,
                  "lval": "file_result",
                  "rval": {
                    "type": "string",
                    "value": "mtime.leaf_name"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../core/masterfiles/lib/3.6/files.cf",
          "line": 1173,
          "namespace": "default",
          "name": "days_old",
          "bodyType": "file_select",
          "arguments": [
            "days"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1175,
                  "lval": "mtime",
                  "rval": {
                    "type": "functionCall",
                    "name": "irange",
                    "arguments": [
                      {
                        "type": "string",
                        "value": "0"
                      },
                      {
                        "type": "functionCall",
                        "name": "ago",
                        "arguments": [
                          {
                            "type": "string",
                            "value": "0"
                          },
                          {
                            "type": "string",
                            "value": "0"
                          },
                          {
                            "type": "string",
                            "value": "$(days)"
                          },
                          {
                            "type": "string",
                            "value": "0"
                          },
                          {
                            "type": "string",
                            "value": "0"
                          },
                          {
                            "type": "string",
                            "value": "0"
                          }
                        ]
                      }
                    ]
                  }
                },
                {
                  "line": 1176,
                  "lval": "file_result",
                  "rval": {
                    "type": "string",
                    "value": "mtime"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../core/masterfiles/lib/3.6/files.cf",
          "line": 1181,
          "namespace": "default",
          "name": "size_range",
          "bodyType": "file_select",
          "arguments": [
            "from",
            "to"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1183,
                  "lval": "search_size",
                  "rval": {
                    "type": "functionCall",
                    "name": "irange",
                    "arguments": [
                      {
                        "type": "string",
                        "value": "$(from)"
                      },
                      {
                        "type": "string",
                        "value": "$(to)"
                      }
                    ]
                  }
                },
                {
                  "line": 1184,
                  "lval": "file_result",
                  "rval": {
                    "type": "string",
                    "value": "size"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../core/masterfiles/lib/3.6/files.cf",
          "line": 1189,
          "namespace": "default",
          "name": "exclude",
          "bodyType": "file_select",
          "arguments": [
            "name"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1191,
                  "lval": "leaf_name",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "$(name)"
                      }
                    ]
                  }
                },
                {
                  "line": 1192,
                  "lval": "file_result",
                  "rval": {
                    "type": "string",
                    "value": "!leaf_name"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../core/masterfiles/lib/3.6/files.cf",
          "line": 1197,
          "namespace": "default",
          "name": "plain",
          "bodyType": "file_select",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1199,
                  "lval": "file_types",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "plain"
                      }
                    ]
                  }
                },
                {
                  "line": 1200,
                  "lval": "file_result",
                  "rval": {
                    "type": "string",
                    "value": "file_types"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../core/masterfiles/lib/3.6/files.cf",
          "line": 1203,
          "namespace": "default",
          "name": "dirs",
          "bodyType": "file_select",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1205,
                  "lval": "file_types",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "dir"
                      }
                    ]
                  }
                },
                {
                  "line": 1206,
                  "lval": "file_result",
                  "rval": {
                    "type": "string",
                    "value": "file_types"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../core/masterfiles/lib/3.6/files.cf",
          "line": 1211,
          "namespace": "default",
          "name": "by_name",
          "bodyType": "file_select",
          "arguments": [
            "names"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1213,
                  "lval": "leaf_name",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "@(names)"
                      }
                    ]
                  }
                },
                {
                  "line": 1214,
                  "lval": "file_result",
                  "rval": {
                    "type": "string",
                    "value": "leaf_name"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../core/masterfiles/lib/3.6/files.cf",
          "line": 1219,
          "namespace": "default",
          "name": "ex_list",
          "bodyType": "file_select",
          "arguments": [
            "names"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1221,
                  "lval": "leaf_name",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "@(names)"
                      }
                    ]
                  }
                },
                {
                  "line": 1222,
                  "lval": "file_result",
                  "rval": {
                    "type": "string",
                    "value": "!leaf_name"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../core/masterfiles/lib/3.6/files.cf",
          "line": 1227,
          "namespace": "default",
          "name": "all",
          "bodyType": "file_select",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1229,
                  "lval": "leaf_name",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": ".*"
                      }
                    ]
                  }
                },
                {
                  "line": 1230,
                  "lval": "file_result",
                  "rval": {
                    "type": "string",
                    "value": "leaf_name"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../core/masterfiles/lib/3.6/files.cf",
          "line": 1235,
          "namespace": "default",
          "name": "older_than",
          "bodyType": "file_select",
          "arguments": [
            "years",
            "months",
            "days",
            "hours",
            "minutes",
            "seconds"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1239,
                  "lval": "mtime",
                  "rval": {
                    "type": "functionCall",
                    "name": "irange",
                    "arguments": [
                      {
                        "type": "string",
                        "value": "0"
                      },
                      {
                        "type": "functionCall",
                        "name": "ago",
                        "arguments": [
                          {
                            "type": "string",
                            "value": "$(years)"
                          },
                          {
                            "type": "string",
                            "value": "$(months)"
                          },
                          {
                            "type": "string",
                            "value": "$(days)"
                          },
                          {
                            "type": "string",
                            "value": "$(hours)"
                          },
                          {
                            "type": "string",
                            "value": "$(minutes)"
                          },
                          {
                            "type": "string",
                            "value": "$(seconds)"
                          }
                        ]
                      }
                    ]
                  }
                },
                {
                  "line": 1240,
                  "lval": "file_result",
                  "rval": {
                    "type": "string",
                    "value": "mtime"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../core/masterfiles/lib/3.6/files.cf",
          "line": 1245,
          "namespace": "default",
          "name": "filetype_older_than",
          "bodyType": "file_select",
          "arguments": [
            "filetype",
            "days"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1250,
                  "lval": "file_types",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "$(filetype)"
                      }
                    ]
                  }
                },
                {
                  "line": 1251,
                  "lval": "mtime",
                  "rval": {
                    "type": "functionCall",
                    "name": "irange",
                    "arguments": [
                      {
                        "type": "string",
                        "value": "0"
                      },
                      {
                        "type": "functionCall",
                        "name": "ago",
                        "arguments": [
                          {
                            "type": "string",
                            "value": "0"
                          },
                          {
                            "type": "string",
                            "value": "0"
                          },
                          {
                            "type": "string",
                            "value": "$(days)"
                          },
                          {
                            "type": "string",
                            "value": "0"
                          },
                          {
                            "type": "string",
                            "value": "0"
                          },
                          {
                            "type": "string",
                            "value": "0"
                          }
                        ]
                      }
                    ]
                  }
                },
                {
                  "line": 1252,
                  "lval": "file_result",
                  "rval": {
                    "type": "string",
                    "value": "file_types.mtime"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../core/masterfiles/lib/3.6/files.cf",
          "line": 1257,
          "namespace": "default",
          "name": "filetypes_older_than",
          "bodyType": "file_select",
          "arguments": [
            "filetypes",
            "days"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1261,
                  "lval": "file_types",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "@(filetypes)"
                      }
                    ]
                  }
                },
                {
                  "line": 1262,
                  "lval": "mtime",
                  "rval": {
                    "type": "functionCall",
                    "name": "irange",
                    "arguments": [
                      {
                        "type": "string",
                        "value": "0"
                      },
                      {
                        "type": "functionCall",
                        "name": "ago",
                        "arguments": [
                          {
                            "type": "string",
                            "value": "0"
                          },
                          {
                            "type": "string",
                            "value": "0"
                          },
                          {
                            "type": "string",
                            "value": "$(days)"
                          },
                          {
                            "type": "string",
                            "value": "0"
                          },
                          {
                            "type": "string",
                            "value": "0"
                          },
                          {
                            "type": "string",
                            "value": "0"
                          }
                        ]
                      }
                    ]
                  }
                },
                {
                  "line": 1263,
                  "lval": "file_result",
                  "rval": {
                    "type": "string",
                    "value": "file_types.mtime"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../core/masterfiles/lib/3.6/files.cf",
          "line": 1270,
          "namespace": "default",
          "name": "detect_all_change",
          "bodyType": "changes",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1275,
                  "lval": "hash",
                  "rval": {
                    "type": "string",
                    "value": "best"
                  }
                },
                {
                  "line": 1276,
                  "lval": "report_changes",
                  "rval": {
                    "type": "string",
                    "value": "all"
                  }
                },
                {
                  "line": 1277,
                  "lval": "update_hashes",
                  "rval": {
                    "type": "string",
                    "value": "yes"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../core/masterfiles/lib/3.6/files.cf",
          "line": 1282,
          "namespace": "default",
          "name": "detect_all_change_using",
          "bodyType": "changes",
          "arguments": [
            "hash"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1290,
                  "lval": "hash",
                  "rval": {
                    "type": "string",
                    "value": "$(hash)"
                  }
                },
                {
                  "line": 1291,
                  "lval": "report_changes",
                  "rval": {
                    "type": "string",
                    "value": "all"
                  }
                },
                {
                  "line": 1292,
                  "lval": "update_hashes",
                  "rval": {
                    "type": "string",
                    "value": "yes"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../core/masterfiles/lib/3.6/files.cf",
          "line": 1297,
          "namespace": "default",
          "name": "detect_content",
          "bodyType": "changes",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1302,
                  "lval": "hash",
                  "rval": {
                    "type": "string",
                    "value": "md5"
                  }
                },
                {
                  "line": 1303,
                  "lval": "report_changes",
                  "rval": {
                    "type": "string",
                    "value": "content"
                  }
                },
                {
                  "line": 1304,
                  "lval": "update_hashes",
                  "rval": {
                    "type": "string",
                    "value": "yes"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../core/masterfiles/lib/3.6/files.cf",
          "line": 1309,
          "namespace": "default",
          "name": "detect_content_using",
          "bodyType": "changes",
          "arguments": [
            "hash"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1317,
                  "lval": "hash",
                  "rval": {
                    "type": "string",
                    "value": "$(hash)"
                  }
                },
                {
                  "line": 1318,
                  "lval": "report_changes",
                  "rval": {
                    "type": "string",
                    "value": "content"
                  }
                },
                {
                  "line": 1319,
                  "lval": "update_hashes",
                  "rval": {
                    "type": "string",
                    "value": "yes"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../core/masterfiles/lib/3.6/files.cf",
          "line": 1324,
          "namespace": "default",
          "name": "noupdate",
          "bodyType": "changes",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1327,
                  "lval": "hash",
                  "rval": {
                    "type": "string",
                    "value": "sha256"
                  }
                },
                {
                  "line": 1328,
                  "lval": "report_changes",
                  "rval": {
                    "type": "string",
                    "value": "content"
                  }
                },
                {
                  "line": 1329,
                  "lval": "update_hashes",
                  "rval": {
                    "type": "string",
                    "value": "no"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../core/masterfiles/lib/3.6/files.cf",
          "line": 1334,
          "namespace": "default",
          "name": "diff",
          "bodyType": "changes",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1337,
                  "lval": "hash",
                  "rval": {
                    "type": "string",
                    "value": "sha256"
                  }
                },
                {
                  "line": 1338,
                  "lval": "report_changes",
                  "rval": {
                    "type": "string",
                    "value": "content"
                  }
                },
                {
                  "line": 1339,
                  "lval": "report_diffs",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                },
                {
                  "line": 1340,
                  "lval": "update_hashes",
                  "rval": {
                    "type": "string",
                    "value": "yes"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../core/masterfiles/lib/3.6/files.cf",
          "line": 1345,
          "namespace": "default",
          "name": "all_changes",
          "bodyType": "changes",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1348,
                  "lval": "hash",
                  "rval": {
                    "type": "string",
                    "value": "sha256"
                  }
                },
                {
                  "line": 1349,
                  "lval": "report_changes",
                  "rval": {
                    "type": "string",
                    "value": "all"
                  }
                },
                {
                  "line": 1350,
                  "lval": "report_diffs",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                },
                {
                  "line": 1351,
                  "lval": "update_hashes",
                  "rval": {
                    "type": "string",
                    "value": "yes"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../core/masterfiles/lib/3.6/files.cf",
          "line": 1356,
          "namespace": "default",
          "name": "diff_noupdate",
          "bodyType": "changes",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1358,
                  "lval": "hash",
                  "rval": {
                    "type": "string",
                    "value": "sha256"
                  }
                },
                {
                  "line": 1359,
                  "lval": "report_changes",
                  "rval": {
                    "type": "string",
                    "value": "content"
                  }
                },
                {
                  "line": 1360,
                  "lval": "report_diffs",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                },
                {
                  "line": 1361,
                  "lval": "update_hashes",
                  "rval": {
                    "type": "string",
                    "value": "no"
                  }
                }
              ]
            }
          ]
        }
      ]
    }