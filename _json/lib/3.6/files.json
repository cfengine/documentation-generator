{
      "bundles": [
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 50,
          "namespace": "default",
          "name": "files_common",
          "bundleType": "common",
          "arguments": [],
          "promiseTypes": [
            {
              "line": 53,
              "name": "vars",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 54,
                      "promiser": "inputs",
                      "attributes": [
                        {
                          "line": 54,
                          "lval": "slist",
                          "rval": {
                            "type": "list",
                            "value": [
                              {
                                "type": "string",
                                "value": "$(this.promise_dirname)/common.cf"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 67,
          "namespace": "default",
          "name": "insert_lines",
          "bundleType": "edit_line",
          "arguments": [
            "lines"
          ],
          "promiseTypes": [
            {
              "line": 74,
              "name": "insert_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 76,
                      "promiser": "$(lines)",
                      "attributes": [
                        {
                          "line": 77,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Append lines if they don\\'t exist"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 82,
          "namespace": "default",
          "name": "insert_file",
          "bundleType": "edit_line",
          "arguments": [
            "templatefile"
          ],
          "promiseTypes": [
            {
              "line": 87,
              "name": "insert_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 89,
                      "promiser": "$(templatefile)",
                      "attributes": [
                        {
                          "line": 90,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Insert the template file into the file being edited"
                          }
                        },
                        {
                          "line": 91,
                          "lval": "insert_type",
                          "rval": {
                            "type": "string",
                            "value": "file"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 96,
          "namespace": "default",
          "name": "comment_lines_matching",
          "bundleType": "edit_line",
          "arguments": [
            "regex",
            "comment"
          ],
          "promiseTypes": [
            {
              "line": 101,
              "name": "replace_patterns",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 103,
                      "promiser": "^($(regex))$",
                      "attributes": [
                        {
                          "line": 105,
                          "lval": "replace_with",
                          "rval": {
                            "type": "functionCall",
                            "name": "comment",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(comment)"
                              }
                            ]
                          }
                        },
                        {
                          "line": 106,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Search and replace string"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 111,
          "namespace": "default",
          "name": "uncomment_lines_matching",
          "bundleType": "edit_line",
          "arguments": [
            "regex",
            "comment"
          ],
          "promiseTypes": [
            {
              "line": 117,
              "name": "replace_patterns",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 119,
                      "promiser": "^$(comment)\\s?($(regex))$",
                      "attributes": [
                        {
                          "line": 121,
                          "lval": "replace_with",
                          "rval": {
                            "type": "symbol",
                            "value": "uncomment"
                          }
                        },
                        {
                          "line": 122,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Uncomment lines matching a regular expression"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 127,
          "namespace": "default",
          "name": "comment_lines_containing",
          "bundleType": "edit_line",
          "arguments": [
            "regex",
            "comment"
          ],
          "promiseTypes": [
            {
              "line": 132,
              "name": "replace_patterns",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 134,
                      "promiser": "^((?!$(comment)).*$(regex).*)$",
                      "attributes": [
                        {
                          "line": 136,
                          "lval": "replace_with",
                          "rval": {
                            "type": "functionCall",
                            "name": "comment",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(comment)"
                              }
                            ]
                          }
                        },
                        {
                          "line": 137,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Comment out lines in a file"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 142,
          "namespace": "default",
          "name": "uncomment_lines_containing",
          "bundleType": "edit_line",
          "arguments": [
            "regex",
            "comment"
          ],
          "promiseTypes": [
            {
              "line": 148,
              "name": "replace_patterns",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 150,
                      "promiser": "^$(comment)\\s?(.*$(regex).*)$",
                      "attributes": [
                        {
                          "line": 152,
                          "lval": "replace_with",
                          "rval": {
                            "type": "symbol",
                            "value": "uncomment"
                          }
                        },
                        {
                          "line": 153,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Uncomment a line containing a fragment"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 158,
          "namespace": "default",
          "name": "delete_lines_matching",
          "bundleType": "edit_line",
          "arguments": [
            "regex"
          ],
          "promiseTypes": [
            {
              "line": 162,
              "name": "delete_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 164,
                      "promiser": "$(regex)",
                      "attributes": [
                        {
                          "line": 166,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Delete lines matching regular expressions"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 171,
          "namespace": "default",
          "name": "warn_lines_matching",
          "bundleType": "edit_line",
          "arguments": [
            "regex"
          ],
          "promiseTypes": [
            {
              "line": 175,
              "name": "delete_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 177,
                      "promiser": "$(regex)",
                      "attributes": [
                        {
                          "line": 179,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Warn about lines in a file"
                          }
                        },
                        {
                          "line": 180,
                          "lval": "action",
                          "rval": {
                            "type": "symbol",
                            "value": "warn_only"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 186,
          "namespace": "default",
          "name": "_dc_prepend_if_no_line",
          "bundleType": "edit_line",
          "arguments": [
            "string"
          ],
          "promiseTypes": [
            {
              "line": 193,
              "name": "insert_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 194,
                      "promiser": "$(string)",
                      "attributes": [
                        {
                          "line": 195,
                          "lval": "location",
                          "rval": {
                            "type": "symbol",
                            "value": "start"
                          }
                        },
                        {
                          "line": 196,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Prepend a line to the file if it doesn\\'t already exist"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 199,
          "namespace": "default",
          "name": "append_if_no_line",
          "bundleType": "edit_line",
          "arguments": [
            "str"
          ],
          "promiseTypes": [
            {
              "line": 203,
              "name": "insert_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 205,
                      "promiser": "$(str)",
                      "attributes": [
                        {
                          "line": 207,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Append a line to the file if it doesn\\'t already exist"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 212,
          "namespace": "default",
          "name": "append_if_no_lines",
          "bundleType": "edit_line",
          "arguments": [
            "list"
          ],
          "promiseTypes": [
            {
              "line": 216,
              "name": "insert_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 218,
                      "promiser": "$(list)",
                      "attributes": [
                        {
                          "line": 220,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Append lines to the file if they don\\'t already exist"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 225,
          "namespace": "default",
          "name": "replace_line_end",
          "bundleType": "edit_line",
          "arguments": [
            "start",
            "end"
          ],
          "promiseTypes": [
            {
              "line": 240,
              "name": "field_edits",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 242,
                      "promiser": "\\s*$(start)\\s.*",
                      "attributes": [
                        {
                          "line": 243,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Replace lines with $(this.start) and $(this.end)"
                          }
                        },
                        {
                          "line": 244,
                          "lval": "edit_field",
                          "rval": {
                            "type": "functionCall",
                            "name": "line",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "(^|\\s)$(start)\\s*"
                              },
                              {
                                "type": "string",
                                "value": "2"
                              },
                              {
                                "type": "string",
                                "value": "$(end)"
                              },
                              {
                                "type": "string",
                                "value": "set"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 249,
          "namespace": "default",
          "name": "append_to_line_end",
          "bundleType": "edit_line",
          "arguments": [
            "start",
            "end"
          ],
          "promiseTypes": [
            {
              "line": 275,
              "name": "field_edits",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 277,
                      "promiser": "\\s*$(start)\\s.*",
                      "attributes": [
                        {
                          "line": 278,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Append lines with $(this.start) and $(this.end)"
                          }
                        },
                        {
                          "line": 279,
                          "lval": "edit_field",
                          "rval": {
                            "type": "functionCall",
                            "name": "line",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "(^|\\s)$(start)\\s*"
                              },
                              {
                                "type": "string",
                                "value": "2"
                              },
                              {
                                "type": "string",
                                "value": "$(end)"
                              },
                              {
                                "type": "string",
                                "value": "append"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 284,
          "namespace": "default",
          "name": "regex_replace",
          "bundleType": "edit_line",
          "arguments": [
            "find",
            "replace"
          ],
          "promiseTypes": [
            {
              "line": 290,
              "name": "replace_patterns",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 292,
                      "promiser": "$(find)",
                      "attributes": [
                        {
                          "line": 293,
                          "lval": "replace_with",
                          "rval": {
                            "type": "functionCall",
                            "name": "value",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(replace)"
                              }
                            ]
                          }
                        },
                        {
                          "line": 294,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Search and replace string"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 299,
          "namespace": "default",
          "name": "resolvconf",
          "bundleType": "edit_line",
          "arguments": [
            "search",
            "list"
          ],
          "promiseTypes": [
            {
              "line": 309,
              "name": "delete_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 311,
                      "promiser": "search.*",
                      "attributes": [
                        {
                          "line": 311,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Reset search lines from resolver"
                          }
                        }
                      ]
                    },
                    {
                      "line": 312,
                      "promiser": "nameserver.*",
                      "attributes": [
                        {
                          "line": 312,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Reset nameservers in resolver"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 314,
              "name": "insert_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 316,
                      "promiser": "search $(search)",
                      "attributes": [
                        {
                          "line": 316,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Add search domains to resolver"
                          }
                        }
                      ]
                    },
                    {
                      "line": 317,
                      "promiser": "nameserver $(list)",
                      "attributes": [
                        {
                          "line": 317,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Add name servers to resolver"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 322,
          "namespace": "default",
          "name": "resolvconf_o",
          "bundleType": "edit_line",
          "arguments": [
            "search",
            "list",
            "options"
          ],
          "promiseTypes": [
            {
              "line": 334,
              "name": "delete_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 336,
                      "promiser": "search.*",
                      "attributes": [
                        {
                          "line": 336,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Reset search lines from resolver"
                          }
                        }
                      ]
                    },
                    {
                      "line": 337,
                      "promiser": "nameserver.*",
                      "attributes": [
                        {
                          "line": 337,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Reset nameservers in resolver"
                          }
                        }
                      ]
                    },
                    {
                      "line": 338,
                      "promiser": "options.*",
                      "attributes": [
                        {
                          "line": 338,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Reset options in resolver"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 340,
              "name": "insert_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 342,
                      "promiser": "search $(search)",
                      "attributes": [
                        {
                          "line": 342,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Add search domains to resolver"
                          }
                        }
                      ]
                    },
                    {
                      "line": 343,
                      "promiser": "nameserver $(list)",
                      "attributes": [
                        {
                          "line": 343,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Add name servers to resolver"
                          }
                        }
                      ]
                    },
                    {
                      "line": 344,
                      "promiser": "options $(options)",
                      "attributes": [
                        {
                          "line": 344,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Add options to resolver"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 349,
          "namespace": "default",
          "name": "manage_variable_values_ini",
          "bundleType": "edit_line",
          "arguments": [
            "tab",
            "sectionName"
          ],
          "promiseTypes": [
            {
              "line": 364,
              "name": "vars",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 365,
                      "promiser": "index",
                      "attributes": [
                        {
                          "line": 365,
                          "lval": "slist",
                          "rval": {
                            "type": "functionCall",
                            "name": "getindices",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(tab)[$(sectionName)]"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 368,
                      "promiser": "cindex[$(index)]",
                      "attributes": [
                        {
                          "line": 368,
                          "lval": "string",
                          "rval": {
                            "type": "functionCall",
                            "name": "canonify",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(index)"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 370,
              "name": "classes",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 371,
                      "promiser": "edit_$(cindex[$(index)])",
                      "attributes": [
                        {
                          "line": 371,
                          "lval": "not",
                          "rval": {
                            "type": "functionCall",
                            "name": "strcmp",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$($(tab)[$(sectionName)][$(index)])"
                              },
                              {
                                "type": "string",
                                "value": "dontchange"
                              }
                            ]
                          }
                        },
                        {
                          "line": 372,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Create conditions to make changes"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 374,
              "name": "field_edits",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 377,
                      "promiser": "#+\\s*$(index)\\s*=.*",
                      "attributes": [
                        {
                          "line": 378,
                          "lval": "select_region",
                          "rval": {
                            "type": "functionCall",
                            "name": "INI_section",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(sectionName)"
                              }
                            ]
                          }
                        },
                        {
                          "line": 379,
                          "lval": "edit_field",
                          "rval": {
                            "type": "functionCall",
                            "name": "col",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "="
                              },
                              {
                                "type": "string",
                                "value": "1"
                              },
                              {
                                "type": "string",
                                "value": "$(index)"
                              },
                              {
                                "type": "string",
                                "value": "set"
                              }
                            ]
                          }
                        },
                        {
                          "line": 380,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "string",
                            "value": "edit_$(cindex[$(index)])"
                          }
                        }
                      ]
                    },
                    {
                      "line": 383,
                      "promiser": "$(index)\\s*=.*",
                      "attributes": [
                        {
                          "line": 384,
                          "lval": "edit_field",
                          "rval": {
                            "type": "functionCall",
                            "name": "col",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "="
                              },
                              {
                                "type": "string",
                                "value": "2"
                              },
                              {
                                "type": "string",
                                "value": "$($(tab)[$(sectionName)][$(index)])"
                              },
                              {
                                "type": "string",
                                "value": "set"
                              }
                            ]
                          }
                        },
                        {
                          "line": 385,
                          "lval": "select_region",
                          "rval": {
                            "type": "functionCall",
                            "name": "INI_section",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(sectionName)"
                              }
                            ]
                          }
                        },
                        {
                          "line": 386,
                          "lval": "classes",
                          "rval": {
                            "type": "functionCall",
                            "name": "if_ok",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "manage_variable_values_ini_not_$(cindex[$(index)])"
                              }
                            ]
                          }
                        },
                        {
                          "line": 387,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "string",
                            "value": "edit_$(cindex[$(index)])"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 389,
              "name": "delete_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 390,
                      "promiser": ".*",
                      "attributes": [
                        {
                          "line": 391,
                          "lval": "select_region",
                          "rval": {
                            "type": "functionCall",
                            "name": "INI_section",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(sectionName)"
                              }
                            ]
                          }
                        },
                        {
                          "line": 392,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Remove all entries in the region so there are no extra entries"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 394,
              "name": "insert_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 395,
                      "promiser": "[$(sectionName)]",
                      "attributes": [
                        {
                          "line": 396,
                          "lval": "location",
                          "rval": {
                            "type": "symbol",
                            "value": "start"
                          }
                        },
                        {
                          "line": 397,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Insert lines"
                          }
                        }
                      ]
                    },
                    {
                      "line": 399,
                      "promiser": "$(index)=$($(tab)[$(sectionName)][$(index)])",
                      "attributes": [
                        {
                          "line": 400,
                          "lval": "select_region",
                          "rval": {
                            "type": "functionCall",
                            "name": "INI_section",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(sectionName)"
                              }
                            ]
                          }
                        },
                        {
                          "line": 401,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "string",
                            "value": "!manage_variable_values_ini_not_$(cindex[$(index)]).edit_$(cindex[$(index)])"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 407,
          "namespace": "default",
          "name": "set_variable_values_ini",
          "bundleType": "edit_line",
          "arguments": [
            "tab",
            "sectionName"
          ],
          "promiseTypes": [
            {
              "line": 421,
              "name": "vars",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 422,
                      "promiser": "index",
                      "attributes": [
                        {
                          "line": 422,
                          "lval": "slist",
                          "rval": {
                            "type": "functionCall",
                            "name": "getindices",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(tab)[$(sectionName)]"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 425,
                      "promiser": "cindex[$(index)]",
                      "attributes": [
                        {
                          "line": 425,
                          "lval": "string",
                          "rval": {
                            "type": "functionCall",
                            "name": "canonify",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(index)"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 427,
              "name": "classes",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 428,
                      "promiser": "edit_$(cindex[$(index)])",
                      "attributes": [
                        {
                          "line": 428,
                          "lval": "not",
                          "rval": {
                            "type": "functionCall",
                            "name": "strcmp",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$($(tab)[$(sectionName)][$(index)])"
                              },
                              {
                                "type": "string",
                                "value": "dontchange"
                              }
                            ]
                          }
                        },
                        {
                          "line": 429,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Create conditions to make changes"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 431,
              "name": "field_edits",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 434,
                      "promiser": "#+\\s*$(index)\\s*=.*",
                      "attributes": [
                        {
                          "line": 435,
                          "lval": "select_region",
                          "rval": {
                            "type": "functionCall",
                            "name": "INI_section",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(sectionName)"
                              }
                            ]
                          }
                        },
                        {
                          "line": 436,
                          "lval": "edit_field",
                          "rval": {
                            "type": "functionCall",
                            "name": "col",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "="
                              },
                              {
                                "type": "string",
                                "value": "1"
                              },
                              {
                                "type": "string",
                                "value": "$(index)"
                              },
                              {
                                "type": "string",
                                "value": "set"
                              }
                            ]
                          }
                        },
                        {
                          "line": 437,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "string",
                            "value": "edit_$(cindex[$(index)])"
                          }
                        }
                      ]
                    },
                    {
                      "line": 440,
                      "promiser": "$(index)\\s*=.*",
                      "attributes": [
                        {
                          "line": 441,
                          "lval": "edit_field",
                          "rval": {
                            "type": "functionCall",
                            "name": "col",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "="
                              },
                              {
                                "type": "string",
                                "value": "2"
                              },
                              {
                                "type": "string",
                                "value": "$($(tab)[$(sectionName)][$(index)])"
                              },
                              {
                                "type": "string",
                                "value": "set"
                              }
                            ]
                          }
                        },
                        {
                          "line": 442,
                          "lval": "select_region",
                          "rval": {
                            "type": "functionCall",
                            "name": "INI_section",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(sectionName)"
                              }
                            ]
                          }
                        },
                        {
                          "line": 443,
                          "lval": "classes",
                          "rval": {
                            "type": "functionCall",
                            "name": "if_ok",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "set_variable_values_ini_not_$(cindex[$(index)])"
                              }
                            ]
                          }
                        },
                        {
                          "line": 444,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "string",
                            "value": "edit_$(cindex[$(index)])"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 446,
              "name": "insert_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 447,
                      "promiser": "[$(sectionName)]",
                      "attributes": [
                        {
                          "line": 448,
                          "lval": "location",
                          "rval": {
                            "type": "symbol",
                            "value": "start"
                          }
                        },
                        {
                          "line": 449,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Insert lines"
                          }
                        }
                      ]
                    },
                    {
                      "line": 451,
                      "promiser": "$(index)=$($(tab)[$(sectionName)][$(index)])",
                      "attributes": [
                        {
                          "line": 452,
                          "lval": "select_region",
                          "rval": {
                            "type": "functionCall",
                            "name": "INI_section",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(sectionName)"
                              }
                            ]
                          }
                        },
                        {
                          "line": 453,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "string",
                            "value": "!set_variable_values_ini_not_$(cindex[$(index)]).edit_$(cindex[$(index)])"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 458,
          "namespace": "default",
          "name": "_dc_insert_ini_section",
          "bundleType": "edit_line",
          "arguments": [
            "name",
            "config"
          ],
          "promiseTypes": [
            {
              "line": 473,
              "name": "vars",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 474,
                      "promiser": "k",
                      "attributes": [
                        {
                          "line": 474,
                          "lval": "slist",
                          "rval": {
                            "type": "functionCall",
                            "name": "getindices",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(config)"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 476,
              "name": "insert_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 477,
                      "promiser": "[$(name)]",
                      "attributes": [
                        {
                          "line": 478,
                          "lval": "location",
                          "rval": {
                            "type": "symbol",
                            "value": "start"
                          }
                        },
                        {
                          "line": 479,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Prepend a line to the file if it doesn\\'t already exist"
                          }
                        }
                      ]
                    },
                    {
                      "line": 481,
                      "promiser": "$(k)=$($(config)[$(k)])",
                      "attributes": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 485,
          "namespace": "default",
          "name": "set_quoted_values",
          "bundleType": "edit_line",
          "arguments": [
            "v"
          ],
          "promiseTypes": [
            {
              "line": 511,
              "name": "meta",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 512,
                      "promiser": "tags",
                      "attributes": [
                        {
                          "line": 518,
                          "lval": "slist",
                          "rval": {
                            "type": "list",
                            "value": [
                              {
                                "type": "string",
                                "value": "deprecated=3.6.0"
                              },
                              {
                                "type": "string",
                                "value": "deprecation-reason=Generic reimplementation"
                              },
                              {
                                "type": "string",
                                "value": "replaced-by=set_line_based"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 520,
              "name": "vars",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 521,
                      "promiser": "index",
                      "attributes": [
                        {
                          "line": 521,
                          "lval": "slist",
                          "rval": {
                            "type": "functionCall",
                            "name": "getindices",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(v)"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 524,
                      "promiser": "cindex[$(index)]",
                      "attributes": [
                        {
                          "line": 524,
                          "lval": "string",
                          "rval": {
                            "type": "functionCall",
                            "name": "canonify",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(index)"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 526,
              "name": "field_edits",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 528,
                      "promiser": "#+\\s*$(index)\\s*=.*",
                      "attributes": [
                        {
                          "line": 529,
                          "lval": "edit_field",
                          "rval": {
                            "type": "functionCall",
                            "name": "col",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "="
                              },
                              {
                                "type": "string",
                                "value": "1"
                              },
                              {
                                "type": "string",
                                "value": "$(index)"
                              },
                              {
                                "type": "string",
                                "value": "set"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 532,
                      "promiser": "\\s*$(index)\\s*=.*",
                      "attributes": [
                        {
                          "line": 533,
                          "lval": "edit_field",
                          "rval": {
                            "type": "functionCall",
                            "name": "col",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "="
                              },
                              {
                                "type": "string",
                                "value": "2"
                              },
                              {
                                "type": "string",
                                "value": "\\\"$($(v)[$(index)])\\\""
                              },
                              {
                                "type": "string",
                                "value": "set"
                              }
                            ]
                          }
                        },
                        {
                          "line": 534,
                          "lval": "classes",
                          "rval": {
                            "type": "functionCall",
                            "name": "if_ok",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(cindex[$(index)])_in_file"
                              }
                            ]
                          }
                        },
                        {
                          "line": 535,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Match a line starting like key = something"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 537,
              "name": "insert_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 538,
                      "promiser": "$(index)=\"$($(v)[$(index)])\"",
                      "attributes": [
                        {
                          "line": 539,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Insert a variable definition"
                          }
                        },
                        {
                          "line": 540,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "string",
                            "value": "!$(cindex[$(index)])_in_file"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 545,
          "namespace": "default",
          "name": "set_variable_values",
          "bundleType": "edit_line",
          "arguments": [
            "v"
          ],
          "promiseTypes": [
            {
              "line": 571,
              "name": "meta",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 572,
                      "promiser": "tags",
                      "attributes": [
                        {
                          "line": 578,
                          "lval": "slist",
                          "rval": {
                            "type": "list",
                            "value": [
                              {
                                "type": "string",
                                "value": "deprecated=3.6.0"
                              },
                              {
                                "type": "string",
                                "value": "deprecation-reason=Generic reimplementation"
                              },
                              {
                                "type": "string",
                                "value": "replaced-by=set_line_based"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 580,
              "name": "vars",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 582,
                      "promiser": "index",
                      "attributes": [
                        {
                          "line": 582,
                          "lval": "slist",
                          "rval": {
                            "type": "functionCall",
                            "name": "getindices",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(v)"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 586,
                      "promiser": "cindex[$(index)]",
                      "attributes": [
                        {
                          "line": 586,
                          "lval": "string",
                          "rval": {
                            "type": "functionCall",
                            "name": "canonify",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(index)"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 587,
                      "promiser": "cv",
                      "attributes": [
                        {
                          "line": 587,
                          "lval": "string",
                          "rval": {
                            "type": "functionCall",
                            "name": "canonify",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(v)"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 589,
              "name": "field_edits",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 593,
                      "promiser": "\\s*$(index)\\s*=.*",
                      "attributes": [
                        {
                          "line": 595,
                          "lval": "edit_field",
                          "rval": {
                            "type": "functionCall",
                            "name": "col",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "\\s*$(index)\\s*="
                              },
                              {
                                "type": "string",
                                "value": "2"
                              },
                              {
                                "type": "string",
                                "value": "$($(v)[$(index)])"
                              },
                              {
                                "type": "string",
                                "value": "set"
                              }
                            ]
                          }
                        },
                        {
                          "line": 596,
                          "lval": "classes",
                          "rval": {
                            "type": "functionCall",
                            "name": "if_ok",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(cv)_$(cindex[$(index)])_in_file"
                              }
                            ]
                          }
                        },
                        {
                          "line": 597,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Match a line starting like key = something"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 599,
              "name": "insert_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 601,
                      "promiser": "$(index)=$($(v)[$(index)])",
                      "attributes": [
                        {
                          "line": 603,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Insert a variable definition"
                          }
                        },
                        {
                          "line": 604,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "string",
                            "value": "!$(cv)_$(cindex[$(index)])_in_file"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 607,
          "namespace": "default",
          "name": "set_config_values",
          "bundleType": "edit_line",
          "arguments": [
            "v"
          ],
          "promiseTypes": [
            {
              "line": 620,
              "name": "meta",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 621,
                      "promiser": "tags",
                      "attributes": [
                        {
                          "line": 627,
                          "lval": "slist",
                          "rval": {
                            "type": "list",
                            "value": [
                              {
                                "type": "string",
                                "value": "deprecated=3.6.0"
                              },
                              {
                                "type": "string",
                                "value": "deprecation-reason=Generic reimplementation"
                              },
                              {
                                "type": "string",
                                "value": "replaced-by=set_line_based"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 629,
              "name": "vars",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 630,
                      "promiser": "index",
                      "attributes": [
                        {
                          "line": 630,
                          "lval": "slist",
                          "rval": {
                            "type": "functionCall",
                            "name": "getindices",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(v)"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 633,
                      "promiser": "cindex[$(index)]",
                      "attributes": [
                        {
                          "line": 633,
                          "lval": "string",
                          "rval": {
                            "type": "functionCall",
                            "name": "canonify",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(index)"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 636,
                      "promiser": "ev[$(index)]",
                      "attributes": [
                        {
                          "line": 636,
                          "lval": "string",
                          "rval": {
                            "type": "functionCall",
                            "name": "escape",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$($(v)[$(index)])"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 639,
                      "promiser": "index_comment_matches_$(cindex[$(index)])",
                      "attributes": [
                        {
                          "line": 639,
                          "lval": "int",
                          "rval": {
                            "type": "functionCall",
                            "name": "countlinesmatching",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "^\\s*#\\s*($(index)\\s+.*|$(index))$"
                              },
                              {
                                "type": "string",
                                "value": "$(edit.filename)"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 642,
              "name": "classes",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 644,
                      "promiser": "line_exists_$(cindex[$(index)])",
                      "attributes": [
                        {
                          "line": 644,
                          "lval": "expression",
                          "rval": {
                            "type": "functionCall",
                            "name": "regline",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "^\\s*($(index)\\s.*|$(index))$"
                              },
                              {
                                "type": "string",
                                "value": "$(edit.filename)"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 647,
                      "promiser": "multiple_comments_$(cindex[$(index)])",
                      "attributes": [
                        {
                          "line": 647,
                          "lval": "expression",
                          "rval": {
                            "type": "functionCall",
                            "name": "isgreaterthan",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(index_comment_matches_$(cindex[$(index)]))"
                              },
                              {
                                "type": "string",
                                "value": "1"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 650,
              "name": "replace_patterns",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 653,
                      "promiser": "^\\s*#\\s*($(index)\\s+.*|$(index))$",
                      "attributes": [
                        {
                          "line": 654,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Uncommented the value $(index)"
                          }
                        },
                        {
                          "line": 655,
                          "lval": "replace_with",
                          "rval": {
                            "type": "functionCall",
                            "name": "value",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(index) $($(v)[$(index)])"
                              }
                            ]
                          }
                        },
                        {
                          "line": 656,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "string",
                            "value": "!line_exists_$(cindex[$(index)]).!replace_attempted_$(cindex[$(index)]).!multiple_comments_$(cindex[$(index)])"
                          }
                        },
                        {
                          "line": 657,
                          "lval": "classes",
                          "rval": {
                            "type": "functionCall",
                            "name": "always",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "uncommented_$(cindex[$(index)])"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 661,
                      "promiser": "^\\s*($(index)\\s+(?!$(ev[$(index)])$).*|$(index))$",
                      "attributes": [
                        {
                          "line": 662,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Correct the value $(index)"
                          }
                        },
                        {
                          "line": 663,
                          "lval": "replace_with",
                          "rval": {
                            "type": "functionCall",
                            "name": "value",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(index) $($(v)[$(index)])"
                              }
                            ]
                          }
                        },
                        {
                          "line": 664,
                          "lval": "classes",
                          "rval": {
                            "type": "functionCall",
                            "name": "always",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "replace_attempted_$(cindex[$(index)])"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 666,
              "name": "insert_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 670,
                      "promiser": "$(index) $($(v)[$(index)])",
                      "attributes": [
                        {
                          "line": 671,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Insert the value, marker exists $(index)"
                          }
                        },
                        {
                          "line": 672,
                          "lval": "location",
                          "rval": {
                            "type": "functionCall",
                            "name": "after",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "^\\s*#\\s*($(index)\\s+.*|$(index))$"
                              }
                            ]
                          }
                        },
                        {
                          "line": 673,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "string",
                            "value": "replace_attempted_$(cindex[$(index)]).multiple_comments_$(cindex[$(index)])"
                          }
                        }
                      ]
                    },
                    {
                      "line": 677,
                      "promiser": "$(index) $($(v)[$(index)])",
                      "attributes": [
                        {
                          "line": 678,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Insert the value, marker doesn\\'t exist $(index)"
                          }
                        },
                        {
                          "line": 679,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "string",
                            "value": "replace_attempted_$(cindex[$(index)]).!multiple_comments_$(cindex[$(index)])"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 683,
          "namespace": "default",
          "name": "set_line_based",
          "bundleType": "edit_line",
          "arguments": [
            "v",
            "sep",
            "bp",
            "kp",
            "cp"
          ],
          "promiseTypes": [
            {
              "line": 717,
              "name": "meta",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 718,
                      "promiser": "tags",
                      "attributes": [
                        {
                          "line": 726,
                          "lval": "slist",
                          "rval": {
                            "type": "list",
                            "value": [
                              {
                                "type": "string",
                                "value": "replaces=set_config_values"
                              },
                              {
                                "type": "string",
                                "value": "replaces=set_config_values_matching"
                              },
                              {
                                "type": "string",
                                "value": "replaces=set_variable_values"
                              },
                              {
                                "type": "string",
                                "value": "replaces=set_quoted_values"
                              },
                              {
                                "type": "string",
                                "value": "replaces=maintain_key_values"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 728,
              "name": "vars",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 729,
                      "promiser": "vkeys",
                      "attributes": [
                        {
                          "line": 729,
                          "lval": "slist",
                          "rval": {
                            "type": "functionCall",
                            "name": "getindices",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(v)"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 730,
                      "promiser": "i",
                      "attributes": [
                        {
                          "line": 730,
                          "lval": "slist",
                          "rval": {
                            "type": "functionCall",
                            "name": "grep",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(kp)"
                              },
                              {
                                "type": "string",
                                "value": "vkeys"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 733,
                      "promiser": "ci[$(i)]",
                      "attributes": [
                        {
                          "line": 733,
                          "lval": "string",
                          "rval": {
                            "type": "functionCall",
                            "name": "canonify",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(i)"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 736,
                      "promiser": "ev[$(i)]",
                      "attributes": [
                        {
                          "line": 736,
                          "lval": "string",
                          "rval": {
                            "type": "functionCall",
                            "name": "escape",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$($(v)[$(i)])"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 739,
                      "promiser": "comment_matches_$(ci[$(i)])",
                      "attributes": [
                        {
                          "line": 741,
                          "lval": "int",
                          "rval": {
                            "type": "functionCall",
                            "name": "countlinesmatching",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "^$(cp)($(i)$(bp).*|$(i))$"
                              },
                              {
                                "type": "string",
                                "value": "$(edit.filename)"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 744,
              "name": "classes",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 746,
                      "promiser": "exists_$(ci[$(i)])",
                      "attributes": [
                        {
                          "line": 748,
                          "lval": "expression",
                          "rval": {
                            "type": "functionCall",
                            "name": "regline",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "^\\s*($(i)$(bp).*|$(i))$"
                              },
                              {
                                "type": "string",
                                "value": "$(edit.filename)"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 751,
                      "promiser": "multiple_comments_$(ci[$(i)])",
                      "attributes": [
                        {
                          "line": 753,
                          "lval": "expression",
                          "rval": {
                            "type": "functionCall",
                            "name": "isgreaterthan",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(comment_matches_$(ci[$(i)]))"
                              },
                              {
                                "type": "string",
                                "value": "1"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 756,
              "name": "replace_patterns",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 759,
                      "promiser": "^$(cp)($(i)$(bp).*|$(i))$",
                      "attributes": [
                        {
                          "line": 760,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Uncommented the value $(i)"
                          }
                        },
                        {
                          "line": 761,
                          "lval": "replace_with",
                          "rval": {
                            "type": "functionCall",
                            "name": "value",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(i)$(sep)$($(v)[$(i)])"
                              }
                            ]
                          }
                        },
                        {
                          "line": 762,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "string",
                            "value": "!exists_$(ci[$(i)]).!replace_attempted_$(ci[$(i)]).!multiple_comments_$(ci[$(i)])"
                          }
                        },
                        {
                          "line": 763,
                          "lval": "classes",
                          "rval": {
                            "type": "functionCall",
                            "name": "always",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "uncommented_$(ci[$(i)])"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 767,
                      "promiser": "^\\s*($(i)$(bp)(?!$(ev[$(i)])$).*|$(i))$",
                      "attributes": [
                        {
                          "line": 768,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Correct the value $(i)"
                          }
                        },
                        {
                          "line": 769,
                          "lval": "replace_with",
                          "rval": {
                            "type": "functionCall",
                            "name": "value",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(i)$(sep)$($(v)[$(i)])"
                              }
                            ]
                          }
                        },
                        {
                          "line": 770,
                          "lval": "classes",
                          "rval": {
                            "type": "functionCall",
                            "name": "always",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "replace_attempted_$(ci[$(i)])"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 772,
              "name": "insert_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 776,
                      "promiser": "$(i)$(sep)$($(v)[$(i)])",
                      "attributes": [
                        {
                          "line": 777,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Insert the value, marker exists $(i)"
                          }
                        },
                        {
                          "line": 778,
                          "lval": "location",
                          "rval": {
                            "type": "functionCall",
                            "name": "after",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "^$(cp)($(i)$(bp).*|$(i))$"
                              }
                            ]
                          }
                        },
                        {
                          "line": 779,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "string",
                            "value": "replace_attempted_$(ci[$(i)]).multiple_comments_$(ci[$(i)])"
                          }
                        }
                      ]
                    },
                    {
                      "line": 783,
                      "promiser": "$(i)$(sep)$($(v)[$(i)])",
                      "attributes": [
                        {
                          "line": 784,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Insert the value, marker doesn\\'t exist $(i)"
                          }
                        },
                        {
                          "line": 785,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "string",
                            "value": "replace_attempted_$(ci[$(i)]).!multiple_comments_$(ci[$(i)])"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 788,
          "namespace": "default",
          "name": "set_config_values_matching",
          "bundleType": "edit_line",
          "arguments": [
            "v",
            "pat"
          ],
          "promiseTypes": [
            {
              "line": 801,
              "name": "meta",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 802,
                      "promiser": "tags",
                      "attributes": [
                        {
                          "line": 808,
                          "lval": "slist",
                          "rval": {
                            "type": "list",
                            "value": [
                              {
                                "type": "string",
                                "value": "deprecated=3.6.0"
                              },
                              {
                                "type": "string",
                                "value": "deprecation-reason=Generic reimplementation"
                              },
                              {
                                "type": "string",
                                "value": "replaced-by=set_line_based"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 810,
              "name": "vars",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 811,
                      "promiser": "allparams",
                      "attributes": [
                        {
                          "line": 811,
                          "lval": "slist",
                          "rval": {
                            "type": "functionCall",
                            "name": "getindices",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(v)"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 812,
                      "promiser": "index",
                      "attributes": [
                        {
                          "line": 812,
                          "lval": "slist",
                          "rval": {
                            "type": "functionCall",
                            "name": "grep",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(pat)"
                              },
                              {
                                "type": "string",
                                "value": "allparams"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 815,
                      "promiser": "cindex[$(index)]",
                      "attributes": [
                        {
                          "line": 815,
                          "lval": "string",
                          "rval": {
                            "type": "functionCall",
                            "name": "canonify",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(index)"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 817,
              "name": "replace_patterns",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 820,
                      "promiser": "^\\s*($(index)\\s+(?!$($(v)[$(index)])).*|# ?$(index)\\s+.*)$",
                      "attributes": [
                        {
                          "line": 821,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Correct the value"
                          }
                        },
                        {
                          "line": 822,
                          "lval": "replace_with",
                          "rval": {
                            "type": "functionCall",
                            "name": "value",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(index) $($(v)[$(index)])"
                              }
                            ]
                          }
                        },
                        {
                          "line": 823,
                          "lval": "classes",
                          "rval": {
                            "type": "functionCall",
                            "name": "always",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "replace_attempted_$(cindex[$(index)])"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 825,
              "name": "insert_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 826,
                      "promiser": "$(index) $($(v)[$(index)])",
                      "attributes": [
                        {
                          "line": 827,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "string",
                            "value": "replace_attempted_$(cindex[$(index)])"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 833,
          "namespace": "default",
          "name": "maintain_key_values",
          "bundleType": "edit_line",
          "arguments": [
            "v",
            "sep"
          ],
          "promiseTypes": [
            {
              "line": 839,
              "name": "meta",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 840,
                      "promiser": "tags",
                      "attributes": [
                        {
                          "line": 846,
                          "lval": "slist",
                          "rval": {
                            "type": "list",
                            "value": [
                              {
                                "type": "string",
                                "value": "deprecated=3.6.0"
                              },
                              {
                                "type": "string",
                                "value": "deprecation-reason=Generic reimplementation"
                              },
                              {
                                "type": "string",
                                "value": "replaced-by=set_line_based"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 848,
              "name": "vars",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 849,
                      "promiser": "index",
                      "attributes": [
                        {
                          "line": 849,
                          "lval": "slist",
                          "rval": {
                            "type": "functionCall",
                            "name": "getindices",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(v)"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 851,
                      "promiser": "cindex[$(index)]",
                      "attributes": [
                        {
                          "line": 851,
                          "lval": "string",
                          "rval": {
                            "type": "functionCall",
                            "name": "canonify",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(index)"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 853,
                      "promiser": "keypat[$(index)]",
                      "attributes": [
                        {
                          "line": 853,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": "\\s*$(index)\\s*$(sep)\\s*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 856,
                      "promiser": "ve[$(index)]",
                      "attributes": [
                        {
                          "line": 856,
                          "lval": "string",
                          "rval": {
                            "type": "functionCall",
                            "name": "escape",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$($(v)[$(index)])"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 858,
              "name": "classes",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 859,
                      "promiser": "$(cindex[$(index)])_key_in_file",
                      "attributes": [
                        {
                          "line": 860,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Dynamic Class created if patterns matching"
                          }
                        },
                        {
                          "line": 861,
                          "lval": "expression",
                          "rval": {
                            "type": "functionCall",
                            "name": "regline",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "^$(keypat[$(index)]).*"
                              },
                              {
                                "type": "string",
                                "value": "$(edit.filename)"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 863,
              "name": "replace_patterns",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 866,
                      "promiser": "^($(keypat[$(index)]))(?!$(ve[$(index)])$).*",
                      "attributes": [
                        {
                          "line": 867,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Replace definition of $(index)"
                          }
                        },
                        {
                          "line": 868,
                          "lval": "replace_with",
                          "rval": {
                            "type": "functionCall",
                            "name": "value",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(match.1)$($(v)[$(index)])"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 870,
              "name": "insert_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 871,
                      "promiser": "$(index)$(sep)$($(v)[$(index)])",
                      "attributes": [
                        {
                          "line": 872,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Insert definition of $(index)"
                          }
                        },
                        {
                          "line": 873,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "string",
                            "value": "!$(cindex[$(index)])_key_in_file"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 878,
          "namespace": "default",
          "name": "append_users_starting",
          "bundleType": "edit_line",
          "arguments": [
            "v"
          ],
          "promiseTypes": [
            {
              "line": 885,
              "name": "vars",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 887,
                      "promiser": "index",
                      "attributes": [
                        {
                          "line": 887,
                          "lval": "slist",
                          "rval": {
                            "type": "functionCall",
                            "name": "getindices",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(v)"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 889,
              "name": "classes",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 891,
                      "promiser": "add_$(index)",
                      "attributes": [
                        {
                          "line": 891,
                          "lval": "not",
                          "rval": {
                            "type": "functionCall",
                            "name": "userexists",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(index)"
                              }
                            ]
                          }
                        },
                        {
                          "line": 892,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Class created if user does not exist"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 894,
              "name": "insert_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 896,
                      "promiser": "$($(v)[$(index)])",
                      "attributes": [
                        {
                          "line": 898,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Append users into a password file format"
                          }
                        },
                        {
                          "line": 899,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "string",
                            "value": "add_$(index)"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 904,
          "namespace": "default",
          "name": "append_groups_starting",
          "bundleType": "edit_line",
          "arguments": [
            "v"
          ],
          "promiseTypes": [
            {
              "line": 911,
              "name": "vars",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 913,
                      "promiser": "index",
                      "attributes": [
                        {
                          "line": 913,
                          "lval": "slist",
                          "rval": {
                            "type": "functionCall",
                            "name": "getindices",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(v)"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 915,
              "name": "classes",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 917,
                      "promiser": "add_$(index)",
                      "attributes": [
                        {
                          "line": 917,
                          "lval": "not",
                          "rval": {
                            "type": "functionCall",
                            "name": "groupexists",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(index)"
                              }
                            ]
                          }
                        },
                        {
                          "line": 918,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Class created if group does not exist"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 920,
              "name": "insert_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 922,
                      "promiser": "$($(v)[$(index)])",
                      "attributes": [
                        {
                          "line": 924,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Append users into a group file format"
                          }
                        },
                        {
                          "line": 925,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "string",
                            "value": "add_$(index)"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 931,
          "namespace": "default",
          "name": "set_colon_field",
          "bundleType": "edit_line",
          "arguments": [
            "key",
            "field",
            "val"
          ],
          "promiseTypes": [
            {
              "line": 938,
              "name": "field_edits",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 940,
                      "promiser": "$(key):.*",
                      "attributes": [
                        {
                          "line": 942,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Edit a colon-separated file, using the first field as a key"
                          }
                        },
                        {
                          "line": 943,
                          "lval": "edit_field",
                          "rval": {
                            "type": "functionCall",
                            "name": "col",
                            "arguments": [
                              {
                                "type": "string",
                                "value": ":"
                              },
                              {
                                "type": "string",
                                "value": "$(field)"
                              },
                              {
                                "type": "string",
                                "value": "$(val)"
                              },
                              {
                                "type": "string",
                                "value": "set"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 948,
          "namespace": "default",
          "name": "set_user_field",
          "bundleType": "edit_line",
          "arguments": [
            "user",
            "field",
            "val"
          ],
          "promiseTypes": [
            {
              "line": 958,
              "name": "field_edits",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 960,
                      "promiser": "$(user):.*",
                      "attributes": [
                        {
                          "line": 962,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Edit a user attribute in the password file"
                          }
                        },
                        {
                          "line": 963,
                          "lval": "edit_field",
                          "rval": {
                            "type": "functionCall",
                            "name": "col",
                            "arguments": [
                              {
                                "type": "string",
                                "value": ":"
                              },
                              {
                                "type": "string",
                                "value": "$(field)"
                              },
                              {
                                "type": "string",
                                "value": "$(val)"
                              },
                              {
                                "type": "string",
                                "value": "set"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 968,
          "namespace": "default",
          "name": "append_user_field",
          "bundleType": "edit_line",
          "arguments": [
            "group",
            "field",
            "allusers"
          ],
          "promiseTypes": [
            {
              "line": 978,
              "name": "vars",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 980,
                      "promiser": "val",
                      "attributes": [
                        {
                          "line": 980,
                          "lval": "slist",
                          "rval": {
                            "type": "list",
                            "value": [
                              {
                                "type": "string",
                                "value": "@(allusers)"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 982,
              "name": "field_edits",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 984,
                      "promiser": "$(group):.*",
                      "attributes": [
                        {
                          "line": 986,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Append users into a password file format"
                          }
                        },
                        {
                          "line": 987,
                          "lval": "edit_field",
                          "rval": {
                            "type": "functionCall",
                            "name": "col",
                            "arguments": [
                              {
                                "type": "string",
                                "value": ":"
                              },
                              {
                                "type": "string",
                                "value": "$(field)"
                              },
                              {
                                "type": "string",
                                "value": "$(val)"
                              },
                              {
                                "type": "string",
                                "value": "alphanum"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 992,
          "namespace": "default",
          "name": "expand_template",
          "bundleType": "edit_line",
          "arguments": [
            "templatefile"
          ],
          "promiseTypes": [
            {
              "line": 996,
              "name": "insert_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 998,
                      "promiser": "$(templatefile)",
                      "attributes": [
                        {
                          "line": 1000,
                          "lval": "insert_type",
                          "rval": {
                            "type": "string",
                            "value": "file"
                          }
                        },
                        {
                          "line": 1001,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Expand variables in the template file"
                          }
                        },
                        {
                          "line": 1002,
                          "lval": "expand_scalars",
                          "rval": {
                            "type": "string",
                            "value": "true"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1005,
          "namespace": "default",
          "name": "replace_or_add",
          "bundleType": "edit_line",
          "arguments": [
            "pattern",
            "line"
          ],
          "promiseTypes": [
            {
              "line": 1016,
              "name": "vars",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 1017,
                      "promiser": "cline",
                      "attributes": [
                        {
                          "line": 1017,
                          "lval": "string",
                          "rval": {
                            "type": "functionCall",
                            "name": "canonify",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(line)"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 1018,
                      "promiser": "eline",
                      "attributes": [
                        {
                          "line": 1018,
                          "lval": "string",
                          "rval": {
                            "type": "functionCall",
                            "name": "escape",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(line)"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 1020,
              "name": "replace_patterns",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 1021,
                      "promiser": "^(?!$(eline)$)$(pattern)$",
                      "attributes": [
                        {
                          "line": 1022,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Replace a pattern here"
                          }
                        },
                        {
                          "line": 1023,
                          "lval": "replace_with",
                          "rval": {
                            "type": "functionCall",
                            "name": "value",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(line)"
                              }
                            ]
                          }
                        },
                        {
                          "line": 1024,
                          "lval": "classes",
                          "rval": {
                            "type": "functionCall",
                            "name": "always",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "replace_done_$(cline)"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 1026,
              "name": "insert_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 1027,
                      "promiser": "$(line)",
                      "attributes": [
                        {
                          "line": 1028,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "string",
                            "value": "replace_done_$(cline)"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1032,
          "namespace": "default",
          "name": "_dc_converge",
          "bundleType": "edit_line",
          "arguments": [
            "marker",
            "lines"
          ],
          "promiseTypes": [
            {
              "line": 1041,
              "name": "vars",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 1042,
                      "promiser": "regex",
                      "attributes": [
                        {
                          "line": 1042,
                          "lval": "string",
                          "rval": {
                            "type": "functionCall",
                            "name": "escape",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(marker)"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 1044,
              "name": "delete_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 1045,
                      "promiser": "$(regex)",
                      "attributes": [
                        {
                          "line": 1045,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Delete lines matching the marker"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 1046,
              "name": "insert_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 1047,
                      "promiser": "$(lines)",
                      "attributes": [
                        {
                          "line": 1047,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Insert the given lines"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1050,
          "namespace": "default",
          "name": "fstab_option_editor",
          "bundleType": "edit_line",
          "arguments": [
            "method",
            "mount",
            "option"
          ],
          "promiseTypes": [
            {
              "line": 1069,
              "name": "field_edits",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 1070,
                      "promiser": "(?!#)\\S+\\s+$(mount)\\s.+",
                      "attributes": [
                        {
                          "line": 1071,
                          "lval": "edit_field",
                          "rval": {
                            "type": "functionCall",
                            "name": "fstab_options",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(option)"
                              },
                              {
                                "type": "string",
                                "value": "$(method)"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "bodies": [
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 57,
          "namespace": "default",
          "name": "control",
          "bodyType": "file",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 60,
                  "lval": "inputs",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "@(files_common.inputs)"
                      }
                    ]
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1078,
          "namespace": "default",
          "name": "fstab_options",
          "bodyType": "edit_field",
          "arguments": [
            "newval",
            "method"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1096,
                  "lval": "field_separator",
                  "rval": {
                    "type": "string",
                    "value": "\\s+"
                  }
                },
                {
                  "line": 1097,
                  "lval": "select_field",
                  "rval": {
                    "type": "string",
                    "value": "4"
                  }
                },
                {
                  "line": 1098,
                  "lval": "value_separator",
                  "rval": {
                    "type": "string",
                    "value": ","
                  }
                },
                {
                  "line": 1099,
                  "lval": "field_value",
                  "rval": {
                    "type": "string",
                    "value": "$(newval)"
                  }
                },
                {
                  "line": 1100,
                  "lval": "field_operation",
                  "rval": {
                    "type": "string",
                    "value": "$(method)"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1103,
          "namespace": "default",
          "name": "quoted_var",
          "bodyType": "edit_field",
          "arguments": [
            "newval",
            "method"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1108,
                  "lval": "field_separator",
                  "rval": {
                    "type": "string",
                    "value": "\\\""
                  }
                },
                {
                  "line": 1109,
                  "lval": "select_field",
                  "rval": {
                    "type": "string",
                    "value": "2"
                  }
                },
                {
                  "line": 1110,
                  "lval": "value_separator",
                  "rval": {
                    "type": "string",
                    "value": " "
                  }
                },
                {
                  "line": 1111,
                  "lval": "field_value",
                  "rval": {
                    "type": "string",
                    "value": "$(newval)"
                  }
                },
                {
                  "line": 1112,
                  "lval": "field_operation",
                  "rval": {
                    "type": "string",
                    "value": "$(method)"
                  }
                },
                {
                  "line": 1113,
                  "lval": "extend_fields",
                  "rval": {
                    "type": "string",
                    "value": "false"
                  }
                },
                {
                  "line": 1114,
                  "lval": "allow_blank_fields",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1119,
          "namespace": "default",
          "name": "col",
          "bodyType": "edit_field",
          "arguments": [
            "split",
            "col",
            "newval",
            "method"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1126,
                  "lval": "field_separator",
                  "rval": {
                    "type": "string",
                    "value": "$(split)"
                  }
                },
                {
                  "line": 1127,
                  "lval": "select_field",
                  "rval": {
                    "type": "string",
                    "value": "$(col)"
                  }
                },
                {
                  "line": 1128,
                  "lval": "value_separator",
                  "rval": {
                    "type": "string",
                    "value": ","
                  }
                },
                {
                  "line": 1129,
                  "lval": "field_value",
                  "rval": {
                    "type": "string",
                    "value": "$(newval)"
                  }
                },
                {
                  "line": 1130,
                  "lval": "field_operation",
                  "rval": {
                    "type": "string",
                    "value": "$(method)"
                  }
                },
                {
                  "line": 1131,
                  "lval": "extend_fields",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                },
                {
                  "line": 1132,
                  "lval": "allow_blank_fields",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1137,
          "namespace": "default",
          "name": "line",
          "bodyType": "edit_field",
          "arguments": [
            "split",
            "col",
            "newval",
            "method"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1144,
                  "lval": "field_separator",
                  "rval": {
                    "type": "string",
                    "value": "$(split)"
                  }
                },
                {
                  "line": 1145,
                  "lval": "select_field",
                  "rval": {
                    "type": "string",
                    "value": "$(col)"
                  }
                },
                {
                  "line": 1146,
                  "lval": "value_separator",
                  "rval": {
                    "type": "string",
                    "value": " "
                  }
                },
                {
                  "line": 1147,
                  "lval": "field_value",
                  "rval": {
                    "type": "string",
                    "value": "$(newval)"
                  }
                },
                {
                  "line": 1148,
                  "lval": "field_operation",
                  "rval": {
                    "type": "string",
                    "value": "$(method)"
                  }
                },
                {
                  "line": 1149,
                  "lval": "extend_fields",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                },
                {
                  "line": 1150,
                  "lval": "allow_blank_fields",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1155,
          "namespace": "default",
          "name": "value",
          "bodyType": "replace_with",
          "arguments": [
            "x"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1159,
                  "lval": "replace_value",
                  "rval": {
                    "type": "string",
                    "value": "$(x)"
                  }
                },
                {
                  "line": 1160,
                  "lval": "occurrences",
                  "rval": {
                    "type": "string",
                    "value": "all"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1165,
          "namespace": "default",
          "name": "INI_section",
          "bodyType": "select_region",
          "arguments": [
            "x"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1169,
                  "lval": "select_start",
                  "rval": {
                    "type": "string",
                    "value": "\\[$(x)\\]\\s*"
                  }
                },
                {
                  "line": 1170,
                  "lval": "select_end",
                  "rval": {
                    "type": "string",
                    "value": "\\[.*\\]\\s*"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1177,
          "namespace": "default",
          "name": "std_defs",
          "bodyType": "edit_defaults",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1181,
                  "lval": "empty_file_before_editing",
                  "rval": {
                    "type": "string",
                    "value": "false"
                  }
                },
                {
                  "line": 1182,
                  "lval": "edit_backup",
                  "rval": {
                    "type": "string",
                    "value": "false"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1188,
          "namespace": "default",
          "name": "empty",
          "bodyType": "edit_defaults",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1193,
                  "lval": "empty_file_before_editing",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                },
                {
                  "line": 1194,
                  "lval": "edit_backup",
                  "rval": {
                    "type": "string",
                    "value": "false"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1200,
          "namespace": "default",
          "name": "no_backup",
          "bodyType": "edit_defaults",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1203,
                  "lval": "edit_backup",
                  "rval": {
                    "type": "string",
                    "value": "false"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1208,
          "namespace": "default",
          "name": "backup_timestamp",
          "bodyType": "edit_defaults",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1211,
                  "lval": "empty_file_before_editing",
                  "rval": {
                    "type": "string",
                    "value": "false"
                  }
                },
                {
                  "line": 1212,
                  "lval": "edit_backup",
                  "rval": {
                    "type": "string",
                    "value": "timestamp"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1220,
          "namespace": "default",
          "name": "start",
          "bodyType": "location",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1223,
                  "lval": "before_after",
                  "rval": {
                    "type": "string",
                    "value": "before"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1228,
          "namespace": "default",
          "name": "after",
          "bodyType": "location",
          "arguments": [
            "str"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1232,
                  "lval": "before_after",
                  "rval": {
                    "type": "string",
                    "value": "after"
                  }
                },
                {
                  "line": 1233,
                  "lval": "select_line_matching",
                  "rval": {
                    "type": "string",
                    "value": "$(str)"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1238,
          "namespace": "default",
          "name": "before",
          "bodyType": "location",
          "arguments": [
            "str"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1242,
                  "lval": "before_after",
                  "rval": {
                    "type": "string",
                    "value": "before"
                  }
                },
                {
                  "line": 1243,
                  "lval": "select_line_matching",
                  "rval": {
                    "type": "string",
                    "value": "$(str)"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1252,
          "namespace": "default",
          "name": "comment",
          "bodyType": "replace_with",
          "arguments": [
            "c"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1256,
                  "lval": "replace_value",
                  "rval": {
                    "type": "string",
                    "value": "$(c) $(match.1)"
                  }
                },
                {
                  "line": 1257,
                  "lval": "occurrences",
                  "rval": {
                    "type": "string",
                    "value": "all"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1262,
          "namespace": "default",
          "name": "uncomment",
          "bodyType": "replace_with",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1266,
                  "lval": "replace_value",
                  "rval": {
                    "type": "string",
                    "value": "$(match.1)"
                  }
                },
                {
                  "line": 1267,
                  "lval": "occurrences",
                  "rval": {
                    "type": "string",
                    "value": "all"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1274,
          "namespace": "default",
          "name": "secure_cp",
          "bodyType": "copy_from",
          "arguments": [
            "from",
            "server"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1283,
                  "lval": "source",
                  "rval": {
                    "type": "string",
                    "value": "$(from)"
                  }
                },
                {
                  "line": 1284,
                  "lval": "servers",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "$(server)"
                      }
                    ]
                  }
                },
                {
                  "line": 1285,
                  "lval": "compare",
                  "rval": {
                    "type": "string",
                    "value": "digest"
                  }
                },
                {
                  "line": 1286,
                  "lval": "encrypt",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                },
                {
                  "line": 1287,
                  "lval": "verify",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1292,
          "namespace": "default",
          "name": "remote_cp",
          "bodyType": "copy_from",
          "arguments": [
            "from",
            "server"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1298,
                  "lval": "servers",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "$(server)"
                      }
                    ]
                  }
                },
                {
                  "line": 1299,
                  "lval": "source",
                  "rval": {
                    "type": "string",
                    "value": "$(from)"
                  }
                },
                {
                  "line": 1300,
                  "lval": "compare",
                  "rval": {
                    "type": "string",
                    "value": "mtime"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1305,
          "namespace": "default",
          "name": "remote_dcp",
          "bodyType": "copy_from",
          "arguments": [
            "from",
            "server"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1311,
                  "lval": "servers",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "$(server)"
                      }
                    ]
                  }
                },
                {
                  "line": 1312,
                  "lval": "source",
                  "rval": {
                    "type": "string",
                    "value": "$(from)"
                  }
                },
                {
                  "line": 1313,
                  "lval": "compare",
                  "rval": {
                    "type": "string",
                    "value": "digest"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1318,
          "namespace": "default",
          "name": "local_cp",
          "bodyType": "copy_from",
          "arguments": [
            "from"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1323,
                  "lval": "source",
                  "rval": {
                    "type": "string",
                    "value": "$(from)"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1328,
          "namespace": "default",
          "name": "local_dcp",
          "bodyType": "copy_from",
          "arguments": [
            "from"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1333,
                  "lval": "source",
                  "rval": {
                    "type": "string",
                    "value": "$(from)"
                  }
                },
                {
                  "line": 1334,
                  "lval": "compare",
                  "rval": {
                    "type": "string",
                    "value": "digest"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1339,
          "namespace": "default",
          "name": "perms_cp",
          "bodyType": "copy_from",
          "arguments": [
            "from"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1344,
                  "lval": "source",
                  "rval": {
                    "type": "string",
                    "value": "$(from)"
                  }
                },
                {
                  "line": 1345,
                  "lval": "preserve",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1348,
          "namespace": "default",
          "name": "backup_local_cp",
          "bodyType": "copy_from",
          "arguments": [
            "from"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1353,
                  "lval": "source",
                  "rval": {
                    "type": "string",
                    "value": "$(from)"
                  }
                },
                {
                  "line": 1354,
                  "lval": "copy_backup",
                  "rval": {
                    "type": "string",
                    "value": "timestamp"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1359,
          "namespace": "default",
          "name": "seed_cp",
          "bodyType": "copy_from",
          "arguments": [
            "from"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1364,
                  "lval": "source",
                  "rval": {
                    "type": "string",
                    "value": "$(from)"
                  }
                },
                {
                  "line": 1365,
                  "lval": "compare",
                  "rval": {
                    "type": "string",
                    "value": "exists"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1370,
          "namespace": "default",
          "name": "sync_cp",
          "bodyType": "copy_from",
          "arguments": [
            "from",
            "server"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1376,
                  "lval": "servers",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "$(server)"
                      }
                    ]
                  }
                },
                {
                  "line": 1377,
                  "lval": "source",
                  "rval": {
                    "type": "string",
                    "value": "$(from)"
                  }
                },
                {
                  "line": 1378,
                  "lval": "purge",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                },
                {
                  "line": 1379,
                  "lval": "preserve",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                },
                {
                  "line": 1380,
                  "lval": "type_check",
                  "rval": {
                    "type": "string",
                    "value": "false"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1385,
          "namespace": "default",
          "name": "no_backup_cp",
          "bodyType": "copy_from",
          "arguments": [
            "from"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1390,
                  "lval": "source",
                  "rval": {
                    "type": "string",
                    "value": "$(from)"
                  }
                },
                {
                  "line": 1391,
                  "lval": "copy_backup",
                  "rval": {
                    "type": "string",
                    "value": "false"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1396,
          "namespace": "default",
          "name": "no_backup_dcp",
          "bodyType": "copy_from",
          "arguments": [
            "from"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1402,
                  "lval": "source",
                  "rval": {
                    "type": "string",
                    "value": "$(from)"
                  }
                },
                {
                  "line": 1403,
                  "lval": "copy_backup",
                  "rval": {
                    "type": "string",
                    "value": "false"
                  }
                },
                {
                  "line": 1404,
                  "lval": "compare",
                  "rval": {
                    "type": "string",
                    "value": "digest"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1409,
          "namespace": "default",
          "name": "no_backup_rcp",
          "bodyType": "copy_from",
          "arguments": [
            "from",
            "server"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1416,
                  "lval": "servers",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "$(server)"
                      }
                    ]
                  }
                },
                {
                  "line": 1417,
                  "lval": "source",
                  "rval": {
                    "type": "string",
                    "value": "$(from)"
                  }
                },
                {
                  "line": 1418,
                  "lval": "compare",
                  "rval": {
                    "type": "string",
                    "value": "mtime"
                  }
                },
                {
                  "line": 1419,
                  "lval": "copy_backup",
                  "rval": {
                    "type": "string",
                    "value": "false"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1426,
          "namespace": "default",
          "name": "ln_s",
          "bodyType": "link_from",
          "arguments": [
            "x"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1431,
                  "lval": "link_type",
                  "rval": {
                    "type": "string",
                    "value": "symlink"
                  }
                },
                {
                  "line": 1432,
                  "lval": "source",
                  "rval": {
                    "type": "string",
                    "value": "$(x)"
                  }
                },
                {
                  "line": 1433,
                  "lval": "when_no_source",
                  "rval": {
                    "type": "string",
                    "value": "force"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1438,
          "namespace": "default",
          "name": "linkchildren",
          "bodyType": "link_from",
          "arguments": [
            "tofile"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1446,
                  "lval": "source",
                  "rval": {
                    "type": "string",
                    "value": "$(tofile)"
                  }
                },
                {
                  "line": 1447,
                  "lval": "link_type",
                  "rval": {
                    "type": "string",
                    "value": "symlink"
                  }
                },
                {
                  "line": 1448,
                  "lval": "when_no_source",
                  "rval": {
                    "type": "string",
                    "value": "force"
                  }
                },
                {
                  "line": 1449,
                  "lval": "link_children",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                },
                {
                  "line": 1450,
                  "lval": "when_linking_children",
                  "rval": {
                    "type": "string",
                    "value": "if_no_such_file"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1457,
          "namespace": "default",
          "name": "m",
          "bodyType": "perms",
          "arguments": [
            "mode"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1461,
                  "lval": "mode",
                  "rval": {
                    "type": "string",
                    "value": "$(mode)"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1466,
          "namespace": "default",
          "name": "mo",
          "bodyType": "perms",
          "arguments": [
            "mode",
            "user"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1471,
                  "lval": "owners",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "$(user)"
                      }
                    ]
                  }
                },
                {
                  "line": 1472,
                  "lval": "mode",
                  "rval": {
                    "type": "string",
                    "value": "$(mode)"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1477,
          "namespace": "default",
          "name": "mog",
          "bodyType": "perms",
          "arguments": [
            "mode",
            "user",
            "group"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1483,
                  "lval": "owners",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "$(user)"
                      }
                    ]
                  }
                },
                {
                  "line": 1484,
                  "lval": "groups",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "$(group)"
                      }
                    ]
                  }
                },
                {
                  "line": 1485,
                  "lval": "mode",
                  "rval": {
                    "type": "string",
                    "value": "$(mode)"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1490,
          "namespace": "default",
          "name": "og",
          "bodyType": "perms",
          "arguments": [
            "u",
            "g"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1495,
                  "lval": "owners",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "$(u)"
                      }
                    ]
                  }
                },
                {
                  "line": 1496,
                  "lval": "groups",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "$(g)"
                      }
                    ]
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1501,
          "namespace": "default",
          "name": "owner",
          "bodyType": "perms",
          "arguments": [
            "user"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1505,
                  "lval": "owners",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "$(user)"
                      }
                    ]
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1508,
          "namespace": "default",
          "name": "system_owned",
          "bodyType": "perms",
          "arguments": [
            "mode"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1519,
                  "lval": "mode",
                  "rval": {
                    "type": "string",
                    "value": "$(mode)"
                  }
                },
                {
                  "line": 1520,
                  "lval": "owners",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "root"
                      }
                    ]
                  }
                }
              ]
            },
            {
              "name": "freebsd|openbsd|netbsd|darwin",
              "attributes": [
                {
                  "line": 1523,
                  "lval": "groups",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "wheel"
                      }
                    ]
                  }
                }
              ]
            },
            {
              "name": "linux",
              "attributes": [
                {
                  "line": 1526,
                  "lval": "groups",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "root"
                      }
                    ]
                  }
                }
              ]
            },
            {
              "name": "solaris",
              "attributes": [
                {
                  "line": 1529,
                  "lval": "groups",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "sys"
                      }
                    ]
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1536,
          "namespace": "default",
          "name": "access_generic",
          "bodyType": "acl",
          "arguments": [
            "acl"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1544,
                  "lval": "acl_method",
                  "rval": {
                    "type": "string",
                    "value": "overwrite"
                  }
                },
                {
                  "line": 1545,
                  "lval": "aces",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "@(acl)"
                      }
                    ]
                  }
                }
              ]
            },
            {
              "name": "windows",
              "attributes": [
                {
                  "line": 1548,
                  "lval": "acl_type",
                  "rval": {
                    "type": "string",
                    "value": "ntfs"
                  }
                }
              ]
            },
            {
              "name": "!windows",
              "attributes": [
                {
                  "line": 1551,
                  "lval": "acl_type",
                  "rval": {
                    "type": "string",
                    "value": "posix"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1556,
          "namespace": "default",
          "name": "ntfs",
          "bodyType": "acl",
          "arguments": [
            "acl"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1564,
                  "lval": "acl_type",
                  "rval": {
                    "type": "string",
                    "value": "ntfs"
                  }
                },
                {
                  "line": 1565,
                  "lval": "acl_method",
                  "rval": {
                    "type": "string",
                    "value": "overwrite"
                  }
                },
                {
                  "line": 1566,
                  "lval": "aces",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "@(acl)"
                      }
                    ]
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1571,
          "namespace": "default",
          "name": "strict",
          "bodyType": "acl",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1578,
                  "lval": "acl_method",
                  "rval": {
                    "type": "string",
                    "value": "overwrite"
                  }
                }
              ]
            },
            {
              "name": "windows",
              "attributes": [
                {
                  "line": 1581,
                  "lval": "aces",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "user:Administrator:rwx"
                      }
                    ]
                  }
                }
              ]
            },
            {
              "name": "!windows",
              "attributes": [
                {
                  "line": 1583,
                  "lval": "aces",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "user:root:rwx"
                      }
                    ]
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1590,
          "namespace": "default",
          "name": "recurse",
          "bodyType": "depth_search",
          "arguments": [
            "d"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1596,
                  "lval": "depth",
                  "rval": {
                    "type": "string",
                    "value": "$(d)"
                  }
                },
                {
                  "line": 1597,
                  "lval": "xdev",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1602,
          "namespace": "default",
          "name": "recurse_ignore",
          "bodyType": "depth_search",
          "arguments": [
            "d",
            "list"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1609,
                  "lval": "depth",
                  "rval": {
                    "type": "string",
                    "value": "$(d)"
                  }
                },
                {
                  "line": 1610,
                  "lval": "exclude_dirs",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "@(list)"
                      }
                    ]
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1615,
          "namespace": "default",
          "name": "include_base",
          "bodyType": "depth_search",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1619,
                  "lval": "include_basedir",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1622,
          "namespace": "default",
          "name": "recurse_with_base",
          "bodyType": "depth_search",
          "arguments": [
            "d"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1629,
                  "lval": "depth",
                  "rval": {
                    "type": "string",
                    "value": "$(d)"
                  }
                },
                {
                  "line": 1630,
                  "lval": "xdev",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                },
                {
                  "line": 1631,
                  "lval": "include_basedir",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1638,
          "namespace": "default",
          "name": "tidy",
          "bodyType": "delete",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1642,
                  "lval": "dirlinks",
                  "rval": {
                    "type": "string",
                    "value": "delete"
                  }
                },
                {
                  "line": 1643,
                  "lval": "rmdirs",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1650,
          "namespace": "default",
          "name": "disable",
          "bodyType": "rename",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1653,
                  "lval": "disable",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1658,
          "namespace": "default",
          "name": "rotate",
          "bodyType": "rename",
          "arguments": [
            "level"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1662,
                  "lval": "rotate",
                  "rval": {
                    "type": "string",
                    "value": "$(level)"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1667,
          "namespace": "default",
          "name": "to",
          "bodyType": "rename",
          "arguments": [
            "file"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1671,
                  "lval": "newname",
                  "rval": {
                    "type": "string",
                    "value": "$(file)"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1678,
          "namespace": "default",
          "name": "name_age",
          "bodyType": "file_select",
          "arguments": [
            "name",
            "days"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1683,
                  "lval": "leaf_name",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "$(name)"
                      }
                    ]
                  }
                },
                {
                  "line": 1684,
                  "lval": "mtime",
                  "rval": {
                    "type": "functionCall",
                    "name": "irange",
                    "arguments": [
                      {
                        "type": "string",
                        "value": "0"
                      },
                      {
                        "type": "functionCall",
                        "name": "ago",
                        "arguments": [
                          {
                            "type": "string",
                            "value": "0"
                          },
                          {
                            "type": "string",
                            "value": "0"
                          },
                          {
                            "type": "string",
                            "value": "$(days)"
                          },
                          {
                            "type": "string",
                            "value": "0"
                          },
                          {
                            "type": "string",
                            "value": "0"
                          },
                          {
                            "type": "string",
                            "value": "0"
                          }
                        ]
                      }
                    ]
                  }
                },
                {
                  "line": 1685,
                  "lval": "file_result",
                  "rval": {
                    "type": "string",
                    "value": "mtime.leaf_name"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1690,
          "namespace": "default",
          "name": "days_old",
          "bodyType": "file_select",
          "arguments": [
            "days"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1694,
                  "lval": "mtime",
                  "rval": {
                    "type": "functionCall",
                    "name": "irange",
                    "arguments": [
                      {
                        "type": "string",
                        "value": "0"
                      },
                      {
                        "type": "functionCall",
                        "name": "ago",
                        "arguments": [
                          {
                            "type": "string",
                            "value": "0"
                          },
                          {
                            "type": "string",
                            "value": "0"
                          },
                          {
                            "type": "string",
                            "value": "$(days)"
                          },
                          {
                            "type": "string",
                            "value": "0"
                          },
                          {
                            "type": "string",
                            "value": "0"
                          },
                          {
                            "type": "string",
                            "value": "0"
                          }
                        ]
                      }
                    ]
                  }
                },
                {
                  "line": 1695,
                  "lval": "file_result",
                  "rval": {
                    "type": "string",
                    "value": "mtime"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1700,
          "namespace": "default",
          "name": "size_range",
          "bodyType": "file_select",
          "arguments": [
            "from",
            "to"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1705,
                  "lval": "search_size",
                  "rval": {
                    "type": "functionCall",
                    "name": "irange",
                    "arguments": [
                      {
                        "type": "string",
                        "value": "$(from)"
                      },
                      {
                        "type": "string",
                        "value": "$(to)"
                      }
                    ]
                  }
                },
                {
                  "line": 1706,
                  "lval": "file_result",
                  "rval": {
                    "type": "string",
                    "value": "size"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1711,
          "namespace": "default",
          "name": "bigger_than",
          "bodyType": "file_select",
          "arguments": [
            "size"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1715,
                  "lval": "search_size",
                  "rval": {
                    "type": "functionCall",
                    "name": "irange",
                    "arguments": [
                      {
                        "type": "string",
                        "value": "0"
                      },
                      {
                        "type": "string",
                        "value": "$(size)"
                      }
                    ]
                  }
                },
                {
                  "line": 1716,
                  "lval": "file_result",
                  "rval": {
                    "type": "string",
                    "value": "!size"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1721,
          "namespace": "default",
          "name": "exclude",
          "bodyType": "file_select",
          "arguments": [
            "name"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1725,
                  "lval": "leaf_name",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "$(name)"
                      }
                    ]
                  }
                },
                {
                  "line": 1726,
                  "lval": "file_result",
                  "rval": {
                    "type": "string",
                    "value": "!leaf_name"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1731,
          "namespace": "default",
          "name": "plain",
          "bodyType": "file_select",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1734,
                  "lval": "file_types",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "plain"
                      }
                    ]
                  }
                },
                {
                  "line": 1735,
                  "lval": "file_result",
                  "rval": {
                    "type": "string",
                    "value": "file_types"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1738,
          "namespace": "default",
          "name": "dirs",
          "bodyType": "file_select",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1741,
                  "lval": "file_types",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "dir"
                      }
                    ]
                  }
                },
                {
                  "line": 1742,
                  "lval": "file_result",
                  "rval": {
                    "type": "string",
                    "value": "file_types"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1747,
          "namespace": "default",
          "name": "by_name",
          "bodyType": "file_select",
          "arguments": [
            "names"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1751,
                  "lval": "leaf_name",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "@(names)"
                      }
                    ]
                  }
                },
                {
                  "line": 1752,
                  "lval": "file_result",
                  "rval": {
                    "type": "string",
                    "value": "leaf_name"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1757,
          "namespace": "default",
          "name": "ex_list",
          "bodyType": "file_select",
          "arguments": [
            "names"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1761,
                  "lval": "leaf_name",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "@(names)"
                      }
                    ]
                  }
                },
                {
                  "line": 1762,
                  "lval": "file_result",
                  "rval": {
                    "type": "string",
                    "value": "!leaf_name"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1767,
          "namespace": "default",
          "name": "all",
          "bodyType": "file_select",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1770,
                  "lval": "leaf_name",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": ".*"
                      }
                    ]
                  }
                },
                {
                  "line": 1771,
                  "lval": "file_result",
                  "rval": {
                    "type": "string",
                    "value": "leaf_name"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1776,
          "namespace": "default",
          "name": "older_than",
          "bodyType": "file_select",
          "arguments": [
            "years",
            "months",
            "days",
            "hours",
            "minutes",
            "seconds"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1788,
                  "lval": "mtime",
                  "rval": {
                    "type": "functionCall",
                    "name": "irange",
                    "arguments": [
                      {
                        "type": "string",
                        "value": "0"
                      },
                      {
                        "type": "functionCall",
                        "name": "ago",
                        "arguments": [
                          {
                            "type": "string",
                            "value": "$(years)"
                          },
                          {
                            "type": "string",
                            "value": "$(months)"
                          },
                          {
                            "type": "string",
                            "value": "$(days)"
                          },
                          {
                            "type": "string",
                            "value": "$(hours)"
                          },
                          {
                            "type": "string",
                            "value": "$(minutes)"
                          },
                          {
                            "type": "string",
                            "value": "$(seconds)"
                          }
                        ]
                      }
                    ]
                  }
                },
                {
                  "line": 1789,
                  "lval": "file_result",
                  "rval": {
                    "type": "string",
                    "value": "mtime"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1794,
          "namespace": "default",
          "name": "filetype_older_than",
          "bodyType": "file_select",
          "arguments": [
            "filetype",
            "days"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1803,
                  "lval": "file_types",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "$(filetype)"
                      }
                    ]
                  }
                },
                {
                  "line": 1804,
                  "lval": "mtime",
                  "rval": {
                    "type": "functionCall",
                    "name": "irange",
                    "arguments": [
                      {
                        "type": "string",
                        "value": "0"
                      },
                      {
                        "type": "functionCall",
                        "name": "ago",
                        "arguments": [
                          {
                            "type": "string",
                            "value": "0"
                          },
                          {
                            "type": "string",
                            "value": "0"
                          },
                          {
                            "type": "string",
                            "value": "$(days)"
                          },
                          {
                            "type": "string",
                            "value": "0"
                          },
                          {
                            "type": "string",
                            "value": "0"
                          },
                          {
                            "type": "string",
                            "value": "0"
                          }
                        ]
                      }
                    ]
                  }
                },
                {
                  "line": 1805,
                  "lval": "file_result",
                  "rval": {
                    "type": "string",
                    "value": "file_types.mtime"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1810,
          "namespace": "default",
          "name": "filetypes_older_than",
          "bodyType": "file_select",
          "arguments": [
            "filetypes",
            "days"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1820,
                  "lval": "file_types",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "@(filetypes)"
                      }
                    ]
                  }
                },
                {
                  "line": 1821,
                  "lval": "mtime",
                  "rval": {
                    "type": "functionCall",
                    "name": "irange",
                    "arguments": [
                      {
                        "type": "string",
                        "value": "0"
                      },
                      {
                        "type": "functionCall",
                        "name": "ago",
                        "arguments": [
                          {
                            "type": "string",
                            "value": "0"
                          },
                          {
                            "type": "string",
                            "value": "0"
                          },
                          {
                            "type": "string",
                            "value": "$(days)"
                          },
                          {
                            "type": "string",
                            "value": "0"
                          },
                          {
                            "type": "string",
                            "value": "0"
                          },
                          {
                            "type": "string",
                            "value": "0"
                          }
                        ]
                      }
                    ]
                  }
                },
                {
                  "line": 1822,
                  "lval": "file_result",
                  "rval": {
                    "type": "string",
                    "value": "file_types.mtime"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1829,
          "namespace": "default",
          "name": "detect_all_change",
          "bodyType": "changes",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1835,
                  "lval": "hash",
                  "rval": {
                    "type": "string",
                    "value": "best"
                  }
                },
                {
                  "line": 1836,
                  "lval": "report_changes",
                  "rval": {
                    "type": "string",
                    "value": "all"
                  }
                },
                {
                  "line": 1837,
                  "lval": "update_hashes",
                  "rval": {
                    "type": "string",
                    "value": "yes"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1842,
          "namespace": "default",
          "name": "detect_all_change_using",
          "bodyType": "changes",
          "arguments": [
            "hash"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1850,
                  "lval": "hash",
                  "rval": {
                    "type": "string",
                    "value": "$(hash)"
                  }
                },
                {
                  "line": 1851,
                  "lval": "report_changes",
                  "rval": {
                    "type": "string",
                    "value": "all"
                  }
                },
                {
                  "line": 1852,
                  "lval": "update_hashes",
                  "rval": {
                    "type": "string",
                    "value": "yes"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1857,
          "namespace": "default",
          "name": "detect_content",
          "bodyType": "changes",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1862,
                  "lval": "hash",
                  "rval": {
                    "type": "string",
                    "value": "md5"
                  }
                },
                {
                  "line": 1863,
                  "lval": "report_changes",
                  "rval": {
                    "type": "string",
                    "value": "content"
                  }
                },
                {
                  "line": 1864,
                  "lval": "update_hashes",
                  "rval": {
                    "type": "string",
                    "value": "yes"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1869,
          "namespace": "default",
          "name": "detect_content_using",
          "bodyType": "changes",
          "arguments": [
            "hash"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1876,
                  "lval": "hash",
                  "rval": {
                    "type": "string",
                    "value": "$(hash)"
                  }
                },
                {
                  "line": 1877,
                  "lval": "report_changes",
                  "rval": {
                    "type": "string",
                    "value": "content"
                  }
                },
                {
                  "line": 1878,
                  "lval": "update_hashes",
                  "rval": {
                    "type": "string",
                    "value": "yes"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1883,
          "namespace": "default",
          "name": "noupdate",
          "bodyType": "changes",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1886,
                  "lval": "hash",
                  "rval": {
                    "type": "string",
                    "value": "sha256"
                  }
                },
                {
                  "line": 1887,
                  "lval": "report_changes",
                  "rval": {
                    "type": "string",
                    "value": "content"
                  }
                },
                {
                  "line": 1888,
                  "lval": "update_hashes",
                  "rval": {
                    "type": "string",
                    "value": "no"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1893,
          "namespace": "default",
          "name": "diff",
          "bodyType": "changes",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1897,
                  "lval": "hash",
                  "rval": {
                    "type": "string",
                    "value": "sha256"
                  }
                },
                {
                  "line": 1898,
                  "lval": "report_changes",
                  "rval": {
                    "type": "string",
                    "value": "content"
                  }
                },
                {
                  "line": 1899,
                  "lval": "report_diffs",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                },
                {
                  "line": 1900,
                  "lval": "update_hashes",
                  "rval": {
                    "type": "string",
                    "value": "yes"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1905,
          "namespace": "default",
          "name": "all_changes",
          "bodyType": "changes",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1909,
                  "lval": "hash",
                  "rval": {
                    "type": "string",
                    "value": "sha256"
                  }
                },
                {
                  "line": 1910,
                  "lval": "report_changes",
                  "rval": {
                    "type": "string",
                    "value": "all"
                  }
                },
                {
                  "line": 1911,
                  "lval": "report_diffs",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                },
                {
                  "line": 1912,
                  "lval": "update_hashes",
                  "rval": {
                    "type": "string",
                    "value": "yes"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1917,
          "namespace": "default",
          "name": "diff_noupdate",
          "bodyType": "changes",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1921,
                  "lval": "hash",
                  "rval": {
                    "type": "string",
                    "value": "sha256"
                  }
                },
                {
                  "line": 1922,
                  "lval": "report_changes",
                  "rval": {
                    "type": "string",
                    "value": "content"
                  }
                },
                {
                  "line": 1923,
                  "lval": "report_diffs",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                },
                {
                  "line": 1924,
                  "lval": "update_hashes",
                  "rval": {
                    "type": "string",
                    "value": "no"
                  }
                }
              ]
            }
          ]
        }
      ]
    }