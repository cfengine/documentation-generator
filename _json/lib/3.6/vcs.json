{
      "bundles": [
        {
          "sourcePath": "../masterfiles/lib/3.6/vcs.cf",
          "line": 50,
          "namespace": "default",
          "name": "vcs_common",
          "bundleType": "common",
          "arguments": [],
          "promiseTypes": [
            {
              "line": 53,
              "name": "vars",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 54,
                      "promiser": "inputs",
                      "attributes": [
                        {
                          "line": 56,
                          "lval": "slist",
                          "rval": {
                            "type": "list",
                            "value": [
                              {
                                "type": "string",
                                "value": "$(this.promise_dirname)/common.cf"
                              },
                              {
                                "type": "string",
                                "value": "$(this.promise_dirname)/paths.cf"
                              },
                              {
                                "type": "string",
                                "value": "$(this.promise_dirname)/commands.cf"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/vcs.cf",
          "line": 65,
          "namespace": "default",
          "name": "git_init",
          "bundleType": "agent",
          "arguments": [
            "repo_path"
          ],
          "promiseTypes": [
            {
              "line": 88,
              "name": "classes",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 89,
                      "promiser": "ok_norepo",
                      "attributes": [
                        {
                          "line": 89,
                          "lval": "not",
                          "rval": {
                            "type": "functionCall",
                            "name": "fileexists",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(repo_path)/.git"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 91,
              "name": "methods",
              "contexts": [
                {
                  "name": "ok_norepo",
                  "promises": [
                    {
                      "line": 93,
                      "promiser": "git_init",
                      "attributes": [
                        {
                          "line": 93,
                          "lval": "usebundle",
                          "rval": {
                            "type": "functionCall",
                            "name": "git",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(repo_path)"
                              },
                              {
                                "type": "string",
                                "value": "init"
                              },
                              {
                                "type": "string",
                                "value": ""
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/vcs.cf",
          "line": 96,
          "namespace": "default",
          "name": "git_add",
          "bundleType": "agent",
          "arguments": [
            "repo_path",
            "file"
          ],
          "promiseTypes": [
            {
              "line": 116,
              "name": "classes",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 117,
                      "promiser": "ok_repo",
                      "attributes": [
                        {
                          "line": 117,
                          "lval": "expression",
                          "rval": {
                            "type": "functionCall",
                            "name": "fileexists",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(repo_path)/.git"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 119,
              "name": "methods",
              "contexts": [
                {
                  "name": "ok_repo",
                  "promises": [
                    {
                      "line": 121,
                      "promiser": "git_add",
                      "attributes": [
                        {
                          "line": 121,
                          "lval": "usebundle",
                          "rval": {
                            "type": "functionCall",
                            "name": "git",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(repo_path)"
                              },
                              {
                                "type": "string",
                                "value": "add"
                              },
                              {
                                "type": "string",
                                "value": "$(file)"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/vcs.cf",
          "line": 124,
          "namespace": "default",
          "name": "git_checkout",
          "bundleType": "agent",
          "arguments": [
            "repo_path",
            "branch"
          ],
          "promiseTypes": [
            {
              "line": 144,
              "name": "classes",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 145,
                      "promiser": "ok_repo",
                      "attributes": [
                        {
                          "line": 145,
                          "lval": "expression",
                          "rval": {
                            "type": "functionCall",
                            "name": "fileexists",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(repo_path)/.git"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 147,
              "name": "methods",
              "contexts": [
                {
                  "name": "ok_repo",
                  "promises": [
                    {
                      "line": 149,
                      "promiser": "git_checkout",
                      "attributes": [
                        {
                          "line": 149,
                          "lval": "usebundle",
                          "rval": {
                            "type": "functionCall",
                            "name": "git",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(repo_path)"
                              },
                              {
                                "type": "string",
                                "value": "checkout"
                              },
                              {
                                "type": "string",
                                "value": "$(branch)"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/vcs.cf",
          "line": 152,
          "namespace": "default",
          "name": "git_checkout_new_branch",
          "bundleType": "agent",
          "arguments": [
            "repo_path",
            "new_branch"
          ],
          "promiseTypes": [
            {
              "line": 177,
              "name": "classes",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 178,
                      "promiser": "ok_repo",
                      "attributes": [
                        {
                          "line": 178,
                          "lval": "expression",
                          "rval": {
                            "type": "functionCall",
                            "name": "fileexists",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(repo_path)/.git"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 180,
              "name": "methods",
              "contexts": [
                {
                  "name": "ok_repo",
                  "promises": [
                    {
                      "line": 182,
                      "promiser": "git_checkout",
                      "attributes": [
                        {
                          "line": 182,
                          "lval": "usebundle",
                          "rval": {
                            "type": "functionCall",
                            "name": "git",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(repo_path)"
                              },
                              {
                                "type": "string",
                                "value": "checkout -b"
                              },
                              {
                                "type": "string",
                                "value": "$(branch)"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/vcs.cf",
          "line": 185,
          "namespace": "default",
          "name": "git_clean",
          "bundleType": "agent",
          "arguments": [
            "repo_path"
          ],
          "promiseTypes": [
            {
              "line": 198,
              "name": "methods",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 199,
                      "promiser": "",
                      "attributes": [
                        {
                          "line": 199,
                          "lval": "usebundle",
                          "rval": {
                            "type": "functionCall",
                            "name": "git",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(repo_path)"
                              },
                              {
                                "type": "string",
                                "value": "clean"
                              },
                              {
                                "type": "string",
                                "value": " --force -d"
                              }
                            ]
                          }
                        },
                        {
                          "line": 202,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "To have a clean clone we must remove any untracked files and\n                  directories. These should have all been stashed, but in case\n                  of error we go ahead and clean anyway."
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/vcs.cf",
          "line": 205,
          "namespace": "default",
          "name": "git_stash",
          "bundleType": "agent",
          "arguments": [
            "repo_path",
            "stash_name"
          ],
          "promiseTypes": [
            {
              "line": 219,
              "name": "methods",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 220,
                      "promiser": "",
                      "attributes": [
                        {
                          "line": 220,
                          "lval": "usebundle",
                          "rval": {
                            "type": "functionCall",
                            "name": "git",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(repo_path)"
                              },
                              {
                                "type": "string",
                                "value": "stash"
                              },
                              {
                                "type": "string",
                                "value": "save --quiet --include-untracked \\\"$(stash_name)\\\""
                              }
                            ]
                          }
                        },
                        {
                          "line": 226,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "So that we don\\'t lose any trail of what happend and so that\n                    we don\\'t accidentally delete something important we stash any\n                    changes.\n  Note:\n                      1. This promise will fail if user.email is not set\n                      2. We are respecting ignored files."
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/vcs.cf",
          "line": 229,
          "namespace": "default",
          "name": "git_stash_and_clean",
          "bundleType": "agent",
          "arguments": [
            "repo_path"
          ],
          "promiseTypes": [
            {
              "line": 242,
              "name": "vars",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 243,
                      "promiser": "stash",
                      "attributes": [
                        {
                          "line": 243,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": "CFEngine AUTOSTASH: $(sys.date)"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 245,
              "name": "methods",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 246,
                      "promiser": "",
                      "attributes": [
                        {
                          "line": 246,
                          "lval": "usebundle",
                          "rval": {
                            "type": "functionCall",
                            "name": "git_stash",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(repo_path)"
                              },
                              {
                                "type": "string",
                                "value": "$(stash)"
                              }
                            ]
                          }
                        },
                        {
                          "line": 247,
                          "lval": "classes",
                          "rval": {
                            "type": "functionCall",
                            "name": "scoped_classes_generic",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "bundle"
                              },
                              {
                                "type": "string",
                                "value": "git_stash"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "git_stash_ok",
                  "promises": [
                    {
                      "line": 250,
                      "promiser": "",
                      "attributes": [
                        {
                          "line": 250,
                          "lval": "usebundle",
                          "rval": {
                            "type": "functionCall",
                            "name": "git_clean",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(repo_path)"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 252,
              "name": "reports",
              "contexts": [
                {
                  "name": "git_stash_not_ok",
                  "promises": [
                    {
                      "line": 254,
                      "promiser": "$(this.bundle):: Warning: Not saving changes or cleaning. Git stash failed. Perhaps 'user.email' or 'user.name' is not set.",
                      "attributes": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/vcs.cf",
          "line": 257,
          "namespace": "default",
          "name": "git_commit",
          "bundleType": "agent",
          "arguments": [
            "repo_path",
            "message"
          ],
          "promiseTypes": [
            {
              "line": 277,
              "name": "classes",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 278,
                      "promiser": "ok_repo",
                      "attributes": [
                        {
                          "line": 278,
                          "lval": "expression",
                          "rval": {
                            "type": "functionCall",
                            "name": "fileexists",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(repo_path)/.git"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 280,
              "name": "methods",
              "contexts": [
                {
                  "name": "ok_repo",
                  "promises": [
                    {
                      "line": 282,
                      "promiser": "git_commit",
                      "attributes": [
                        {
                          "line": 282,
                          "lval": "usebundle",
                          "rval": {
                            "type": "functionCall",
                            "name": "git",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(repo_path)"
                              },
                              {
                                "type": "string",
                                "value": "commit"
                              },
                              {
                                "type": "string",
                                "value": "-m \\\"$(message)\\\""
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/vcs.cf",
          "line": 285,
          "namespace": "default",
          "name": "git",
          "bundleType": "agent",
          "arguments": [
            "repo_path",
            "subcmd",
            "args"
          ],
          "promiseTypes": [
            {
              "line": 310,
              "name": "vars",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 311,
                      "promiser": "oneliner",
                      "attributes": [
                        {
                          "line": 311,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": "$(paths.path[git])"
                          }
                        }
                      ]
                    },
                    {
                      "line": 313,
                      "promiser": "repo_uid",
                      "attributes": [
                        {
                          "line": 314,
                          "lval": "string",
                          "rval": {
                            "type": "functionCall",
                            "name": "filestat",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(repo_path)"
                              },
                              {
                                "type": "string",
                                "value": "uid"
                              }
                            ]
                          }
                        },
                        {
                          "line": 316,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "So that we don\\'t mess up permissions, we will just execute\n                    all commands as the current owner of .git"
                          }
                        }
                      ]
                    },
                    {
                      "line": 318,
                      "promiser": "repo_gid",
                      "attributes": [
                        {
                          "line": 319,
                          "lval": "string",
                          "rval": {
                            "type": "functionCall",
                            "name": "filestat",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(repo_path)"
                              },
                              {
                                "type": "string",
                                "value": "gid"
                              }
                            ]
                          }
                        },
                        {
                          "line": 321,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "So that we don\\'t mess up permissions, we will just execute\n                    all commands as the current group of .git"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 323,
              "name": "classes",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 324,
                      "promiser": "am_root",
                      "attributes": [
                        {
                          "line": 324,
                          "lval": "expression",
                          "rval": {
                            "type": "functionCall",
                            "name": "strcmp",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(this.promiser_uid)"
                              },
                              {
                                "type": "string",
                                "value": "0"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 325,
                      "promiser": "need_to_drop",
                      "attributes": [
                        {
                          "line": 325,
                          "lval": "not",
                          "rval": {
                            "type": "functionCall",
                            "name": "strcmp",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(this.promiser_uid)"
                              },
                              {
                                "type": "string",
                                "value": "$(repo_uid)"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 327,
              "name": "commands",
              "contexts": [
                {
                  "name": "am_root.need_to_drop",
                  "promises": [
                    {
                      "line": 329,
                      "promiser": "$(oneliner)",
                      "attributes": [
                        {
                          "line": 330,
                          "lval": "args",
                          "rval": {
                            "type": "string",
                            "value": "$(subcmd) $(args)"
                          }
                        },
                        {
                          "line": 331,
                          "lval": "classes",
                          "rval": {
                            "type": "symbol",
                            "value": "kept_successful_command"
                          }
                        },
                        {
                          "line": 332,
                          "lval": "contain",
                          "rval": {
                            "type": "functionCall",
                            "name": "setuidgid_dir",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(repo_uid)"
                              },
                              {
                                "type": "string",
                                "value": "$(repo_gid)"
                              },
                              {
                                "type": "string",
                                "value": "$(repo_path)"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "!am_root|!need_to_drop",
                  "promises": [
                    {
                      "line": 335,
                      "promiser": "$(oneliner)",
                      "attributes": [
                        {
                          "line": 336,
                          "lval": "args",
                          "rval": {
                            "type": "string",
                            "value": "$(subcmd) $(args)"
                          }
                        },
                        {
                          "line": 337,
                          "lval": "classes",
                          "rval": {
                            "type": "symbol",
                            "value": "kept_successful_command"
                          }
                        },
                        {
                          "line": 338,
                          "lval": "contain",
                          "rval": {
                            "type": "functionCall",
                            "name": "in_dir",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(repo_path)"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 340,
              "name": "reports",
              "contexts": [
                {
                  "name": "inform_mode.am_root.need_to_drop",
                  "promises": [
                    {
                      "line": 342,
                      "promiser": "$(this.bundle): with dropped privileges to uid '$(repo_uid)' and gid '$(repo_gid)', in directory '$(repo_path)', running Git command '$(oneliner) $(subcmd) $(args)'",
                      "attributes": []
                    }
                  ]
                },
                {
                  "name": "inform_mode.(!am_root|!need_to_drop)",
                  "promises": [
                    {
                      "line": 345,
                      "promiser": "$(this.bundle): with current privileges, in directory '$(repo_path)', running Git command '$(oneliner) $(subcmd) $(args)'",
                      "attributes": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "bodies": [
        {
          "sourcePath": "../masterfiles/lib/3.6/vcs.cf",
          "line": 59,
          "namespace": "default",
          "name": "control",
          "bodyType": "file",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 62,
                  "lval": "inputs",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "@(vcs_common.inputs)"
                      }
                    ]
                  }
                }
              ]
            }
          ]
        }
      ]
    }